!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AGO_BUFFER_SYNC_FLAG_DIRTY_BY_COMMIT	ago/ago_internal.h	114;"	d
AGO_BUFFER_SYNC_FLAG_DIRTY_BY_NODE	ago/ago_internal.h	115;"	d
AGO_BUFFER_SYNC_FLAG_DIRTY_BY_NODE_CL	ago/ago_internal.h	116;"	d
AGO_BUFFER_SYNC_FLAG_DIRTY_MASK	ago/ago_internal.h	113;"	d
AGO_BUFFER_SYNC_FLAG_DIRTY_SYNCHED	ago/ago_internal.h	117;"	d
AGO_ERROR_FEATURE_NOT_IMPLEMENTED	ago/ago_internal.h	62;"	d
AGO_ERROR_HAFCPU_NOT_IMPLEMENTED	ago/ago_internal.h	64;"	d
AGO_ERROR_KERNEL_NOT_IMPLEMENTED	ago/ago_internal.h	63;"	d
AGO_GRAPH_OPTIMIZER_FLAGS_DEFAULT	ago/ago_internal.h	126;"	d
AGO_GRAPH_OPTIMIZER_FLAG_NO_CONVERT_8BIT_TO_1BIT	ago/ago_internal.h	124;"	d
AGO_GRAPH_OPTIMIZER_FLAG_NO_DIVIDE	ago/ago_internal.h	120;"	d
AGO_GRAPH_OPTIMIZER_FLAG_NO_NODE_MERGE	ago/ago_internal.h	123;"	d
AGO_GRAPH_OPTIMIZER_FLAG_NO_REMOVE_COPY_NODES	ago/ago_internal.h	121;"	d
AGO_GRAPH_OPTIMIZER_FLAG_NO_REMOVE_UNUSED_OUTPUTS	ago/ago_internal.h	122;"	d
AGO_GRAPH_OPTIMIZER_FLAG_NO_SUPERNODE_MERGE	ago/ago_internal.h	125;"	d
AGO_KERNEL_ARG_INPUT_FLAG	ago/ago_internal.h	90;"	d
AGO_KERNEL_ARG_OPTIONAL_FLAG	ago/ago_internal.h	92;"	d
AGO_KERNEL_ARG_OUTPUT_FLAG	ago/ago_internal.h	91;"	d
AGO_KERNEL_ENTRY	ago/ago_kernel_list.cpp	169;"	d	file:
AGO_KERNEL_ENTRY	ago/ago_kernel_list.cpp	498;"	d	file:
AGO_KERNEL_FLAG_DEVICE_CPU	ago/ago_internal.h	72;"	d
AGO_KERNEL_FLAG_DEVICE_GPU	ago/ago_internal.h	73;"	d
AGO_KERNEL_FLAG_DEVICE_MASK	ago/ago_internal.h	71;"	d
AGO_KERNEL_FLAG_GPU_INTEG_FULL	ago/ago_internal.h	76;"	d
AGO_KERNEL_FLAG_GPU_INTEG_M2R	ago/ago_internal.h	77;"	d
AGO_KERNEL_FLAG_GPU_INTEG_MASK	ago/ago_internal.h	74;"	d
AGO_KERNEL_FLAG_GPU_INTEG_NONE	ago/ago_internal.h	75;"	d
AGO_KERNEL_FLAG_GPU_INTEG_R2R	ago/ago_internal.h	78;"	d
AGO_KERNEL_FLAG_GROUP_AMDLL	ago/ago_internal.h	68;"	d
AGO_KERNEL_FLAG_GROUP_MASK	ago/ago_internal.h	67;"	d
AGO_KERNEL_FLAG_GROUP_OVX10	ago/ago_internal.h	69;"	d
AGO_KERNEL_FLAG_GROUP_USER	ago/ago_internal.h	70;"	d
AGO_KERNEL_FLAG_SUBGRAPH	ago/ago_internal.h	79;"	d
AGO_KERNEL_FLAG_VALID_RECT_RESET	ago/ago_internal.h	80;"	d
AGO_KERNEL_OP_TYPE_ELEMENT_WISE	ago/ago_internal.h	96;"	d
AGO_KERNEL_OP_TYPE_FIXED_NEIGHBORS	ago/ago_internal.h	97;"	d
AGO_KERNEL_OP_TYPE_UNKNOWN	ago/ago_internal.h	95;"	d
AGO_KERNEL_TARGET_DEFAULT	ago/ago_internal.h	84;"	d
AGO_KERNEL_TARGET_DEFAULT	ago/ago_internal.h	86;"	d
AGO_MAGIC_INVALID	ago/ago_internal.h	101;"	d
AGO_MAGIC_VALID	ago/ago_internal.h	100;"	d
AGO_MAX_CONVOLUTION_DIM	ago/ago_internal.h	104;"	d
AGO_MAX_DEPTH_FROM_DELAY_OBJECT	ago/ago_internal.h	58;"	d
AGO_MAX_PARAMS	include/vx_ext_amd.h	40;"	d
AGO_MAX_TENSOR_DIMENSIONS	ago/ago_internal.h	106;"	d
AGO_MEMORY_ALLOC_EXTRA_PADDING	ago/ago_internal.h	57;"	d
AGO_MERGE_RULE_MAX_FIND	include/vx_ext_amd.h	41;"	d
AGO_MERGE_RULE_MAX_REPLACE	include/vx_ext_amd.h	42;"	d
AGO_MERGE_RULE_SOLITARY_FLAG	include/vx_ext_amd.h	43;"	d
AGO_OPENCL_WORKGROUP_SIZE_0	ago/ago_internal.h	45;"	d
AGO_OPENCL_WORKGROUP_SIZE_1	ago/ago_internal.h	46;"	d
AGO_OPENCL_WORKGROUP_SIZE_2	ago/ago_internal.h	47;"	d
AGO_OPTICALFLOWPYRLK_MAX_DIM	ago/ago_internal.h	105;"	d
AGO_REMAP_CONSTANT_BORDER_VALUE	ago/ago_internal.h	110;"	d
AGO_REMAP_FRACTIONAL_BITS	ago/ago_internal.h	109;"	d
AGO_SUCCESS	ago/ago_internal.h	61;"	d
AGO_TARGET_AFFINITY_CPU	include/vx_ext_amd.h	35;"	d
AGO_TARGET_AFFINITY_GPU	include/vx_ext_amd.h	36;"	d
AGO_TARGET_AFFINITY_GPU_INFO_DEVICE_MASK	include/vx_ext_amd.h	44;"	d
AGO_TARGET_AFFINITY_GPU_INFO_SVM_AS_CLMEM	include/vx_ext_amd.h	47;"	d
AGO_TARGET_AFFINITY_GPU_INFO_SVM_ENABLE	include/vx_ext_amd.h	46;"	d
AGO_TARGET_AFFINITY_GPU_INFO_SVM_MASK	include/vx_ext_amd.h	45;"	d
AGO_TARGET_AFFINITY_GPU_INFO_SVM_NO_FGS	include/vx_ext_amd.h	48;"	d
AGO_TYPE_CANNY_STACK	include/vx_ext_amd.h	/^	AGO_TYPE_CANNY_STACK,                                    \/\/ AGO data structure for AGO Canny kernels$/;"	e	enum:ago_type_public_e
AGO_TYPE_KEYPOINT_XYS	include/vx_ext_amd.h	/^	AGO_TYPE_KEYPOINT_XYS = VX_TYPE_VENDOR_STRUCT_START,     \/\/ AGO struct data type for keypoint XYS$/;"	e	enum:ago_type_public_e
AGO_TYPE_MEANSTDDEV_DATA	include/vx_ext_amd.h	/^	AGO_TYPE_MEANSTDDEV_DATA = VX_TYPE_VENDOR_OBJECT_START,  \/\/ AGO data structure for AGO MeanStdDev kernels$/;"	e	enum:ago_type_public_e
AGO_TYPE_MINMAXLOC_DATA	include/vx_ext_amd.h	/^	AGO_TYPE_MINMAXLOC_DATA,                                 \/\/ AGO data structure for AGO MinMaxLoc kernels$/;"	e	enum:ago_type_public_e
AGO_TYPE_SCALE_MATRIX	include/vx_ext_amd.h	/^	AGO_TYPE_SCALE_MATRIX,                                   \/\/ AGO data structure for AGO Scale kernels$/;"	e	enum:ago_type_public_e
AGO_VERSION	ago/ago_internal.h	37;"	d
AIN	ago/ago_kernel_list.cpp	27;"	d	file:
AINOUT	ago/ago_kernel_list.cpp	28;"	d	file:
AINOUT_AIN	ago/ago_kernel_list.cpp	69;"	d	file:
AINOUT_AINx2	ago/ago_kernel_list.cpp	70;"	d	file:
AIN_AINOUT	ago/ago_kernel_list.cpp	41;"	d	file:
AIN_AOPTOUTx2	ago/ago_kernel_list.cpp	38;"	d	file:
AIN_AOUT	ago/ago_kernel_list.cpp	32;"	d	file:
AIN_AOUT_AIN	ago/ago_kernel_list.cpp	39;"	d	file:
AIN_AOUT_AINx2	ago/ago_kernel_list.cpp	44;"	d	file:
AIN_AOUTx2	ago/ago_kernel_list.cpp	40;"	d	file:
AIN_AOUTx2_AOPTOUTx4	ago/ago_kernel_list.cpp	43;"	d	file:
AINx2_AINOUT	ago/ago_kernel_list.cpp	42;"	d	file:
AINx2_AOPTINx2_AOUT	ago/ago_kernel_list.cpp	37;"	d	file:
AINx2_AOUT	ago/ago_kernel_list.cpp	33;"	d	file:
AINx3_AOUT	ago/ago_kernel_list.cpp	34;"	d	file:
AINx3_AOUT_AOPTOUT	ago/ago_kernel_list.cpp	45;"	d	file:
AINx4_AOUT	ago/ago_kernel_list.cpp	35;"	d	file:
AINx4_AOUT_AINx5	ago/ago_kernel_list.cpp	47;"	d	file:
AINx5_AOUT	ago/ago_kernel_list.cpp	36;"	d	file:
AINx6_AOUT_AOPTOUT	ago/ago_kernel_list.cpp	46;"	d	file:
ALIGN16	ago/ago_internal.h	177;"	d
ALIGN32	ago/ago_internal.h	178;"	d
ALIGN32PTR	ago/ago_internal.h	179;"	d
AOPTIN	ago/ago_kernel_list.cpp	30;"	d	file:
AOPTOUT	ago/ago_kernel_list.cpp	31;"	d	file:
AOUT	ago/ago_kernel_list.cpp	29;"	d	file:
AOUT_AIN	ago/ago_kernel_list.cpp	48;"	d	file:
AOUT_AIN_AOPTIN	ago/ago_kernel_list.cpp	49;"	d	file:
AOUT_AIN_AOPTINx8	ago/ago_kernel_list.cpp	68;"	d	file:
AOUT_AINx2	ago/ago_kernel_list.cpp	50;"	d	file:
AOUT_AINx2_AOPTIN	ago/ago_kernel_list.cpp	51;"	d	file:
AOUT_AINx3	ago/ago_kernel_list.cpp	52;"	d	file:
AOUT_AINx4	ago/ago_kernel_list.cpp	53;"	d	file:
AOUT_AINx8	ago/ago_kernel_list.cpp	54;"	d	file:
AOUT_AINx9	ago/ago_kernel_list.cpp	55;"	d	file:
AOUT_AOPTOUT_AINx2	ago/ago_kernel_list.cpp	75;"	d	file:
AOUT_AOPTOUT_AINx4	ago/ago_kernel_list.cpp	76;"	d	file:
AOUT_AOPTOUTx2_AINx2	ago/ago_kernel_list.cpp	77;"	d	file:
AOUTx2_AIN	ago/ago_kernel_list.cpp	56;"	d	file:
AOUTx2_AIN_AOPTINx7	ago/ago_kernel_list.cpp	65;"	d	file:
AOUTx2_AINx2	ago/ago_kernel_list.cpp	57;"	d	file:
AOUTx2_AINx2_AOPTIN	ago/ago_kernel_list.cpp	58;"	d	file:
AOUTx2_AINx2_AOPTINx6	ago/ago_kernel_list.cpp	67;"	d	file:
AOUTx2_AINx3	ago/ago_kernel_list.cpp	59;"	d	file:
AOUTx2_AOPTOUTx2_AINx2	ago/ago_kernel_list.cpp	78;"	d	file:
AOUTx3_AIN	ago/ago_kernel_list.cpp	60;"	d	file:
AOUTx3_AIN_AOPTINx6	ago/ago_kernel_list.cpp	66;"	d	file:
AOUTx3_AINx2	ago/ago_kernel_list.cpp	61;"	d	file:
AOUTx3_AINx2_AOPTINx5	ago/ago_kernel_list.cpp	71;"	d	file:
AOUTx3_AINx3	ago/ago_kernel_list.cpp	64;"	d	file:
AOUTx4_AIN	ago/ago_kernel_list.cpp	62;"	d	file:
AOUTx4_AINx2	ago/ago_kernel_list.cpp	63;"	d	file:
AOUTx4_AINx2_AOPTINx4	ago/ago_kernel_list.cpp	72;"	d	file:
AOUTx5_AINx2_AOPTINx2	ago/ago_kernel_list.cpp	73;"	d	file:
AOUTx6_AINx2_AOPTINx2	ago/ago_kernel_list.cpp	74;"	d	file:
ARG_GET_CHILD	ago/ago_drama_remove.cpp	34;"	d	file:
ARG_HAS_CHILD	ago/ago_drama_remove.cpp	33;"	d	file:
ARG_INDEX	ago/ago_drama_remove.cpp	32;"	d	file:
ARG_IS_BYTE2U1	ago/ago_drama_remove.cpp	36;"	d	file:
ARG_IS_SOLITARY	ago/ago_drama_remove.cpp	35;"	d	file:
ARG_IS_WRITEONLY	ago/ago_drama_remove.cpp	37;"	d	file:
ATTR_ALIGN	ago/ago_platform.h	92;"	d
ATYPE_AAA	ago/ago_kernel_list.cpp	124;"	d	file:
ATYPE_AAAAS	ago/ago_kernel_list.cpp	125;"	d	file:
ATYPE_AAIISSSSS	ago/ago_kernel_list.cpp	126;"	d	file:
ATYPE_AASSIm	ago/ago_kernel_list.cpp	141;"	d	file:
ATYPE_AI	ago/ago_kernel_list.cpp	112;"	d	file:
ATYPE_AIS	ago/ago_kernel_list.cpp	113;"	d	file:
ATYPE_APPAASSSSS	ago/ago_kernel_list.cpp	127;"	d	file:
ATYPE_ASAAAAAAAA	ago/ago_kernel_list.cpp	128;"	d	file:
ATYPE_ASASSS	ago/ago_kernel_list.cpp	115;"	d	file:
ATYPE_ASIS	ago/ago_kernel_list.cpp	114;"	d	file:
ATYPE_ASIm	ago/ago_kernel_list.cpp	139;"	d	file:
ATYPE_ASSIm	ago/ago_kernel_list.cpp	140;"	d	file:
ATYPE_DDDDDDDDDD	ago/ago_kernel_list.cpp	134;"	d	file:
ATYPE_DI	ago/ago_kernel_list.cpp	130;"	d	file:
ATYPE_I	ago/ago_kernel_list.cpp	81;"	d	file:
ATYPE_ICI	ago/ago_kernel_list.cpp	98;"	d	file:
ATYPE_ID	ago/ago_kernel_list.cpp	91;"	d	file:
ATYPE_II	ago/ago_kernel_list.cpp	82;"	d	file:
ATYPE_IIC	ago/ago_kernel_list.cpp	96;"	d	file:
ATYPE_III	ago/ago_kernel_list.cpp	83;"	d	file:
ATYPE_IIICC	ago/ago_kernel_list.cpp	97;"	d	file:
ATYPE_IIII	ago/ago_kernel_list.cpp	84;"	d	file:
ATYPE_IIIII	ago/ago_kernel_list.cpp	85;"	d	file:
ATYPE_IIIIII	ago/ago_kernel_list.cpp	86;"	d	file:
ATYPE_IIIMM	ago/ago_kernel_list.cpp	120;"	d	file:
ATYPE_IIIS	ago/ago_kernel_list.cpp	111;"	d	file:
ATYPE_IIL	ago/ago_kernel_list.cpp	89;"	d	file:
ATYPE_IIM	ago/ago_kernel_list.cpp	119;"	d	file:
ATYPE_IIMS	ago/ago_kernel_list.cpp	122;"	d	file:
ATYPE_IIR	ago/ago_kernel_list.cpp	118;"	d	file:
ATYPE_IIRS	ago/ago_kernel_list.cpp	121;"	d	file:
ATYPE_IIS	ago/ago_kernel_list.cpp	87;"	d	file:
ATYPE_IISI	ago/ago_kernel_list.cpp	102;"	d	file:
ATYPE_IISS	ago/ago_kernel_list.cpp	103;"	d	file:
ATYPE_IISSS	ago/ago_kernel_list.cpp	104;"	d	file:
ATYPE_IISSSI	ago/ago_kernel_list.cpp	101;"	d	file:
ATYPE_IIT	ago/ago_kernel_list.cpp	93;"	d	file:
ATYPE_IITS	ago/ago_kernel_list.cpp	94;"	d	file:
ATYPE_IIx	ago/ago_kernel_list.cpp	123;"	d	file:
ATYPE_ILI	ago/ago_kernel_list.cpp	90;"	d	file:
ATYPE_IMSI	ago/ago_kernel_list.cpp	106;"	d	file:
ATYPE_IP	ago/ago_kernel_list.cpp	99;"	d	file:
ATYPE_IRSI	ago/ago_kernel_list.cpp	110;"	d	file:
ATYPE_ISI	ago/ago_kernel_list.cpp	88;"	d	file:
ATYPE_ISS	ago/ago_kernel_list.cpp	92;"	d	file:
ATYPE_ISSAASS	ago/ago_kernel_list.cpp	100;"	d	file:
ATYPE_ISSAS	ago/ago_kernel_list.cpp	108;"	d	file:
ATYPE_ISSSSSAS	ago/ago_kernel_list.cpp	107;"	d	file:
ATYPE_ITI	ago/ago_kernel_list.cpp	95;"	d	file:
ATYPE_ITSSI	ago/ago_kernel_list.cpp	105;"	d	file:
ATYPE_Ic	ago/ago_kernel_list.cpp	129;"	d	file:
ATYPE_IcIT	ago/ago_kernel_list.cpp	116;"	d	file:
ATYPE_IcITS	ago/ago_kernel_list.cpp	117;"	d	file:
ATYPE_LDDDDDDDDD	ago/ago_kernel_list.cpp	133;"	d	file:
ATYPE_PPAAASSSSS	ago/ago_kernel_list.cpp	109;"	d	file:
ATYPE_RR	ago/ago_kernel_list.cpp	143;"	d	file:
ATYPE_RSRR	ago/ago_kernel_list.cpp	145;"	d	file:
ATYPE_SAAAAAAAAA	ago/ago_kernel_list.cpp	142;"	d	file:
ATYPE_SIm	ago/ago_kernel_list.cpp	137;"	d	file:
ATYPE_SRRR	ago/ago_kernel_list.cpp	144;"	d	file:
ATYPE_SSIm	ago/ago_kernel_list.cpp	138;"	d	file:
ATYPE_SSmmmmmmmm	ago/ago_kernel_list.cpp	136;"	d	file:
ATYPE_SSssssssss	ago/ago_kernel_list.cpp	135;"	d	file:
ATYPE_mI	ago/ago_kernel_list.cpp	131;"	d	file:
ATYPE_sI	ago/ago_kernel_list.cpp	132;"	d	file:
AddToTheSortedKeypointList	ago/ago_haf_cpu_harris.cpp	/^void AddToTheSortedKeypointList(vx_uint32 listCapacity, vx_keypoint_t * pList, vx_uint32 * cornerCount, vx_keypoint_t itemToBeAdded)$/;"	f
AgoAllocInfo	ago/ago_internal.h	/^struct AgoAllocInfo {$/;"	s
AgoConfigArray	ago/ago_internal.h	/^struct AgoConfigArray {$/;"	s
AgoConfigCannyStack	ago/ago_internal.h	/^struct AgoConfigCannyStack {$/;"	s
AgoConfigConvolution	ago/ago_internal.h	/^struct AgoConfigConvolution {$/;"	s
AgoConfigDelay	ago/ago_internal.h	/^struct AgoConfigDelay {$/;"	s
AgoConfigDistribution	ago/ago_internal.h	/^struct AgoConfigDistribution {$/;"	s
AgoConfigImage	ago/ago_internal.h	/^struct AgoConfigImage {$/;"	s
AgoConfigLut	ago/ago_internal.h	/^struct AgoConfigLut {$/;"	s
AgoConfigMatrix	ago/ago_internal.h	/^struct AgoConfigMatrix {$/;"	s
AgoConfigPyramid	ago/ago_internal.h	/^struct AgoConfigPyramid {$/;"	s
AgoConfigRemap	ago/ago_internal.h	/^struct AgoConfigRemap {$/;"	s
AgoConfigScalar	ago/ago_internal.h	/^struct AgoConfigScalar {$/;"	s
AgoConfigScaleMatrix	ago/ago_internal.h	/^struct AgoConfigScaleMatrix {$/;"	s
AgoConfigTensor	ago/ago_internal.h	/^struct AgoConfigTensor {$/;"	s
AgoConfigThreshold	ago/ago_internal.h	/^struct AgoConfigThreshold {$/;"	s
AgoContext	ago/ago_internal.h	/^struct AgoContext {$/;"	s
AgoContext	ago/ago_internal.h	185;"	d
AgoContext	ago/ago_util.cpp	/^AgoContext::AgoContext()$/;"	f	class:AgoContext
AgoContextTextMacroInfo	include/vx_ext_amd.h	/^} AgoContextTextMacroInfo;$/;"	t	typeref:struct:__anon27
AgoData	ago/ago_internal.h	/^struct AgoData {$/;"	s
AgoData	ago/ago_util.cpp	/^AgoData::AgoData()$/;"	f	class:AgoData
AgoDataList	ago/ago_internal.h	/^struct AgoDataList {$/;"	s
AgoGraph	ago/ago_internal.h	/^struct AgoGraph {$/;"	s
AgoGraph	ago/ago_internal.h	186;"	d
AgoGraph	ago/ago_util.cpp	/^AgoGraph::AgoGraph()$/;"	f	class:AgoGraph
AgoGraphExportInfo	include/vx_ext_amd.h	/^} AgoGraphExportInfo;$/;"	t	typeref:struct:__anon29
AgoGraphImportInfo	include/vx_ext_amd.h	/^} AgoGraphImportInfo;$/;"	t	typeref:struct:__anon28
AgoGraphList	ago/ago_internal.h	/^struct AgoGraphList {$/;"	s
AgoGraphPerfInternalInfo	include/vx_ext_amd.h	/^} AgoGraphPerfInternalInfo;$/;"	t	typeref:struct:__anon30
AgoGraphPerfInternalInfo_	ago/ago_internal.h	/^	struct AgoGraphPerfInternalInfo_ { \/\/ shall be identical to AgoGraphPerfInternalInfo in amd_ext_amd.h$/;"	s	struct:AgoGraph
AgoImageFormatDescItem	ago/ago_internal.h	/^struct AgoImageFormatDescItem {$/;"	s
AgoImageFormatDescription	include/vx_ext_amd.h	/^} AgoImageFormatDescription;$/;"	t	typeref:struct:__anon25
AgoImageU8toU1Rule	ago/ago_drama_remove.cpp	/^} AgoImageU8toU1Rule;$/;"	t	typeref:struct:AgoImageU8toU1Rule_t	file:
AgoImageU8toU1Rule_t	ago/ago_drama_remove.cpp	/^typedef struct AgoImageU8toU1Rule_t {$/;"	s	file:
AgoKernel	ago/ago_internal.h	/^struct AgoKernel {$/;"	s
AgoKernel	ago/ago_internal.h	187;"	d
AgoKernel	ago/ago_util.cpp	/^AgoKernel::AgoKernel()$/;"	f	class:AgoKernel
AgoKernelCommand	ago/ago_internal.h	/^} AgoKernelCommand;$/;"	t	typeref:enum:__anon2
AgoKernelList	ago/ago_internal.h	/^struct AgoKernelList {$/;"	s
AgoKernelOpenclBufferUpdateInfo	include/vx_ext_amd.h	/^} AgoKernelOpenclBufferUpdateInfo;$/;"	t	typeref:struct:__anon33
AgoMetaFormat	ago/ago_internal.h	/^struct AgoMetaFormat {$/;"	s
AgoMetaFormat	ago/ago_internal.h	190;"	d
AgoMetaFormat	ago/ago_util.cpp	/^AgoMetaFormat::AgoMetaFormat()$/;"	f	class:AgoMetaFormat
AgoNode	ago/ago_internal.h	/^struct AgoNode {$/;"	s
AgoNode	ago/ago_internal.h	188;"	d
AgoNode	ago/ago_util.cpp	/^AgoNode::AgoNode()$/;"	f	class:AgoNode
AgoNodeList	ago/ago_internal.h	/^struct AgoNodeList {$/;"	s
AgoNodeMergeRule	include/vx_ext_amd.h	/^} AgoNodeMergeRule;$/;"	t	typeref:struct:AgoNodeMergeRule_t
AgoNodeMergeRule_t	include/vx_ext_amd.h	/^typedef struct AgoNodeMergeRule_t {$/;"	s
AgoParameter	ago/ago_internal.h	/^struct AgoParameter {$/;"	s
AgoParameter	ago/ago_internal.h	189;"	d
AgoParameter	ago/ago_util.cpp	/^AgoParameter::AgoParameter()$/;"	f	class:AgoParameter
AgoProfileEntry	ago/ago_internal.h	/^struct AgoProfileEntry {$/;"	s
AgoProfileEntryType	ago/ago_internal.h	/^} AgoProfileEntryType;$/;"	t	typeref:enum:__anon3
AgoReference	ago/ago_internal.h	/^struct AgoReference {$/;"	s
AgoReference	ago/ago_internal.h	184;"	d
AgoReference	ago/ago_util.cpp	/^AgoReference::AgoReference()$/;"	f	class:AgoReference
AgoSuperNode	ago/ago_internal.h	/^struct AgoSuperNode {$/;"	s
AgoSuperNode	ago/ago_util.cpp	/^AgoSuperNode::AgoSuperNode()$/;"	f	class:AgoSuperNode
AgoSuperNodeDataInfo	ago/ago_internal.h	/^struct AgoSuperNodeDataInfo {$/;"	s
AgoTargetAffinityInfo	include/vx_ext_amd.h	/^} AgoTargetAffinityInfo;$/;"	t	typeref:struct:__anon26
AgoTargetAffinityInfo_	ago/ago_internal.h	/^struct AgoTargetAffinityInfo_ { \/\/ NOTE: make sure that this data structure is identical to AgoTargetAffinityInfo in vx_amd_ext.h$/;"	s
AgoUserStruct	ago/ago_internal.h	/^struct AgoUserStruct {$/;"	s
BOOL	ago/ago_platform.h	/^typedef int BOOL;$/;"	t
BYTE2U1	ago/ago_drama_remove.cpp	30;"	d	file:
CAST_S16	ago/ago_haf_cpu.h	31;"	d
CAgoLock	ago/ago_internal.h	/^	CAgoLock(CRITICAL_SECTION& cs) { m_cs = &cs; EnterCriticalSection(m_cs); }$/;"	f	class:CAgoLock
CAgoLock	ago/ago_internal.h	/^class CAgoLock {$/;"	c
CAgoLockGlobalContext	ago/ago_internal.h	/^	CAgoLockGlobalContext() { agoLockGlobalContext(); }$/;"	f	class:CAgoLockGlobalContext
CAgoLockGlobalContext	ago/ago_internal.h	/^class CAgoLockGlobalContext {$/;"	c
CHILD	ago/ago_drama_remove.cpp	28;"	d	file:
CMAKE_BINARY_DIR	Makefile	/^CMAKE_BINARY_DIR = \/home\/venomfate\/workspace\/office\/verisilicon\/amd_imp\/openvx_amd_implementation\/amdovx-core$/;"	m
CMAKE_COMMAND	Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	Makefile	/^CMAKE_SOURCE_DIR = \/home\/venomfate\/workspace\/office\/verisilicon\/amd_imp\/openvx_amd_implementation\/amdovx-core$/;"	m
CONFIG_OPENCL_SVM_AS_CLMEM	ago/ago_internal.h	151;"	d
CONFIG_OPENCL_SVM_AS_FGS	ago/ago_internal.h	150;"	d
CONFIG_OPENCL_SVM_ENABLE	ago/ago_internal.h	149;"	d
CONFIG_OPENCL_SVM_MASK	ago/ago_internal.h	148;"	d
CONFIG_OPENCL_USE_1_2	ago/ago_internal.h	146;"	d
CONFIG_THREAD_DEFAULT	ago/ago_internal.h	158;"	d
CONST_0000FFFF	ago/ago_haf_cpu_geometric.cpp	/^static const __m128i CONST_0000FFFF = _mm_set1_epi32((int) 0x0000FFFF);$/;"	v	file:
CONST_3	ago/ago_haf_cpu_geometric.cpp	/^static const __m128i CONST_3		= _mm_set1_epi16((short) 3);$/;"	v	file:
CONST_7	ago/ago_haf_cpu_geometric.cpp	/^static const __m128i CONST_7		= _mm_set1_epi16((short) 7);$/;"	v	file:
CONST_FFFF	ago/ago_haf_cpu_geometric.cpp	/^static const __m128i CONST_FFFF		= _mm_set1_epi16((short) 0xFFFF);$/;"	v	file:
CRITICAL_SECTION	ago/ago_platform.h	/^typedef void * CRITICAL_SECTION;$/;"	t
CloseHandle	ago/ago_platform.cpp	/^void CloseHandle(HANDLE h)$/;"	f
CompareAndSwap	ago/ago_haf_cpu_filter.cpp	/^static inline void CompareAndSwap(__m128i& p1, __m128i& p2)$/;"	f	file:
ComputeSharr	ago/ago_haf_cpu_opticalflow.cpp	/^static void ComputeSharr($/;"	f	file:
CreateSemaphore	ago/ago_platform.cpp	/^HANDLE CreateSemaphore(void *, LONG, LONG, void *)$/;"	f
CreateThread	ago/ago_platform.cpp	/^HANDLE CreateThread(void *, size_t dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, void *)$/;"	f
DATA_OPENCL_ARRAY_OFFSET	ago/ago_internal.h	144;"	d
DATA_OPENCL_FLAG_BUFFER	ago/ago_internal.h	135;"	d
DATA_OPENCL_FLAG_DISCARD_PARAM	ago/ago_internal.h	139;"	d
DATA_OPENCL_FLAG_NEED_LOAD_M2R	ago/ago_internal.h	137;"	d
DATA_OPENCL_FLAG_NEED_LOAD_R2R	ago/ago_internal.h	136;"	d
DATA_OPENCL_FLAG_NEED_LOCAL	ago/ago_internal.h	138;"	d
DATA_OPENCL_FLAG_PASS_BY_VALUE	ago/ago_internal.h	140;"	d
DECL_ALIGN	ago/ago_platform.h	91;"	d
DESCALE	ago/ago_haf_cpu_opticalflow.cpp	57;"	d	file:
DWORD	ago/ago_platform.h	/^typedef unsigned long DWORD;$/;"	t
DeleteCriticalSection	ago/ago_platform.cpp	/^void DeleteCriticalSection(CRITICAL_SECTION cs)$/;"	f
DetectRectOverlap	ago/ago_drama.cpp	/^static bool DetectRectOverlap(vx_rectangle_t& a, vx_rectangle_t& b)$/;"	f	file:
ENABLE_DEBUG_DUMP_CL_BUFFERS	ago/ago_util_opencl.cpp	28;"	d	file:
ENABLE_DEBUG_MESSAGES	ago/ago_internal.h	40;"	d
ENABLE_FAST_MEDIAN_3x3	ago/ago_haf_gpu_special_filters.cpp	28;"	d	file:
ENABLE_LOCAL_DEBUG_MESSAGES	ago/ago_util_opencl.cpp	27;"	d	file:
ENABLE_LOG_MESSAGES_DEFAULT	ago/ago_internal.h	42;"	d
ENABLE_OPENCL	ago/ago_platform.h	29;"	d
ENABLE_UINT4_FOR_LOCAL_MEMORY_LOADS	ago/ago_haf_gpu_common.cpp	28;"	d	file:
ENABLE_UINT8_FOR_LOCAL_MEMORY_LOADS	ago/ago_haf_gpu_common.cpp	29;"	d	file:
EQUALS	Makefile	/^EQUALS = =$/;"	m
EnterCriticalSection	ago/ago_platform.cpp	/^void EnterCriticalSection(CRITICAL_SECTION cs)$/;"	f
Epsilon	ago/ago_haf_cpu_opticalflow.cpp	/^static const float Epsilon = 1.0e-07F;$/;"	v	file:
FLT_SCALE	ago/ago_haf_cpu_opticalflow.cpp	/^static const float FLT_SCALE = 1.f \/ (1 << 20);$/;"	v	file:
FORMAT_STR	ago/ago_internal.h	168;"	d
FP_BITS	ago/ago_haf_cpu_geometric.cpp	56;"	d	file:
FP_BITS	ago/ago_haf_cpu_pyramid.cpp	293;"	d	file:
FP_MUL	ago/ago_haf_cpu_geometric.cpp	57;"	d	file:
FP_MUL	ago/ago_haf_cpu_pyramid.cpp	294;"	d	file:
FP_ROUND	ago/ago_haf_cpu_geometric.cpp	58;"	d	file:
FP_ROUND	ago/ago_haf_cpu_pyramid.cpp	295;"	d	file:
GxGx	ago/ago_haf_cpu_harris.cpp	/^	vx_float32 GxGx;$/;"	m	struct:__anon10	file:
GxGy	ago/ago_haf_cpu_harris.cpp	/^	vx_float32 GxGy;$/;"	m	struct:__anon10	file:
GyGy	ago/ago_haf_cpu_harris.cpp	/^	vx_float32 GyGy;$/;"	m	struct:__anon10	file:
HANDLE	ago/ago_platform.h	/^typedef void * HANDLE;$/;"	t
HafCpu_AbsDiff_S16_S16S16_Sat	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_AbsDiff_S16_S16S16_Sat$/;"	f
HafCpu_AbsDiff_U8_U8U8	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_AbsDiff_U8_U8U8$/;"	f
HafCpu_AccumulateSquared_S16_S16U8_Sat	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_AccumulateSquared_S16_S16U8_Sat$/;"	f
HafCpu_AccumulateWeighted_U8_U8U8	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_AccumulateWeighted_U8_U8U8$/;"	f
HafCpu_Accumulate_S16_S16U8_Sat	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Accumulate_S16_S16U8_Sat$/;"	f
HafCpu_Add_S16_S16S16_Sat	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Add_S16_S16S16_Sat$/;"	f
HafCpu_Add_S16_S16S16_Wrap	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Add_S16_S16S16_Wrap$/;"	f
HafCpu_Add_S16_S16U8_Sat	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Add_S16_S16U8_Sat$/;"	f
HafCpu_Add_S16_S16U8_Wrap	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Add_S16_S16U8_Wrap$/;"	f
HafCpu_Add_S16_U8U8	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Add_S16_U8U8$/;"	f
HafCpu_Add_U8_U8U8_Sat	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Add_U8_U8U8_Sat$/;"	f
HafCpu_Add_U8_U8U8_Wrap	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Add_U8_U8U8_Wrap$/;"	f
HafCpu_And_U1_U1U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_And_U1_U1U1$/;"	f
HafCpu_And_U1_U8U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_And_U1_U8U1$/;"	f
HafCpu_And_U1_U8U8	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_And_U1_U8U8$/;"	f
HafCpu_And_U8_U1U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_And_U8_U1U1$/;"	f
HafCpu_And_U8_U8U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_And_U8_U8U1$/;"	f
HafCpu_And_U8_U8U8	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_And_U8_U8U8$/;"	f
HafCpu_BinaryCopy_U8_U8	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_BinaryCopy_U8_U8$/;"	f
HafCpu_Box_U8_U8_3x3	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Box_U8_U8_3x3$/;"	f
HafCpu_BufferCopyDisperseInDst	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_BufferCopyDisperseInDst$/;"	f
HafCpu_BufferCopyDisperseInSrc	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_BufferCopyDisperseInSrc$/;"	f
HafCpu_CannyEdgeTrace_U8_U8	ago/ago_haf_cpu.cpp	/^int HafCpu_CannyEdgeTrace_U8_U8$/;"	f
HafCpu_CannyEdgeTrace_U8_U8XY	ago/ago_haf_cpu_canny.cpp	/^int HafCpu_CannyEdgeTrace_U8_U8XY$/;"	f
HafCpu_CannySobelSuppThreshold_U8XY_U8_3x3_L1NORM	ago/ago_haf_cpu_canny.cpp	/^int HafCpu_CannySobelSuppThreshold_U8XY_U8_3x3_L1NORM$/;"	f
HafCpu_CannySobelSuppThreshold_U8XY_U8_3x3_L2NORM	ago/ago_haf_cpu.cpp	/^int HafCpu_CannySobelSuppThreshold_U8XY_U8_3x3_L2NORM$/;"	f
HafCpu_CannySobelSuppThreshold_U8XY_U8_5x5_L1NORM	ago/ago_haf_cpu_canny.cpp	/^int HafCpu_CannySobelSuppThreshold_U8XY_U8_5x5_L1NORM$/;"	f
HafCpu_CannySobelSuppThreshold_U8XY_U8_5x5_L2NORM	ago/ago_haf_cpu.cpp	/^int HafCpu_CannySobelSuppThreshold_U8XY_U8_5x5_L2NORM$/;"	f
HafCpu_CannySobelSuppThreshold_U8XY_U8_7x7_L1NORM	ago/ago_haf_cpu_canny.cpp	/^int HafCpu_CannySobelSuppThreshold_U8XY_U8_7x7_L1NORM$/;"	f
HafCpu_CannySobelSuppThreshold_U8XY_U8_7x7_L2NORM	ago/ago_haf_cpu.cpp	/^int HafCpu_CannySobelSuppThreshold_U8XY_U8_7x7_L2NORM$/;"	f
HafCpu_CannySobel_U16_U8_3x3_L1NORM	ago/ago_haf_cpu_canny.cpp	/^int HafCpu_CannySobel_U16_U8_3x3_L1NORM$/;"	f
HafCpu_CannySobel_U16_U8_3x3_L2NORM	ago/ago_haf_cpu_canny.cpp	/^int HafCpu_CannySobel_U16_U8_3x3_L2NORM$/;"	f
HafCpu_CannySobel_U16_U8_5x5_L1NORM	ago/ago_haf_cpu_canny.cpp	/^int HafCpu_CannySobel_U16_U8_5x5_L1NORM$/;"	f
HafCpu_CannySobel_U16_U8_5x5_L2NORM	ago/ago_haf_cpu_canny.cpp	/^int HafCpu_CannySobel_U16_U8_5x5_L2NORM$/;"	f
HafCpu_CannySobel_U16_U8_7x7_L1NORM	ago/ago_haf_cpu_canny.cpp	/^int HafCpu_CannySobel_U16_U8_7x7_L1NORM$/;"	f
HafCpu_CannySobel_U16_U8_7x7_L2NORM	ago/ago_haf_cpu_canny.cpp	/^int HafCpu_CannySobel_U16_U8_7x7_L2NORM$/;"	f
HafCpu_CannySuppThreshold_U8XY_U16_3x3	ago/ago_haf_cpu_canny.cpp	/^int HafCpu_CannySuppThreshold_U8XY_U16_3x3$/;"	f
HafCpu_ChannelCombine_U16_U8U8	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelCombine_U16_U8U8$/;"	f
HafCpu_ChannelCombine_U24_U8U8U8_RGB	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelCombine_U24_U8U8U8_RGB$/;"	f
HafCpu_ChannelCombine_U32_U8U8U8U8_RGBX	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelCombine_U32_U8U8U8U8_RGBX$/;"	f
HafCpu_ChannelCombine_U32_U8U8U8_UYVY	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelCombine_U32_U8U8U8_UYVY$/;"	f
HafCpu_ChannelCombine_U32_U8U8U8_YUYV	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelCombine_U32_U8U8U8_YUYV$/;"	f
HafCpu_ChannelCopy_U1_U1	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelCopy_U1_U1$/;"	f
HafCpu_ChannelCopy_U1_U8	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelCopy_U1_U8$/;"	f
HafCpu_ChannelCopy_U8_U1	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelCopy_U8_U1$/;"	f
HafCpu_ChannelCopy_U8_U8	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelCopy_U8_U8$/;"	f
HafCpu_ChannelExtract_U8U8U8U8_U32	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelExtract_U8U8U8U8_U32$/;"	f
HafCpu_ChannelExtract_U8U8U8_U24	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelExtract_U8U8U8_U24$/;"	f
HafCpu_ChannelExtract_U8U8U8_U32	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelExtract_U8U8U8_U32$/;"	f
HafCpu_ChannelExtract_U8_U16_Pos0	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelExtract_U8_U16_Pos0$/;"	f
HafCpu_ChannelExtract_U8_U16_Pos1	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelExtract_U8_U16_Pos1$/;"	f
HafCpu_ChannelExtract_U8_U24_Pos0	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelExtract_U8_U24_Pos0$/;"	f
HafCpu_ChannelExtract_U8_U24_Pos1	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelExtract_U8_U24_Pos1$/;"	f
HafCpu_ChannelExtract_U8_U24_Pos2	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelExtract_U8_U24_Pos2$/;"	f
HafCpu_ChannelExtract_U8_U32_Pos0	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelExtract_U8_U32_Pos0$/;"	f
HafCpu_ChannelExtract_U8_U32_Pos1	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelExtract_U8_U32_Pos1$/;"	f
HafCpu_ChannelExtract_U8_U32_Pos2	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelExtract_U8_U32_Pos2$/;"	f
HafCpu_ChannelExtract_U8_U32_Pos3	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_ChannelExtract_U8_U32_Pos3$/;"	f
HafCpu_ColorConvert_IUV_RGB	ago/ago_haf_cpu.cpp	/^int HafCpu_ColorConvert_IUV_RGB$/;"	f
HafCpu_ColorConvert_IUV_RGBX	ago/ago_haf_cpu.cpp	/^int HafCpu_ColorConvert_IUV_RGBX$/;"	f
HafCpu_ColorConvert_IU_RGB	ago/ago_haf_cpu.cpp	/^int HafCpu_ColorConvert_IU_RGB$/;"	f
HafCpu_ColorConvert_IU_RGBX	ago/ago_haf_cpu.cpp	/^int HafCpu_ColorConvert_IU_RGBX$/;"	f
HafCpu_ColorConvert_IV_RGB	ago/ago_haf_cpu.cpp	/^int HafCpu_ColorConvert_IV_RGB$/;"	f
HafCpu_ColorConvert_IV_RGBX	ago/ago_haf_cpu.cpp	/^int HafCpu_ColorConvert_IV_RGBX$/;"	f
HafCpu_ColorConvert_IYUV_RGB	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_IYUV_RGB$/;"	f
HafCpu_ColorConvert_IYUV_RGBX	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_IYUV_RGBX$/;"	f
HafCpu_ColorConvert_NV12_RGB	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_NV12_RGB$/;"	f
HafCpu_ColorConvert_NV12_RGBX	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_NV12_RGBX$/;"	f
HafCpu_ColorConvert_RGBX_IYUV	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_RGBX_IYUV$/;"	f
HafCpu_ColorConvert_RGBX_NV12	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_RGBX_NV12$/;"	f
HafCpu_ColorConvert_RGBX_NV21	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_RGBX_NV21$/;"	f
HafCpu_ColorConvert_RGBX_RGB	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_RGBX_RGB$/;"	f
HafCpu_ColorConvert_RGBX_UYVY	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_RGBX_UYVY$/;"	f
HafCpu_ColorConvert_RGBX_YUYV	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_RGBX_YUYV$/;"	f
HafCpu_ColorConvert_RGB_IYUV	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_RGB_IYUV$/;"	f
HafCpu_ColorConvert_RGB_NV12	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_RGB_NV12$/;"	f
HafCpu_ColorConvert_RGB_NV21	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_RGB_NV21$/;"	f
HafCpu_ColorConvert_RGB_RGBX	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_RGB_RGBX$/;"	f
HafCpu_ColorConvert_RGB_UYVY	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_RGB_UYVY$/;"	f
HafCpu_ColorConvert_RGB_YUYV	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_RGB_YUYV$/;"	f
HafCpu_ColorConvert_UV12_RGB	ago/ago_haf_cpu.cpp	/^int HafCpu_ColorConvert_UV12_RGB$/;"	f
HafCpu_ColorConvert_UV12_RGBX	ago/ago_haf_cpu.cpp	/^int HafCpu_ColorConvert_UV12_RGBX$/;"	f
HafCpu_ColorConvert_U_RGB	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_U_RGB$/;"	f
HafCpu_ColorConvert_U_RGBX	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_U_RGBX$/;"	f
HafCpu_ColorConvert_V_RGB	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_V_RGB$/;"	f
HafCpu_ColorConvert_V_RGBX	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_V_RGBX$/;"	f
HafCpu_ColorConvert_YUV4_RGB	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_YUV4_RGB$/;"	f
HafCpu_ColorConvert_YUV4_RGBX	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_YUV4_RGBX$/;"	f
HafCpu_ColorConvert_Y_RGB	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_Y_RGB$/;"	f
HafCpu_ColorConvert_Y_RGBX	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_ColorConvert_Y_RGBX$/;"	f
HafCpu_ColorDepth_S16_U8	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_ColorDepth_S16_U8$/;"	f
HafCpu_ColorDepth_U8_S16_Sat	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_ColorDepth_U8_S16_Sat$/;"	f
HafCpu_ColorDepth_U8_S16_Wrap	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_ColorDepth_U8_S16_Wrap$/;"	f
HafCpu_Convolve_S16_U8_3xN	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Convolve_S16_U8_3xN$/;"	f
HafCpu_Convolve_S16_U8_5xN	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Convolve_S16_U8_5xN$/;"	f
HafCpu_Convolve_S16_U8_7xN	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Convolve_S16_U8_7xN$/;"	f
HafCpu_Convolve_S16_U8_9xN	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Convolve_S16_U8_9xN$/;"	f
HafCpu_Convolve_S16_U8_MxN	ago/ago_haf_cpu.cpp	/^int HafCpu_Convolve_S16_U8_MxN$/;"	f
HafCpu_Convolve_U8_U8_3xN	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Convolve_U8_U8_3xN$/;"	f
HafCpu_Convolve_U8_U8_5xN	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Convolve_U8_U8_5xN$/;"	f
HafCpu_Convolve_U8_U8_7xN	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Convolve_U8_U8_7xN$/;"	f
HafCpu_Convolve_U8_U8_9xN	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Convolve_U8_U8_9xN$/;"	f
HafCpu_Convolve_U8_U8_MxN	ago/ago_haf_cpu.cpp	/^int HafCpu_Convolve_U8_U8_MxN$/;"	f
HafCpu_Dilate_U1_U1_3x3	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Dilate_U1_U1_3x3$/;"	f
HafCpu_Dilate_U1_U8_3x3	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Dilate_U1_U8_3x3$/;"	f
HafCpu_Dilate_U8_U1_3x3	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Dilate_U8_U1_3x3$/;"	f
HafCpu_Dilate_U8_U8_3x3	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Dilate_U8_U8_3x3$/;"	f
HafCpu_Equalize_DATA_DATA	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Equalize_DATA_DATA$/;"	f
HafCpu_Erode_U1_U1_3x3	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Erode_U1_U1_3x3$/;"	f
HafCpu_Erode_U1_U8_3x3	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Erode_U1_U8_3x3$/;"	f
HafCpu_Erode_U8_U1_3x3	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Erode_U8_U1_3x3$/;"	f
HafCpu_Erode_U8_U8_3x3	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Erode_U8_U8_3x3$/;"	f
HafCpu_FastAtan2_Canny	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_FastAtan2_Canny$/;"	f
HafCpu_FastAtan2_deg	ago/ago_haf_cpu_arithmetic.cpp	/^float HafCpu_FastAtan2_deg$/;"	f
HafCpu_FastAtan2_rad	ago/ago_haf_cpu_arithmetic.cpp	/^float HafCpu_FastAtan2_rad$/;"	f
HafCpu_FastCornerMerge_XY_XY	ago/ago_haf_cpu_fast_corners.cpp	/^int HafCpu_FastCornerMerge_XY_XY$/;"	f
HafCpu_FastCorners_XY_U8_NoSupression	ago/ago_haf_cpu_fast_corners.cpp	/^int HafCpu_FastCorners_XY_U8_NoSupression$/;"	f
HafCpu_FastCorners_XY_U8_Supression	ago/ago_haf_cpu_fast_corners.cpp	/^int HafCpu_FastCorners_XY_U8_Supression$/;"	f
HafCpu_FormatConvert_IUV_UV12	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_FormatConvert_IUV_UV12$/;"	f
HafCpu_FormatConvert_IYUV_UYVY	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_FormatConvert_IYUV_UYVY$/;"	f
HafCpu_FormatConvert_IYUV_YUYV	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_FormatConvert_IYUV_YUYV$/;"	f
HafCpu_FormatConvert_NV12_UYVY	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_FormatConvert_NV12_UYVY$/;"	f
HafCpu_FormatConvert_NV12_YUYV	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_FormatConvert_NV12_YUYV$/;"	f
HafCpu_FormatConvert_UV12_IUV	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_FormatConvert_UV12_IUV$/;"	f
HafCpu_FormatConvert_UV_UV12	ago/ago_haf_cpu_color_convert.cpp	/^int HafCpu_FormatConvert_UV_UV12$/;"	f
HafCpu_Gaussian_U8_U8_3x3	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Gaussian_U8_U8_3x3$/;"	f
HafCpu_HarrisMergeSortAndPick_XY_HVC	ago/ago_haf_cpu_harris.cpp	/^int HafCpu_HarrisMergeSortAndPick_XY_HVC$/;"	f
HafCpu_HarrisMergeSortAndPick_XY_XYS	ago/ago_haf_cpu_harris.cpp	/^int HafCpu_HarrisMergeSortAndPick_XY_XYS$/;"	f
HafCpu_HarrisScore_HVC_HG3_3x3	ago/ago_haf_cpu_harris.cpp	/^int HafCpu_HarrisScore_HVC_HG3_3x3$/;"	f
HafCpu_HarrisScore_HVC_HG3_5x5	ago/ago_haf_cpu_harris.cpp	/^int HafCpu_HarrisScore_HVC_HG3_5x5$/;"	f
HafCpu_HarrisScore_HVC_HG3_7x7	ago/ago_haf_cpu_harris.cpp	/^int HafCpu_HarrisScore_HVC_HG3_7x7$/;"	f
HafCpu_HarrisSobel_HG3_U8_3x3	ago/ago_haf_cpu_harris.cpp	/^int HafCpu_HarrisSobel_HG3_U8_3x3$/;"	f
HafCpu_HarrisSobel_HG3_U8_5x5	ago/ago_haf_cpu_harris.cpp	/^int HafCpu_HarrisSobel_HG3_U8_5x5$/;"	f
HafCpu_HarrisSobel_HG3_U8_7x7	ago/ago_haf_cpu_harris.cpp	/^int HafCpu_HarrisSobel_HG3_U8_7x7$/;"	f
HafCpu_Histogram16Bins_DATA_U8	ago/ago_haf_cpu_histogram.cpp	/^static int HafCpu_Histogram16Bins_DATA_U8$/;"	f	file:
HafCpu_Histogram1Threshold_DATA_U8	ago/ago_haf_cpu_histogram.cpp	/^static int HafCpu_Histogram1Threshold_DATA_U8$/;"	f	file:
HafCpu_Histogram3Thresholds_DATA_U8	ago/ago_haf_cpu_histogram.cpp	/^static int HafCpu_Histogram3Thresholds_DATA_U8$/;"	f	file:
HafCpu_Histogram8Bins_DATA_U8	ago/ago_haf_cpu_histogram.cpp	/^static int HafCpu_Histogram8Bins_DATA_U8$/;"	f	file:
HafCpu_Histogram9Bins_DATA_U8	ago/ago_haf_cpu_histogram.cpp	/^static int HafCpu_Histogram9Bins_DATA_U8$/;"	f	file:
HafCpu_HistogramFixedBins_DATA_U8	ago/ago_haf_cpu_histogram.cpp	/^int HafCpu_HistogramFixedBins_DATA_U8$/;"	f
HafCpu_HistogramMerge_DATA_DATA	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_HistogramMerge_DATA_DATA$/;"	f
HafCpu_Histogram_DATA_U8	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Histogram_DATA_U8$/;"	f
HafCpu_IntegralImage_U32_U8	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_IntegralImage_U32_U8$/;"	f
HafCpu_Lut_U8_U8	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Lut_U8_U8$/;"	f
HafCpu_Magnitude_S16_S16S16	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Magnitude_S16_S16S16$/;"	f
HafCpu_MeanStdDevMerge_DATA_DATA	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MeanStdDevMerge_DATA_DATA$/;"	f
HafCpu_MeanStdDev_DATA_U8	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MeanStdDev_DATA_U8$/;"	f
HafCpu_Median_U8_U8_3x3	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Median_U8_U8_3x3$/;"	f
HafCpu_MemSet_U16	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_MemSet_U16$/;"	f
HafCpu_MemSet_U24	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_MemSet_U24$/;"	f
HafCpu_MemSet_U32	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_MemSet_U32$/;"	f
HafCpu_MemSet_U8	ago/ago_haf_cpu_ch_extract_combine.cpp	/^int HafCpu_MemSet_U8$/;"	f
HafCpu_MinMaxLocMerge_DATA_DATA	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLocMerge_DATA_DATA$/;"	f
HafCpu_MinMaxLoc_DATA_S16DATA_Loc_Max_Count_Max	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_S16DATA_Loc_Max_Count_Max$/;"	f
HafCpu_MinMaxLoc_DATA_S16DATA_Loc_Max_Count_MinMax	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_S16DATA_Loc_Max_Count_MinMax$/;"	f
HafCpu_MinMaxLoc_DATA_S16DATA_Loc_MinMax_Count_MinMax	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_S16DATA_Loc_MinMax_Count_MinMax$/;"	f
HafCpu_MinMaxLoc_DATA_S16DATA_Loc_Min_Count_Min	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_S16DATA_Loc_Min_Count_Min$/;"	f
HafCpu_MinMaxLoc_DATA_S16DATA_Loc_Min_Count_MinMax	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_S16DATA_Loc_Min_Count_MinMax$/;"	f
HafCpu_MinMaxLoc_DATA_S16DATA_Loc_None_Count_Max	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_S16DATA_Loc_None_Count_Max$/;"	f
HafCpu_MinMaxLoc_DATA_S16DATA_Loc_None_Count_Min	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_S16DATA_Loc_None_Count_Min$/;"	f
HafCpu_MinMaxLoc_DATA_S16DATA_Loc_None_Count_MinMax	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_S16DATA_Loc_None_Count_MinMax$/;"	f
HafCpu_MinMaxLoc_DATA_U8DATA_Loc_Max_Count_Max	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_U8DATA_Loc_Max_Count_Max$/;"	f
HafCpu_MinMaxLoc_DATA_U8DATA_Loc_Max_Count_MinMax	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_U8DATA_Loc_Max_Count_MinMax$/;"	f
HafCpu_MinMaxLoc_DATA_U8DATA_Loc_MinMax_Count_MinMax	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_U8DATA_Loc_MinMax_Count_MinMax$/;"	f
HafCpu_MinMaxLoc_DATA_U8DATA_Loc_Min_Count_Min	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_U8DATA_Loc_Min_Count_Min$/;"	f
HafCpu_MinMaxLoc_DATA_U8DATA_Loc_Min_Count_MinMax	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_U8DATA_Loc_Min_Count_MinMax$/;"	f
HafCpu_MinMaxLoc_DATA_U8DATA_Loc_None_Count_Max	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_U8DATA_Loc_None_Count_Max$/;"	f
HafCpu_MinMaxLoc_DATA_U8DATA_Loc_None_Count_Min	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_U8DATA_Loc_None_Count_Min$/;"	f
HafCpu_MinMaxLoc_DATA_U8DATA_Loc_None_Count_MinMax	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxLoc_DATA_U8DATA_Loc_None_Count_MinMax$/;"	f
HafCpu_MinMaxMerge_DATA_DATA	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMaxMerge_DATA_DATA$/;"	f
HafCpu_MinMax_DATA_S16	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMax_DATA_S16$/;"	f
HafCpu_MinMax_DATA_U8	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_MinMax_DATA_U8$/;"	f
HafCpu_Mul_S16_S16S16_Sat_Round	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_S16_S16S16_Sat_Round$/;"	f
HafCpu_Mul_S16_S16S16_Sat_Trunc	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_S16_S16S16_Sat_Trunc$/;"	f
HafCpu_Mul_S16_S16S16_Wrap_Round	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_S16_S16S16_Wrap_Round$/;"	f
HafCpu_Mul_S16_S16S16_Wrap_Trunc	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_S16_S16S16_Wrap_Trunc$/;"	f
HafCpu_Mul_S16_S16U8_Sat_Round	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_S16_S16U8_Sat_Round$/;"	f
HafCpu_Mul_S16_S16U8_Sat_Trunc	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_S16_S16U8_Sat_Trunc$/;"	f
HafCpu_Mul_S16_S16U8_Wrap_Round	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_S16_S16U8_Wrap_Round$/;"	f
HafCpu_Mul_S16_S16U8_Wrap_Trunc	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_S16_S16U8_Wrap_Trunc$/;"	f
HafCpu_Mul_S16_U8U8_Sat_Round	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_S16_U8U8_Sat_Round$/;"	f
HafCpu_Mul_S16_U8U8_Sat_Trunc	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_S16_U8U8_Sat_Trunc$/;"	f
HafCpu_Mul_S16_U8U8_Wrap_Round	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_S16_U8U8_Wrap_Round$/;"	f
HafCpu_Mul_S16_U8U8_Wrap_Trunc	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_S16_U8U8_Wrap_Trunc$/;"	f
HafCpu_Mul_U8_U8U8_Sat_Round	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_U8_U8U8_Sat_Round$/;"	f
HafCpu_Mul_U8_U8U8_Sat_Trunc	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_U8_U8U8_Sat_Trunc$/;"	f
HafCpu_Mul_U8_U8U8_Wrap_Round	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_U8_U8U8_Wrap_Round$/;"	f
HafCpu_Mul_U8_U8U8_Wrap_Trunc	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Mul_U8_U8U8_Wrap_Trunc$/;"	f
HafCpu_Nand_U1_U1U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Nand_U1_U1U1$/;"	f
HafCpu_Nand_U1_U8U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Nand_U1_U8U1$/;"	f
HafCpu_Nand_U1_U8U8	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Nand_U1_U8U8$/;"	f
HafCpu_Nand_U8_U1U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Nand_U8_U1U1$/;"	f
HafCpu_Nand_U8_U8U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Nand_U8_U8U1$/;"	f
HafCpu_Nand_U8_U8U8	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Nand_U8_U8U8$/;"	f
HafCpu_NonMaxSupp_XY_ANY_3x3	ago/ago_haf_cpu_harris.cpp	/^int HafCpu_NonMaxSupp_XY_ANY_3x3$/;"	f
HafCpu_Nor_U1_U1U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Nor_U1_U1U1$/;"	f
HafCpu_Nor_U1_U8U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Nor_U1_U8U1$/;"	f
HafCpu_Nor_U1_U8U8	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Nor_U1_U8U8$/;"	f
HafCpu_Nor_U8_U1U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Nor_U8_U1U1$/;"	f
HafCpu_Nor_U8_U8U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Nor_U8_U8U1$/;"	f
HafCpu_Nor_U8_U8U8	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Nor_U8_U8U8$/;"	f
HafCpu_Not_U1_U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Not_U1_U1$/;"	f
HafCpu_Not_U1_U8	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Not_U1_U8$/;"	f
HafCpu_Not_U8_U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Not_U8_U1$/;"	f
HafCpu_Not_U8_U8	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Not_U8_U8$/;"	f
HafCpu_OpticalFlowPyrLK_XY_XY_Generic	ago/ago_haf_cpu_opticalflow.cpp	/^int HafCpu_OpticalFlowPyrLK_XY_XY_Generic$/;"	f
HafCpu_Or_U1_U1U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Or_U1_U1U1$/;"	f
HafCpu_Or_U1_U8U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Or_U1_U8U1$/;"	f
HafCpu_Or_U1_U8U8	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Or_U1_U8U8$/;"	f
HafCpu_Or_U8_U1U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Or_U8_U1U1$/;"	f
HafCpu_Or_U8_U8U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Or_U8_U8U1$/;"	f
HafCpu_Or_U8_U8U8	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Or_U8_U8U8$/;"	f
HafCpu_Phase_U8_S16S16	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Phase_U8_S16S16$/;"	f
HafCpu_Remap_U8_U8_Bilinear	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_Remap_U8_U8_Bilinear$/;"	f
HafCpu_Remap_U8_U8_Bilinear_Constant	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_Remap_U8_U8_Bilinear_Constant$/;"	f
HafCpu_Remap_U8_U8_Nearest	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_Remap_U8_U8_Nearest$/;"	f
HafCpu_Remap_U8_U8_Nearest_Constant	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_Remap_U8_U8_Nearest_Constant$/;"	f
HafCpu_ScaleGaussianHalf_U8_U8_3x3	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_ScaleGaussianHalf_U8_U8_3x3$/;"	f
HafCpu_ScaleGaussianHalf_U8_U8_5x5	ago/ago_haf_cpu_pyramid.cpp	/^int HafCpu_ScaleGaussianHalf_U8_U8_5x5$/;"	f
HafCpu_ScaleGaussianOrb_U8_U8_5x5	ago/ago_haf_cpu_pyramid.cpp	/^int HafCpu_ScaleGaussianOrb_U8_U8_5x5$/;"	f
HafCpu_ScaleImage_U8_U8_Area	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_ScaleImage_U8_U8_Area$/;"	f
HafCpu_ScaleImage_U8_U8_Area_Constant	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_ScaleImage_U8_U8_Area_Constant$/;"	f
HafCpu_ScaleImage_U8_U8_Area_Replicate	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_ScaleImage_U8_U8_Area_Replicate$/;"	f
HafCpu_ScaleImage_U8_U8_Bilinear	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_ScaleImage_U8_U8_Bilinear$/;"	f
HafCpu_ScaleImage_U8_U8_Bilinear_Constant	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_ScaleImage_U8_U8_Bilinear_Constant$/;"	f
HafCpu_ScaleImage_U8_U8_Bilinear_Replicate	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_ScaleImage_U8_U8_Bilinear_Replicate$/;"	f
HafCpu_ScaleImage_U8_U8_Nearest	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_ScaleImage_U8_U8_Nearest$/;"	f
HafCpu_ScaleUp2x2_U8_U8	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_ScaleUp2x2_U8_U8$/;"	f
HafCpu_SobelMagnitudePhase_S16U8_U8_3x3	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_SobelMagnitudePhase_S16U8_U8_3x3$/;"	f
HafCpu_SobelMagnitude_S16_U8_3x3	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_SobelMagnitude_S16_U8_3x3$/;"	f
HafCpu_SobelPhase_U8_U8_3x3	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_SobelPhase_U8_U8_3x3$/;"	f
HafCpu_Sobel_S16S16_U8_3x3_GXY	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Sobel_S16S16_U8_3x3_GXY$/;"	f
HafCpu_Sobel_S16_U8_3x3_GX	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Sobel_S16_U8_3x3_GX$/;"	f
HafCpu_Sobel_S16_U8_3x3_GY	ago/ago_haf_cpu_filter.cpp	/^int HafCpu_Sobel_S16_U8_3x3_GY$/;"	f
HafCpu_Sub_S16_S16S16_Sat	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Sub_S16_S16S16_Sat$/;"	f
HafCpu_Sub_S16_S16S16_Wrap	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Sub_S16_S16S16_Wrap$/;"	f
HafCpu_Sub_S16_S16U8_Sat	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Sub_S16_S16U8_Sat$/;"	f
HafCpu_Sub_S16_S16U8_Wrap	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Sub_S16_S16U8_Wrap$/;"	f
HafCpu_Sub_S16_U8S16_Sat	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Sub_S16_U8S16_Sat$/;"	f
HafCpu_Sub_S16_U8S16_Wrap	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Sub_S16_U8S16_Wrap$/;"	f
HafCpu_Sub_S16_U8U8	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Sub_S16_U8U8$/;"	f
HafCpu_Sub_U8_U8U8_Sat	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Sub_U8_U8U8_Sat$/;"	f
HafCpu_Sub_U8_U8U8_Wrap	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Sub_U8_U8U8_Wrap$/;"	f
HafCpu_ThresholdNot_U1_U8_Binary	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_ThresholdNot_U1_U8_Binary$/;"	f
HafCpu_ThresholdNot_U1_U8_Range	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_ThresholdNot_U1_U8_Range$/;"	f
HafCpu_ThresholdNot_U8_U8_Binary	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_ThresholdNot_U8_U8_Binary$/;"	f
HafCpu_ThresholdNot_U8_U8_Range	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_ThresholdNot_U8_U8_Range$/;"	f
HafCpu_Threshold_U1_U8_Binary	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Threshold_U1_U8_Binary$/;"	f
HafCpu_Threshold_U1_U8_Range	ago/ago_haf_cpu_arithmetic.cpp	/^	int HafCpu_Threshold_U1_U8_Range$/;"	f
HafCpu_Threshold_U1_U8_Range	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Threshold_U1_U8_Range$/;"	f
HafCpu_Threshold_U8_U8_Binary	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Threshold_U8_U8_Binary$/;"	f
HafCpu_Threshold_U8_U8_Range	ago/ago_haf_cpu_arithmetic.cpp	/^int HafCpu_Threshold_U8_U8_Range$/;"	f
HafCpu_WarpAffine_U8_U8_Bilinear	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_WarpAffine_U8_U8_Bilinear$/;"	f
HafCpu_WarpAffine_U8_U8_Bilinear_Constant	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_WarpAffine_U8_U8_Bilinear_Constant$/;"	f
HafCpu_WarpAffine_U8_U8_Nearest	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_WarpAffine_U8_U8_Nearest$/;"	f
HafCpu_WarpAffine_U8_U8_Nearest_Constant	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_WarpAffine_U8_U8_Nearest_Constant$/;"	f
HafCpu_WarpPerspective_U8_U8_Bilinear	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_WarpPerspective_U8_U8_Bilinear$/;"	f
HafCpu_WarpPerspective_U8_U8_Bilinear_Constant	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_WarpPerspective_U8_U8_Bilinear_Constant$/;"	f
HafCpu_WarpPerspective_U8_U8_Nearest	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_WarpPerspective_U8_U8_Nearest$/;"	f
HafCpu_WarpPerspective_U8_U8_Nearest_Constant	ago/ago_haf_cpu_geometric.cpp	/^int HafCpu_WarpPerspective_U8_U8_Nearest_Constant$/;"	f
HafCpu_Xnor_U1_U1U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Xnor_U1_U1U1$/;"	f
HafCpu_Xnor_U1_U8U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Xnor_U1_U8U1$/;"	f
HafCpu_Xnor_U1_U8U8	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Xnor_U1_U8U8$/;"	f
HafCpu_Xnor_U8_U1U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Xnor_U8_U1U1$/;"	f
HafCpu_Xnor_U8_U8U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Xnor_U8_U8U1$/;"	f
HafCpu_Xnor_U8_U8U8	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Xnor_U8_U8U8$/;"	f
HafCpu_Xor_U1_U1U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Xor_U1_U1U1$/;"	f
HafCpu_Xor_U1_U8U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Xor_U1_U8U1$/;"	f
HafCpu_Xor_U1_U8U8	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Xor_U1_U8U8$/;"	f
HafCpu_Xor_U8_U1U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Xor_U8_U1U1$/;"	f
HafCpu_Xor_U8_U8U1	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Xor_U8_U8U1$/;"	f
HafCpu_Xor_U8_U8U8	ago/ago_haf_cpu_logical.cpp	/^int HafCpu_Xor_U8_U8U8$/;"	f
HafGpu_CannySobelFilters	ago/ago_haf_gpu_special_filters.cpp	/^int HafGpu_CannySobelFilters(AgoNode * node)$/;"	f
HafGpu_CannySuppThreshold	ago/ago_haf_gpu_special_filters.cpp	/^int HafGpu_CannySuppThreshold(AgoNode * node)$/;"	f
HafGpu_ChannelCombine_U32_422	ago/ago_haf_gpu_conversion.cpp	/^int HafGpu_ChannelCombine_U32_422(AgoNode * node)$/;"	f
HafGpu_ChannelExtract_U8_U32	ago/ago_haf_gpu_conversion.cpp	/^int HafGpu_ChannelExtract_U8_U32(AgoNode * node)$/;"	f
HafGpu_ColorConvert	ago/ago_haf_gpu_conversion.cpp	/^int HafGpu_ColorConvert(AgoNode * node)$/;"	f
HafGpu_FastCorners_XY_U8	ago/ago_haf_gpu_corners.cpp	/^int HafGpu_FastCorners_XY_U8(AgoNode * node)$/;"	f
HafGpu_FormatConvert_420_422	ago/ago_haf_gpu_conversion.cpp	/^int HafGpu_FormatConvert_420_422(AgoNode * node)$/;"	f
HafGpu_FormatConvert_Chroma	ago/ago_haf_gpu_conversion.cpp	/^int HafGpu_FormatConvert_Chroma(AgoNode * node)$/;"	f
HafGpu_HarrisScoreFilters	ago/ago_haf_gpu_special_filters.cpp	/^int HafGpu_HarrisScoreFilters(AgoNode * node)$/;"	f
HafGpu_HarrisSobelFilters	ago/ago_haf_gpu_special_filters.cpp	/^int HafGpu_HarrisSobelFilters(AgoNode * node)$/;"	f
HafGpu_LinearFilter_ANY_F32	ago/ago_haf_gpu_linear_filter.cpp	/^int HafGpu_LinearFilter_ANY_F32(AgoNode * node, vx_df_image dst_image_format, AgoData * src_filter, bool roundingMode)$/;"	f
HafGpu_LinearFilter_ANY_S16	ago/ago_haf_gpu_linear_filter.cpp	/^int HafGpu_LinearFilter_ANY_S16(AgoNode * node, vx_df_image dst_image_format, AgoData * src_filter, bool roundingMode)$/;"	f
HafGpu_LinearFilter_ANY_U8	ago/ago_haf_gpu_linear_filter.cpp	/^int HafGpu_LinearFilter_ANY_U8(AgoNode * node, vx_df_image dst_image_format, AgoData * src_filter, bool roundingMode)$/;"	f
HafGpu_LinearFilter_ANYx2_U8	ago/ago_haf_gpu_linear_filter.cpp	/^int HafGpu_LinearFilter_ANYx2_U8(AgoNode * node, vx_df_image dst_image_format, AgoData * src_filter, AgoData * src_filter2, bool roundingMode)$/;"	f
HafGpu_Load_Local	ago/ago_haf_gpu_common.cpp	/^int HafGpu_Load_Local(int WGWidth, int WGHeight, int LMWidth, int LMHeight, int gxoffset, int gyoffset, std::string& code)$/;"	f
HafGpu_NonLinearFilter_3x3_ANY_U1	ago/ago_haf_gpu_special_filters.cpp	/^int HafGpu_NonLinearFilter_3x3_ANY_U1(AgoNode * node)$/;"	f
HafGpu_NonLinearFilter_3x3_ANY_U8	ago/ago_haf_gpu_special_filters.cpp	/^int HafGpu_NonLinearFilter_3x3_ANY_U8(AgoNode * node)$/;"	f
HafGpu_NonMaxSupp_XY_ANY_3x3	ago/ago_haf_gpu_special_filters.cpp	/^int HafGpu_NonMaxSupp_XY_ANY_3x3(AgoNode * node)$/;"	f
HafGpu_ScaleGaussianHalf	ago/ago_haf_gpu_special_filters.cpp	/^int HafGpu_ScaleGaussianHalf(AgoNode * node)$/;"	f
HafGpu_ScaleGaussianOrb	ago/ago_haf_gpu_special_filters.cpp	/^int HafGpu_ScaleGaussianOrb(AgoNode * node, vx_interpolation_type_e interpolation)$/;"	f
HafGpu_SobelSpecialCases	ago/ago_haf_gpu_special_filters.cpp	/^int HafGpu_SobelSpecialCases(AgoNode * node)$/;"	f
Horizontal3x3GaussianFilter_SampleFirstPixel_SSE	ago/ago_haf_cpu_pyramid.cpp	/^static inline __m128i Horizontal3x3GaussianFilter_SampleFirstPixel_SSE(unsigned char * srcImage)$/;"	f	file:
Horizontal5x5GaussianFilter_C	ago/ago_haf_cpu_pyramid.cpp	/^static inline unsigned short Horizontal5x5GaussianFilter_C(unsigned char * srcImage)$/;"	f	file:
INFINITE	ago/ago_platform.h	147;"	d
ImageWidthInBytesCeil	ago/ago_internal.h	/^inline vx_uint32 ImageWidthInBytesCeil(vx_uint32 width, const AgoData * img)$/;"	f
ImageWidthInBytesFloor	ago/ago_internal.h	/^inline vx_uint32 ImageWidthInBytesFloor(vx_uint32 width, const AgoData * img)$/;"	f
InitializeCriticalSection	ago/ago_platform.cpp	/^void InitializeCriticalSection(CRITICAL_SECTION cs)$/;"	f
KOP_ELEMWISE	ago/ago_kernel_list.cpp	149;"	d	file:
KOP_FIXED	ago/ago_kernel_list.cpp	150;"	d	file:
KOP_UNKNOWN	ago/ago_kernel_list.cpp	148;"	d	file:
LONG	ago/ago_platform.h	/^typedef long LONG, * LPLONG;$/;"	t
LPLONG	ago/ago_platform.h	/^typedef long LONG, * LPLONG;$/;"	t
LPTHREAD_START_ROUTINE	ago/ago_platform.h	/^typedef DWORD (*LPTHREAD_START_ROUTINE)(LPVOID lpThreadParameter);$/;"	t
LPVOID	ago/ago_platform.h	/^typedef void * LPVOID;$/;"	t
LeaveCriticalSection	ago/ago_platform.cpp	/^void LeaveCriticalSection(CRITICAL_SECTION cs)$/;"	f
M128I	ago/ago_platform.h	100;"	d
MAX_MODULE_NAME_SIZE	ago/ago_internal.h	161;"	d
MAX_MODULE_PATH_SIZE	ago/ago_internal.h	162;"	d
MacroData	ago/ago_internal.h	/^struct MacroData {$/;"	s
MappedData	ago/ago_internal.h	/^struct MappedData {$/;"	s
MinEugThreshold	ago/ago_haf_cpu_opticalflow.cpp	/^static const float MinEugThreshold = 1.0e-04F;$/;"	v	file:
ModuleData	ago/ago_internal.h	/^struct ModuleData {$/;"	s
NODE_OPENCL_KERNEL_NAME	ago/ago_internal.h	142;"	d
NODE_OPENCL_TYPE_FULL_KERNEL	ago/ago_internal.h	133;"	d
NODE_OPENCL_TYPE_MEM2REG	ago/ago_internal.h	131;"	d
NODE_OPENCL_TYPE_NEED_IMGSIZE	ago/ago_internal.h	132;"	d
NODE_OPENCL_TYPE_REG2REG	ago/ago_internal.h	130;"	d
NUM_BINS	ago/ago_haf_cpu_arithmetic.cpp	6750;"	d	file:
OPENCL_FORMAT	ago/ago_haf_gpu.h	32;"	d
OPENCL_IMAGE_FIXED_OFFSET	ago/ago_internal.h	155;"	d
OPENVX_KHR_CLASS	include/VX/vx_khr_class.h	27;"	d
OPENVX_KHR_IX	include/VX/vx_khr_ix.h	25;"	d
OPENVX_KHR_NN	include/VX/vx_khr_nn.h	29;"	d
OPENVX_KHR_TILING	include/VX/vx_khr_tiling.h	29;"	d
OPENVX_KHR_XML	include/VX/vx_khr_xml.h	28;"	d
OPENVX_TILING_1_1	include/VX/vx_khr_tiling.h	32;"	d
OVX_KERNEL_ENTRY	ago/ago_kernel_list.cpp	163;"	d	file:
OVX_KERNEL_ENTRY	ago/ago_kernel_list.cpp	499;"	d	file:
PI	ago/ago_haf_cpu.h	30;"	d
RGB	include/VX/vx_types.h	/^    vx_uint8 RGB[3]; \/*!< \\brief <tt>\\ref VX_DF_IMAGE_RGB<\/tt> format in the R,G,B order *\/$/;"	m	union:_vx_pixel_value_t
RGBX	include/VX/vx_types.h	/^    vx_uint8 RGBX[4]; \/*!< \\brief <tt>\\ref VX_DF_IMAGE_RGBX<\/tt> format in the R,G,B,X order *\/$/;"	m	union:_vx_pixel_value_t
RM	Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
ReleaseSemaphore	ago/ago_platform.cpp	/^BOOL ReleaseSemaphore(HANDLE h, LONG lReleaseCount, LPLONG lpPreviousCount)$/;"	f
S16	ago/ago_haf_cpu_geometric.cpp	/^typedef signed short		S16;$/;"	t	file:
S16	include/VX/vx_types.h	/^    vx_int16 S16; \/*!< \\brief <tt>\\ref VX_DF_IMAGE_S16<\/tt> *\/$/;"	m	union:_vx_pixel_value_t
S32	ago/ago_haf_cpu_geometric.cpp	/^typedef signed int			S32;$/;"	t	file:
S32	include/VX/vx_types.h	/^    vx_int32 S32; \/*!< \\brief <tt>\\ref VX_DF_IMAGE_S32<\/tt> *\/$/;"	m	union:_vx_pixel_value_t
S64	ago/ago_haf_cpu_geometric.cpp	/^typedef signed long long	S64;$/;"	t	file:
S8	ago/ago_haf_cpu_geometric.cpp	/^typedef signed char			S8;$/;"	t	file:
SANITY_CHECK_DATA_TYPE	ago/ago_drama_divide.cpp	26;"	d	file:
SANITY_CHECK_DATA_TYPE_OPTIONAL	ago/ago_drama_divide.cpp	27;"	d	file:
SHARED_LIBRARY_EXTENSION	ago/ago_platform.h	80;"	d
SHARED_LIBRARY_PREFIX	ago/ago_platform.h	79;"	d
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SHOW_DEBUG_HIERARCHICAL_LEVELS	ago/ago_internal.h	41;"	d
SOLITARY	ago/ago_drama_remove.cpp	29;"	d	file:
SUFFIXES	Makefile	/^SUFFIXES =$/;"	m
TWOPI	ago/ago_haf_cpu.h	29;"	d
U16	ago/ago_haf_cpu_geometric.cpp	/^typedef unsigned short		U16;$/;"	t	file:
U16	include/VX/vx_types.h	/^    vx_uint16 U16; \/*!< \\brief <tt>\\ref VX_DF_IMAGE_U16<\/tt> *\/$/;"	m	union:_vx_pixel_value_t
U32	ago/ago_haf_cpu_geometric.cpp	/^typedef unsigned int		U32;$/;"	t	file:
U32	include/VX/vx_types.h	/^    vx_uint32 U32; \/*!< \\brief <tt>\\ref VX_DF_IMAGE_U32<\/tt> *\/$/;"	m	union:_vx_pixel_value_t
U64	ago/ago_haf_cpu_geometric.cpp	/^typedef unsigned long long	U64;$/;"	t	file:
U8	ago/ago_haf_cpu_geometric.cpp	/^typedef unsigned char		U8;$/;"	t	file:
U8	include/VX/vx_types.h	/^    vx_uint8 U8; \/*!< \\brief <tt>\\ref VX_DF_IMAGE_U8<\/tt> *\/$/;"	m	union:_vx_pixel_value_t
USE_AGO_CANNY_SOBEL_SUPP_THRESHOLD	ago/ago_internal.h	56;"	d
USE_AVX	ago/ago_internal.h	53;"	d
USE_BMI2	ago/ago_internal.h	50;"	d
VX_1_0_1_NAMING_COMPATIBILITY	include/VX/vx_compatibility.h	19;"	d
VX_ACTION_ABANDON	include/VX/vx_types.h	/^    VX_ACTION_ABANDON  = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_ACTION) + 0x1,$/;"	e	enum:vx_action_e
VX_ACTION_CONTINUE	include/VX/vx_types.h	/^    VX_ACTION_CONTINUE = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_ACTION) + 0x0,$/;"	e	enum:vx_action_e
VX_API_CALL	include/VX/vx_types.h	55;"	d
VX_API_CALL	include/VX/vx_types.h	57;"	d
VX_API_ENTRY	include/VX/vx_types.h	51;"	d
VX_ARRAY_ATTRIBUTE_CAPACITY	include/VX/vx_compatibility.h	128;"	d
VX_ARRAY_ATTRIBUTE_ITEMSIZE	include/VX/vx_compatibility.h	129;"	d
VX_ARRAY_ATTRIBUTE_ITEMTYPE	include/VX/vx_compatibility.h	126;"	d
VX_ARRAY_ATTRIBUTE_NUMITEMS	include/VX/vx_compatibility.h	127;"	d
VX_ARRAY_CAPACITY	include/VX/vx_types.h	/^    VX_ARRAY_CAPACITY = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_ARRAY) + 0x2,$/;"	e	enum:vx_array_attribute_e
VX_ARRAY_ITEMSIZE	include/VX/vx_types.h	/^    VX_ARRAY_ITEMSIZE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_ARRAY) + 0x3,$/;"	e	enum:vx_array_attribute_e
VX_ARRAY_ITEMTYPE	include/VX/vx_types.h	/^    VX_ARRAY_ITEMTYPE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_ARRAY) + 0x0,$/;"	e	enum:vx_array_attribute_e
VX_ARRAY_NUMITEMS	include/VX/vx_types.h	/^    VX_ARRAY_NUMITEMS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_ARRAY) + 0x1,$/;"	e	enum:vx_array_attribute_e
VX_ATTRIBUTE_BASE	include/VX/vx_types.h	532;"	d
VX_ATTRIBUTE_ID_MASK	include/VX/vx_types.h	488;"	d
VX_BIDIRECTIONAL	include/VX/vx_types.h	/^    VX_BIDIRECTIONAL = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_DIRECTION) + 0x2,$/;"	e	enum:vx_direction_e
VX_BORDER_CONSTANT	include/VX/vx_types.h	/^    VX_BORDER_CONSTANT = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_BORDER) + 0x1,$/;"	e	enum:vx_border_e
VX_BORDER_MODE_CONSTANT	include/VX/vx_compatibility.h	31;"	d
VX_BORDER_MODE_POLICY	include/VX/vx_compatibility.h	29;"	d
VX_BORDER_MODE_REPLICATE	include/VX/vx_compatibility.h	32;"	d
VX_BORDER_MODE_SELF	include/VX/vx_khr_tiling.h	/^    VX_BORDER_MODE_SELF = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_BORDER) + 0x3,$/;"	e	enum:vx_border_tiling_e
VX_BORDER_MODE_UNDEFINED	include/VX/vx_compatibility.h	30;"	d
VX_BORDER_MODE_UNSUPPORTED_POLICY_DEFAULT_TO_UNDEFINED	include/VX/vx_compatibility.h	33;"	d
VX_BORDER_MODE_UNSUPPORTED_POLICY_RETURN_ERROR	include/VX/vx_compatibility.h	34;"	d
VX_BORDER_POLICY_DEFAULT_TO_UNDEFINED	include/VX/vx_types.h	/^    VX_BORDER_POLICY_DEFAULT_TO_UNDEFINED = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_BORDER_POLICY) + 0x0,$/;"	e	enum:vx_border_policy_e
VX_BORDER_POLICY_RETURN_ERROR	include/VX/vx_types.h	/^    VX_BORDER_POLICY_RETURN_ERROR = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_BORDER_POLICY) + 0x1,$/;"	e	enum:vx_border_policy_e
VX_BORDER_REPLICATE	include/VX/vx_types.h	/^    VX_BORDER_REPLICATE = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_BORDER) + 0x2,$/;"	e	enum:vx_border_e
VX_BORDER_UNDEFINED	include/VX/vx_types.h	/^    VX_BORDER_UNDEFINED = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_BORDER) + 0x0,$/;"	e	enum:vx_border_e
VX_CALLBACK	include/VX/vx_types.h	62;"	d
VX_CALLBACK	include/VX/vx_types.h	64;"	d
VX_CHANNEL_0	include/VX/vx_types.h	/^    VX_CHANNEL_0 = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_CHANNEL) + 0x0,$/;"	e	enum:vx_channel_e
VX_CHANNEL_1	include/VX/vx_types.h	/^    VX_CHANNEL_1 = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_CHANNEL) + 0x1,$/;"	e	enum:vx_channel_e
VX_CHANNEL_2	include/VX/vx_types.h	/^    VX_CHANNEL_2 = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_CHANNEL) + 0x2,$/;"	e	enum:vx_channel_e
VX_CHANNEL_3	include/VX/vx_types.h	/^    VX_CHANNEL_3 = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_CHANNEL) + 0x3,$/;"	e	enum:vx_channel_e
VX_CHANNEL_A	include/VX/vx_types.h	/^    VX_CHANNEL_A = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_CHANNEL) + 0x13,$/;"	e	enum:vx_channel_e
VX_CHANNEL_B	include/VX/vx_types.h	/^    VX_CHANNEL_B = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_CHANNEL) + 0x12,$/;"	e	enum:vx_channel_e
VX_CHANNEL_G	include/VX/vx_types.h	/^    VX_CHANNEL_G = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_CHANNEL) + 0x11,$/;"	e	enum:vx_channel_e
VX_CHANNEL_R	include/VX/vx_types.h	/^    VX_CHANNEL_R = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_CHANNEL) + 0x10,$/;"	e	enum:vx_channel_e
VX_CHANNEL_RANGE_FULL	include/VX/vx_types.h	/^    VX_CHANNEL_RANGE_FULL = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_COLOR_RANGE) + 0x0,$/;"	e	enum:vx_channel_range_e
VX_CHANNEL_RANGE_RESTRICTED	include/VX/vx_types.h	/^    VX_CHANNEL_RANGE_RESTRICTED = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_COLOR_RANGE) + 0x1,$/;"	e	enum:vx_channel_range_e
VX_CHANNEL_U	include/VX/vx_types.h	/^    VX_CHANNEL_U = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_CHANNEL) + 0x15,$/;"	e	enum:vx_channel_e
VX_CHANNEL_V	include/VX/vx_types.h	/^    VX_CHANNEL_V = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_CHANNEL) + 0x16,$/;"	e	enum:vx_channel_e
VX_CHANNEL_Y	include/VX/vx_types.h	/^    VX_CHANNEL_Y = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_CHANNEL) + 0x14,$/;"	e	enum:vx_channel_e
VX_CLASSIFIER_MODEL_UNDEFINED	include/VX/vx_khr_class.h	/^	VX_CLASSIFIER_MODEL_UNDEFINED = VX_ENUM_BASE( VX_ID_KHRONOS, VX_ENUM_CLASSIFIER_MODEL ) + 0x0,$/;"	e	enum:vx_classifier_model_format_e
VX_COLOR_SPACE_BT2020	include/vx_ext_amd.h	/^	VX_COLOR_SPACE_BT2020 = VX_ENUM_BASE(VX_ID_AMD, VX_ENUM_COLOR_SPACE) + 0x1,$/;"	e	enum:vx_color_space_amd_e
VX_COLOR_SPACE_BT601_525	include/VX/vx_types.h	/^    VX_COLOR_SPACE_BT601_525 = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_COLOR_SPACE) + 0x1,$/;"	e	enum:vx_color_space_e
VX_COLOR_SPACE_BT601_625	include/VX/vx_types.h	/^    VX_COLOR_SPACE_BT601_625 = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_COLOR_SPACE) + 0x2,$/;"	e	enum:vx_color_space_e
VX_COLOR_SPACE_BT709	include/VX/vx_types.h	/^    VX_COLOR_SPACE_BT709 = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_COLOR_SPACE) + 0x3,$/;"	e	enum:vx_color_space_e
VX_COLOR_SPACE_DEFAULT	include/VX/vx_types.h	/^    VX_COLOR_SPACE_DEFAULT = VX_COLOR_SPACE_BT709,$/;"	e	enum:vx_color_space_e
VX_COLOR_SPACE_NONE	include/VX/vx_types.h	/^    VX_COLOR_SPACE_NONE = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_COLOR_SPACE) + 0x0,$/;"	e	enum:vx_color_space_e
VX_COMPARE_CCORR	include/VX/vx_types.h	/^    VX_COMPARE_CCORR      = VX_ENUM_BASE( VX_ID_KHRONOS, VX_ENUM_COMP_METRIC ) + 0x3,$/;"	e	enum:vx_comp_metric_e
VX_COMPARE_CCORR_NORM	include/VX/vx_types.h	/^    VX_COMPARE_CCORR_NORM = VX_ENUM_BASE( VX_ID_KHRONOS, VX_ENUM_COMP_METRIC ) + 0x5$/;"	e	enum:vx_comp_metric_e
VX_COMPARE_HAMMING	include/VX/vx_types.h	/^    VX_COMPARE_HAMMING    = VX_ENUM_BASE( VX_ID_KHRONOS, VX_ENUM_COMP_METRIC ) + 0x0,$/;"	e	enum:vx_comp_metric_e
VX_COMPARE_L1	include/VX/vx_types.h	/^    VX_COMPARE_L1         = VX_ENUM_BASE( VX_ID_KHRONOS, VX_ENUM_COMP_METRIC ) + 0x1,$/;"	e	enum:vx_comp_metric_e
VX_COMPARE_L2	include/VX/vx_types.h	/^    VX_COMPARE_L2         = VX_ENUM_BASE( VX_ID_KHRONOS, VX_ENUM_COMP_METRIC ) + 0x2,$/;"	e	enum:vx_comp_metric_e
VX_COMPARE_L2_NORM	include/VX/vx_types.h	/^    VX_COMPARE_L2_NORM    = VX_ENUM_BASE( VX_ID_KHRONOS, VX_ENUM_COMP_METRIC ) + 0x4,$/;"	e	enum:vx_comp_metric_e
VX_CONTEXT_ATTRIBUTE_AMD_AFFINITY	include/vx_ext_amd.h	/^	VX_CONTEXT_ATTRIBUTE_AMD_AFFINITY       = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_CONTEXT) + 0x02,$/;"	e	enum:vx_context_attribute_amd_e
VX_CONTEXT_ATTRIBUTE_AMD_OPENCL_CONTEXT	include/vx_ext_amd.h	/^	VX_CONTEXT_ATTRIBUTE_AMD_OPENCL_CONTEXT = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_CONTEXT) + 0x01,$/;"	e	enum:vx_context_attribute_amd_e
VX_CONTEXT_ATTRIBUTE_AMD_SET_MERGE_RULE	include/vx_ext_amd.h	/^	VX_CONTEXT_ATTRIBUTE_AMD_SET_MERGE_RULE = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_CONTEXT) + 0x04,$/;"	e	enum:vx_context_attribute_amd_e
VX_CONTEXT_ATTRIBUTE_AMD_SET_TEXT_MACRO	include/vx_ext_amd.h	/^	VX_CONTEXT_ATTRIBUTE_AMD_SET_TEXT_MACRO = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_CONTEXT) + 0x03,$/;"	e	enum:vx_context_attribute_amd_e
VX_CONTEXT_ATTRIBUTE_CONVOLUTION_MAXIMUM_DIMENSION	include/VX/vx_compatibility.h	48;"	d
VX_CONTEXT_ATTRIBUTE_EXTENSIONS	include/VX/vx_compatibility.h	47;"	d
VX_CONTEXT_ATTRIBUTE_EXTENSIONS_SIZE	include/VX/vx_compatibility.h	46;"	d
VX_CONTEXT_ATTRIBUTE_IMMEDIATE_BORDER_MODE	include/VX/vx_compatibility.h	50;"	d
VX_CONTEXT_ATTRIBUTE_IMPLEMENTATION	include/VX/vx_compatibility.h	45;"	d
VX_CONTEXT_ATTRIBUTE_MODULES	include/VX/vx_compatibility.h	43;"	d
VX_CONTEXT_ATTRIBUTE_OPTICAL_FLOW_WINDOW_MAXIMUM_DIMENSION	include/VX/vx_compatibility.h	49;"	d
VX_CONTEXT_ATTRIBUTE_REFERENCES	include/VX/vx_compatibility.h	44;"	d
VX_CONTEXT_ATTRIBUTE_UNIQUE_KERNELS	include/VX/vx_compatibility.h	42;"	d
VX_CONTEXT_ATTRIBUTE_UNIQUE_KERNEL_TABLE	include/VX/vx_compatibility.h	51;"	d
VX_CONTEXT_ATTRIBUTE_VENDOR_ID	include/VX/vx_compatibility.h	40;"	d
VX_CONTEXT_ATTRIBUTE_VERSION	include/VX/vx_compatibility.h	41;"	d
VX_CONTEXT_CL_QUEUE_PROPERTIES	include/vx_ext_amd.h	/^	VX_CONTEXT_CL_QUEUE_PROPERTIES = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_CONTEXT) + 0x06,$/;"	e	enum:vx_context_attribute_amd_e
VX_CONTEXT_CONVOLUTION_MAX_DIMENSION	include/VX/vx_types.h	/^    VX_CONTEXT_CONVOLUTION_MAX_DIMENSION = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONTEXT) + 0x8,$/;"	e	enum:vx_context_attribute_e
VX_CONTEXT_EXTENSIONS	include/VX/vx_types.h	/^    VX_CONTEXT_EXTENSIONS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONTEXT) + 0x7,$/;"	e	enum:vx_context_attribute_e
VX_CONTEXT_EXTENSIONS_SIZE	include/VX/vx_types.h	/^    VX_CONTEXT_EXTENSIONS_SIZE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONTEXT) + 0x6,$/;"	e	enum:vx_context_attribute_e
VX_CONTEXT_IMMEDIATE_BORDER	include/VX/vx_types.h	/^    VX_CONTEXT_IMMEDIATE_BORDER = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONTEXT) + 0xA,$/;"	e	enum:vx_context_attribute_e
VX_CONTEXT_IMMEDIATE_BORDER_POLICY	include/VX/vx_types.h	/^    VX_CONTEXT_IMMEDIATE_BORDER_POLICY = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONTEXT) + 0xC,$/;"	e	enum:vx_context_attribute_e
VX_CONTEXT_IMPLEMENTATION	include/VX/vx_types.h	/^    VX_CONTEXT_IMPLEMENTATION = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONTEXT) + 0x5,$/;"	e	enum:vx_context_attribute_e
VX_CONTEXT_MAX_TENSOR_DIMENSIONS	include/vx_ext_amd.h	/^	VX_CONTEXT_MAX_TENSOR_DIMENSIONS = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_CONTEXT) + 0x05,$/;"	e	enum:vx_context_attribute_amd_e
VX_CONTEXT_MAX_TENSOR_DIMS	include/VX/vx_types.h	/^    VX_CONTEXT_MAX_TENSOR_DIMS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONTEXT) + 0xE,$/;"	e	enum:vx_context_attribute_e
VX_CONTEXT_MODULES	include/VX/vx_types.h	/^    VX_CONTEXT_MODULES = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONTEXT) + 0x3,$/;"	e	enum:vx_context_attribute_e
VX_CONTEXT_NONLINEAR_MAX_DIMENSION	include/VX/vx_types.h	/^    VX_CONTEXT_NONLINEAR_MAX_DIMENSION = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONTEXT) + 0xd,$/;"	e	enum:vx_context_attribute_e
VX_CONTEXT_OPTICAL_FLOW_MAX_WINDOW_DIMENSION	include/VX/vx_types.h	/^    VX_CONTEXT_OPTICAL_FLOW_MAX_WINDOW_DIMENSION = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONTEXT) + 0x9,$/;"	e	enum:vx_context_attribute_e
VX_CONTEXT_REFERENCES	include/VX/vx_types.h	/^    VX_CONTEXT_REFERENCES = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONTEXT) + 0x4,$/;"	e	enum:vx_context_attribute_e
VX_CONTEXT_UNIQUE_KERNELS	include/VX/vx_types.h	/^    VX_CONTEXT_UNIQUE_KERNELS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONTEXT) + 0x2,$/;"	e	enum:vx_context_attribute_e
VX_CONTEXT_UNIQUE_KERNEL_TABLE	include/VX/vx_types.h	/^    VX_CONTEXT_UNIQUE_KERNEL_TABLE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONTEXT) + 0xB,$/;"	e	enum:vx_context_attribute_e
VX_CONTEXT_VENDOR_ID	include/VX/vx_types.h	/^    VX_CONTEXT_VENDOR_ID = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONTEXT) + 0x0,$/;"	e	enum:vx_context_attribute_e
VX_CONTEXT_VERSION	include/VX/vx_types.h	/^    VX_CONTEXT_VERSION = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONTEXT) + 0x1,$/;"	e	enum:vx_context_attribute_e
VX_CONVERT_POLICY_SATURATE	include/VX/vx_types.h	/^    VX_CONVERT_POLICY_SATURATE = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_CONVERT_POLICY) + 0x1,$/;"	e	enum:vx_convert_policy_e
VX_CONVERT_POLICY_WRAP	include/VX/vx_types.h	/^    VX_CONVERT_POLICY_WRAP = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_CONVERT_POLICY) + 0x0,$/;"	e	enum:vx_convert_policy_e
VX_CONVOLUTION_ATTRIBUTE_COLUMNS	include/VX/vx_compatibility.h	111;"	d
VX_CONVOLUTION_ATTRIBUTE_ROWS	include/VX/vx_compatibility.h	110;"	d
VX_CONVOLUTION_ATTRIBUTE_SCALE	include/VX/vx_compatibility.h	112;"	d
VX_CONVOLUTION_ATTRIBUTE_SIZE	include/VX/vx_compatibility.h	113;"	d
VX_CONVOLUTION_COLUMNS	include/VX/vx_types.h	/^    VX_CONVOLUTION_COLUMNS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONVOLUTION) + 0x1,$/;"	e	enum:vx_convolution_attribute_e
VX_CONVOLUTION_ROWS	include/VX/vx_types.h	/^    VX_CONVOLUTION_ROWS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONVOLUTION) + 0x0,$/;"	e	enum:vx_convolution_attribute_e
VX_CONVOLUTION_SCALE	include/VX/vx_types.h	/^    VX_CONVOLUTION_SCALE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONVOLUTION) + 0x2,$/;"	e	enum:vx_convolution_attribute_e
VX_CONVOLUTION_SIZE	include/VX/vx_types.h	/^    VX_CONVOLUTION_SIZE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_CONVOLUTION) + 0x3,$/;"	e	enum:vx_convolution_attribute_e
VX_DELAY_ATTRIBUTE_SLOTS	include/VX/vx_compatibility.h	132;"	d
VX_DELAY_ATTRIBUTE_TYPE	include/VX/vx_compatibility.h	131;"	d
VX_DELAY_SLOTS	include/VX/vx_types.h	/^    VX_DELAY_SLOTS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_DELAY) + 0x1,$/;"	e	enum:vx_delay_attribute_e
VX_DELAY_TYPE	include/VX/vx_types.h	/^    VX_DELAY_TYPE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_DELAY) + 0x0,$/;"	e	enum:vx_delay_attribute_e
VX_DF_IMAGE	include/VX/vx_types.h	525;"	d
VX_DF_IMAGE_F16_AMD	include/vx_ext_amd.h	/^	VX_DF_IMAGE_F16_AMD   = VX_DF_IMAGE('F', '0', '1', '6'),  \/\/ AGO image with 16-bit floating-point (half)$/;"	e	enum:vx_df_image_amd_e
VX_DF_IMAGE_F32_AMD	include/vx_ext_amd.h	/^	VX_DF_IMAGE_F32_AMD   = VX_DF_IMAGE('F', '0', '3', '2'),  \/\/ AGO image with 32-bit floating-point (float)$/;"	e	enum:vx_df_image_amd_e
VX_DF_IMAGE_F32x3_AMD	include/vx_ext_amd.h	/^	VX_DF_IMAGE_F32x3_AMD = VX_DF_IMAGE('F', '3', '3', '2'),  \/\/ AGO image with THREE 32-bit floating-point channels in one buffer$/;"	e	enum:vx_df_image_amd_e
VX_DF_IMAGE_F64_AMD	include/vx_ext_amd.h	/^	VX_DF_IMAGE_F64_AMD   = VX_DF_IMAGE('F', '0', '6', '4'),  \/\/ AGO image with 64-bit floating-point (double)$/;"	e	enum:vx_df_image_amd_e
VX_DF_IMAGE_IYUV	include/VX/vx_types.h	/^    VX_DF_IMAGE_IYUV = VX_DF_IMAGE('I','Y','U','V'),$/;"	e	enum:vx_df_image_e
VX_DF_IMAGE_NV12	include/VX/vx_types.h	/^    VX_DF_IMAGE_NV12 = VX_DF_IMAGE('N','V','1','2'),$/;"	e	enum:vx_df_image_e
VX_DF_IMAGE_NV21	include/VX/vx_types.h	/^    VX_DF_IMAGE_NV21 = VX_DF_IMAGE('N','V','2','1'),$/;"	e	enum:vx_df_image_e
VX_DF_IMAGE_RGB	include/VX/vx_types.h	/^    VX_DF_IMAGE_RGB  = VX_DF_IMAGE('R','G','B','2'),$/;"	e	enum:vx_df_image_e
VX_DF_IMAGE_RGBX	include/VX/vx_types.h	/^    VX_DF_IMAGE_RGBX = VX_DF_IMAGE('R','G','B','A'),$/;"	e	enum:vx_df_image_e
VX_DF_IMAGE_S16	include/VX/vx_types.h	/^    VX_DF_IMAGE_S16  = VX_DF_IMAGE('S','0','1','6'),$/;"	e	enum:vx_df_image_e
VX_DF_IMAGE_S32	include/VX/vx_types.h	/^    VX_DF_IMAGE_S32  = VX_DF_IMAGE('S','0','3','2'),$/;"	e	enum:vx_df_image_e
VX_DF_IMAGE_U16	include/VX/vx_types.h	/^    VX_DF_IMAGE_U16  = VX_DF_IMAGE('U','0','1','6'),$/;"	e	enum:vx_df_image_e
VX_DF_IMAGE_U1_AMD	include/vx_ext_amd.h	/^	VX_DF_IMAGE_U1_AMD    = VX_DF_IMAGE('U', '0', '0', '1'),  \/\/ AGO image with 1-bit data$/;"	e	enum:vx_df_image_amd_e
VX_DF_IMAGE_U32	include/VX/vx_types.h	/^    VX_DF_IMAGE_U32  = VX_DF_IMAGE('U','0','3','2'),$/;"	e	enum:vx_df_image_e
VX_DF_IMAGE_U8	include/VX/vx_types.h	/^    VX_DF_IMAGE_U8 = VX_DF_IMAGE('U','0','0','8'),$/;"	e	enum:vx_df_image_e
VX_DF_IMAGE_UYVY	include/VX/vx_types.h	/^    VX_DF_IMAGE_UYVY = VX_DF_IMAGE('U','Y','V','Y'),$/;"	e	enum:vx_df_image_e
VX_DF_IMAGE_VIRT	include/VX/vx_types.h	/^    VX_DF_IMAGE_VIRT = VX_DF_IMAGE('V','I','R','T'),$/;"	e	enum:vx_df_image_e
VX_DF_IMAGE_YUV4	include/VX/vx_types.h	/^    VX_DF_IMAGE_YUV4 = VX_DF_IMAGE('Y','U','V','4'),$/;"	e	enum:vx_df_image_e
VX_DF_IMAGE_YUYV	include/VX/vx_types.h	/^    VX_DF_IMAGE_YUYV = VX_DF_IMAGE('Y','U','Y','V'),$/;"	e	enum:vx_df_image_e
VX_DIRECTIVE_AMD_COPY_TO_OPENCL	include/vx_ext_amd.h	/^	VX_DIRECTIVE_AMD_COPY_TO_OPENCL = VX_ENUM_BASE(VX_ID_AMD, VX_ENUM_DIRECTIVE) + 0x02,$/;"	e	enum:vx_directive_amd_e
VX_DIRECTIVE_AMD_DISABLE_OPENCL_FLUSH	include/vx_ext_amd.h	/^	VX_DIRECTIVE_AMD_DISABLE_OPENCL_FLUSH    = VX_ENUM_BASE(VX_ID_AMD, VX_ENUM_DIRECTIVE) + 0x05,$/;"	e	enum:vx_directive_amd_e
VX_DIRECTIVE_AMD_DISABLE_PROFILE_CAPTURE	include/vx_ext_amd.h	/^	VX_DIRECTIVE_AMD_DISABLE_PROFILE_CAPTURE = VX_ENUM_BASE(VX_ID_AMD, VX_ENUM_DIRECTIVE) + 0x04,$/;"	e	enum:vx_directive_amd_e
VX_DIRECTIVE_AMD_ENABLE_PROFILE_CAPTURE	include/vx_ext_amd.h	/^	VX_DIRECTIVE_AMD_ENABLE_PROFILE_CAPTURE  = VX_ENUM_BASE(VX_ID_AMD, VX_ENUM_DIRECTIVE) + 0x03,$/;"	e	enum:vx_directive_amd_e
VX_DIRECTIVE_AMD_READ_ONLY	include/vx_ext_amd.h	/^	VX_DIRECTIVE_AMD_READ_ONLY      = VX_ENUM_BASE(VX_ID_AMD, VX_ENUM_DIRECTIVE) + 0x01,$/;"	e	enum:vx_directive_amd_e
VX_DIRECTIVE_DISABLE_LOGGING	include/VX/vx_types.h	/^    VX_DIRECTIVE_DISABLE_LOGGING = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_DIRECTIVE) + 0x0,$/;"	e	enum:vx_directive_e
VX_DIRECTIVE_DISABLE_PERFORMANCE	include/VX/vx_types.h	/^    VX_DIRECTIVE_DISABLE_PERFORMANCE = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_DIRECTIVE) + 0x2,$/;"	e	enum:vx_directive_e
VX_DIRECTIVE_ENABLE_LOGGING	include/VX/vx_types.h	/^    VX_DIRECTIVE_ENABLE_LOGGING = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_DIRECTIVE) + 0x1,$/;"	e	enum:vx_directive_e
VX_DIRECTIVE_ENABLE_PERFORMANCE	include/VX/vx_types.h	/^    VX_DIRECTIVE_ENABLE_PERFORMANCE = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_DIRECTIVE) + 0x3,$/;"	e	enum:vx_directive_e
VX_DISTRIBUTION_ATTRIBUTE_BINS	include/VX/vx_compatibility.h	93;"	d
VX_DISTRIBUTION_ATTRIBUTE_DIMENSIONS	include/VX/vx_compatibility.h	90;"	d
VX_DISTRIBUTION_ATTRIBUTE_OFFSET	include/VX/vx_compatibility.h	91;"	d
VX_DISTRIBUTION_ATTRIBUTE_RANGE	include/VX/vx_compatibility.h	92;"	d
VX_DISTRIBUTION_ATTRIBUTE_SIZE	include/VX/vx_compatibility.h	95;"	d
VX_DISTRIBUTION_ATTRIBUTE_WINDOW	include/VX/vx_compatibility.h	94;"	d
VX_DISTRIBUTION_BINS	include/VX/vx_types.h	/^    VX_DISTRIBUTION_BINS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_DISTRIBUTION) + 0x3,$/;"	e	enum:vx_distribution_attribute_e
VX_DISTRIBUTION_DIMENSIONS	include/VX/vx_types.h	/^    VX_DISTRIBUTION_DIMENSIONS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_DISTRIBUTION) + 0x0,$/;"	e	enum:vx_distribution_attribute_e
VX_DISTRIBUTION_OFFSET	include/VX/vx_types.h	/^    VX_DISTRIBUTION_OFFSET = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_DISTRIBUTION) + 0x1,$/;"	e	enum:vx_distribution_attribute_e
VX_DISTRIBUTION_RANGE	include/VX/vx_types.h	/^    VX_DISTRIBUTION_RANGE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_DISTRIBUTION) + 0x2,$/;"	e	enum:vx_distribution_attribute_e
VX_DISTRIBUTION_SIZE	include/VX/vx_types.h	/^    VX_DISTRIBUTION_SIZE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_DISTRIBUTION) + 0x5,$/;"	e	enum:vx_distribution_attribute_e
VX_DISTRIBUTION_WINDOW	include/VX/vx_types.h	/^    VX_DISTRIBUTION_WINDOW = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_DISTRIBUTION) + 0x4,$/;"	e	enum:vx_distribution_attribute_e
VX_ENUM_ACCESSOR	include/VX/vx_types.h	/^    VX_ENUM_ACCESSOR        = 0x11, \/*!< \\brief An accessor flag type. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_ACTION	include/VX/vx_types.h	/^    VX_ENUM_ACTION          = 0x01, \/*!< \\brief Action Codes. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_BASE	include/VX/vx_types.h	549;"	d
VX_ENUM_BORDER	include/VX/vx_types.h	/^    VX_ENUM_BORDER          = 0x0C, \/*!< \\brief Border Mode List. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_BORDER_MODE	include/VX/vx_compatibility.h	28;"	d
VX_ENUM_BORDER_POLICY	include/VX/vx_types.h	/^    VX_ENUM_BORDER_POLICY   = 0x14, \/*!< \\brief Unsupported Border Mode Policy List. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_CHANNEL	include/VX/vx_types.h	/^    VX_ENUM_CHANNEL         = 0x09, \/*!< \\brief Channel Name. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_CLASSIFIER_MODEL	include/VX/vx_khr_class.h	/^	VX_ENUM_CLASSIFIER_MODEL= 0x1E, \/*!< \\brief Classifier model *\/$/;"	e	enum:vx_class_enum_e
VX_ENUM_COLOR_RANGE	include/VX/vx_types.h	/^    VX_ENUM_COLOR_RANGE     = 0x07, \/*!< \\brief Color Space Range. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_COLOR_SPACE	include/VX/vx_types.h	/^    VX_ENUM_COLOR_SPACE     = 0x06, \/*!< \\brief Color Space. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_COMPARISON	include/VX/vx_types.h	/^    VX_ENUM_COMPARISON      = 0x0D, \/*!< \\brief Comparison Values. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_COMP_METRIC	include/VX/vx_types.h	/^    VX_ENUM_COMP_METRIC     = 0x19, \/*!< \\brief Compare metric. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_CONVERT_POLICY	include/VX/vx_types.h	/^    VX_ENUM_CONVERT_POLICY  = 0x0A, \/*!< \\brief Convert Policy. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_DIRECTION	include/VX/vx_types.h	/^    VX_ENUM_DIRECTION       = 0x00, \/*!< \\brief Parameter Direction. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_DIRECTIVE	include/VX/vx_types.h	/^    VX_ENUM_DIRECTIVE       = 0x03, \/*!< \\brief Directive Values. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_GRAPH_STATE	include/VX/vx_types.h	/^    VX_ENUM_GRAPH_STATE     = 0x15, \/*!< \\brief Graph attribute states. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_HINT	include/VX/vx_types.h	/^    VX_ENUM_HINT            = 0x02, \/*!< \\brief Hint Values. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_IMPORT_MEM	include/VX/vx_compatibility.h	144;"	d
VX_ENUM_INTERPOLATION	include/VX/vx_types.h	/^    VX_ENUM_INTERPOLATION   = 0x04, \/*!< \\brief Interpolation Types. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_IX_USE	include/VX/vx_import.h	30;"	d
VX_ENUM_LBP_FORMAT	include/VX/vx_types.h	/^    VX_ENUM_LBP_FORMAT      = 0x18, \/*!< \\brief Lbp format. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_MASK	include/VX/vx_types.h	498;"	d
VX_ENUM_MEMORY_TYPE	include/VX/vx_types.h	/^    VX_ENUM_MEMORY_TYPE     = 0x0E, \/*!< \\brief The memory type enumeration. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_NN_ACTIVATION_FUNCTION_TYPE	include/VX/vx_khr_nn.h	/^    VX_ENUM_NN_ACTIVATION_FUNCTION_TYPE	= 0x1D,$/;"	e	enum:vx_nn_enum_e
VX_ENUM_NN_NORMALIZATION_TYPE	include/VX/vx_khr_nn.h	/^    VX_ENUM_NN_NORMALIZATION_TYPE	= 0x1C,$/;"	e	enum:vx_nn_enum_e
VX_ENUM_NN_POOLING_TYPE	include/VX/vx_khr_nn.h	/^    VX_ENUM_NN_POOLING_TYPE	= 0x1B,$/;"	e	enum:vx_nn_enum_e
VX_ENUM_NN_ROUNDING_TYPE	include/VX/vx_khr_nn.h	/^    VX_ENUM_NN_ROUNDING_TYPE	= 0x1A,$/;"	e	enum:vx_nn_enum_e
VX_ENUM_NONLINEAR	include/VX/vx_types.h	/^    VX_ENUM_NONLINEAR       = 0x16, \/*!< \\brief Non-linear function list. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_NORM_TYPE	include/VX/vx_types.h	/^    VX_ENUM_NORM_TYPE       = 0x10, \/*!< \\brief A norm type. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_OVERFLOW	include/VX/vx_types.h	/^    VX_ENUM_OVERFLOW        = 0x05, \/*!< \\brief Overflow Policies. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_PARAMETER_STATE	include/VX/vx_types.h	/^    VX_ENUM_PARAMETER_STATE = 0x08, \/*!< \\brief Parameter State. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_PATTERN	include/VX/vx_types.h	/^    VX_ENUM_PATTERN         = 0x17, \/*!< \\brief Matrix pattern enumeration. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_ROUND_POLICY	include/VX/vx_types.h	/^    VX_ENUM_ROUND_POLICY    = 0x12, \/*!< \\brief Rounding Policy. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_SCALAR_OPERATION	include/VX/vx_types.h	/^    VX_ENUM_SCALAR_OPERATION= 0X20  \/*!< \\brief Scalar operation list. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_TARGET	include/VX/vx_types.h	/^    VX_ENUM_TARGET          = 0x13, \/*!< \\brief Target. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_TERM_CRITERIA	include/VX/vx_types.h	/^    VX_ENUM_TERM_CRITERIA   = 0x0F, \/*!< \\brief A termination criteria. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_THRESHOLD_TYPE	include/VX/vx_types.h	/^    VX_ENUM_THRESHOLD_TYPE  = 0x0B, \/*!< \\brief Threshold Type List. *\/$/;"	e	enum:vx_enum_e
VX_ENUM_TYPE	include/VX/vx_types.h	513;"	d
VX_ENUM_TYPE_MASK	include/VX/vx_types.h	493;"	d
VX_ERROR_GRAPH_ABANDONED	include/VX/vx_types.h	/^    VX_ERROR_GRAPH_ABANDONED            = -22,\/*!< \\brief Indicates that the graph is stopped due to an error or a callback that abandoned execution. *\/$/;"	e	enum:vx_status_e
VX_ERROR_GRAPH_SCHEDULED	include/VX/vx_types.h	/^    VX_ERROR_GRAPH_SCHEDULED            = -21,\/*!< \\brief Indicates that the supplied graph already has been scheduled and may be currently executing. *\/$/;"	e	enum:vx_status_e
VX_ERROR_INVALID_DIMENSION	include/VX/vx_types.h	/^    VX_ERROR_INVALID_DIMENSION          = -15,\/*!< \\brief Indicates that the supplied parameter is too big or too small in dimension. *\/$/;"	e	enum:vx_status_e
VX_ERROR_INVALID_FORMAT	include/VX/vx_types.h	/^    VX_ERROR_INVALID_FORMAT             = -14,\/*!< \\brief Indicates that the supplied parameter is in an invalid format. *\/$/;"	e	enum:vx_status_e
VX_ERROR_INVALID_GRAPH	include/VX/vx_types.h	/^    VX_ERROR_INVALID_GRAPH              = -18,\/*!< \\brief Indicates that the supplied graph has invalid connections (cycles). *\/$/;"	e	enum:vx_status_e
VX_ERROR_INVALID_LINK	include/VX/vx_types.h	/^    VX_ERROR_INVALID_LINK               = -13,\/*!< \\brief Indicates that the link is not possible as specified. The parameters are incompatible. *\/$/;"	e	enum:vx_status_e
VX_ERROR_INVALID_MODULE	include/VX/vx_types.h	/^    VX_ERROR_INVALID_MODULE             = -11,\/*!< \\brief This is returned from <tt>\\ref vxLoadKernels<\/tt> when the module does not contain the entry point. *\/$/;"	e	enum:vx_status_e
VX_ERROR_INVALID_NODE	include/VX/vx_types.h	/^    VX_ERROR_INVALID_NODE               = -19,\/*!< \\brief Indicates that the supplied node could not be created.*\/$/;"	e	enum:vx_status_e
VX_ERROR_INVALID_PARAMETERS	include/VX/vx_types.h	/^    VX_ERROR_INVALID_PARAMETERS         = -10,\/*!< \\brief Indicates that the supplied parameter information does not match the kernel contract. *\/$/;"	e	enum:vx_status_e
VX_ERROR_INVALID_REFERENCE	include/VX/vx_types.h	/^    VX_ERROR_INVALID_REFERENCE          = -12,\/*!< \\brief Indicates that the reference provided is not valid. *\/$/;"	e	enum:vx_status_e
VX_ERROR_INVALID_SCOPE	include/VX/vx_types.h	/^    VX_ERROR_INVALID_SCOPE              = -20,\/*!< \\brief Indicates that the supplied parameter is from another scope and cannot be used in the current scope. *\/$/;"	e	enum:vx_status_e
VX_ERROR_INVALID_TYPE	include/VX/vx_types.h	/^    VX_ERROR_INVALID_TYPE               = -17,\/*!< \\brief Indicates that the supplied type parameter is incorrect. *\/$/;"	e	enum:vx_status_e
VX_ERROR_INVALID_VALUE	include/VX/vx_types.h	/^    VX_ERROR_INVALID_VALUE              = -16,\/*!< \\brief Indicates that the supplied parameter has an incorrect value. *\/$/;"	e	enum:vx_status_e
VX_ERROR_MULTIPLE_WRITERS	include/VX/vx_types.h	/^    VX_ERROR_MULTIPLE_WRITERS           = -23,\/*!< \\brief Indicates that the graph has more than one node outputting to the same data object. This is an invalid graph structure. *\/$/;"	e	enum:vx_status_e
VX_ERROR_NOT_ALLOCATED	include/VX/vx_types.h	/^    VX_ERROR_NOT_ALLOCATED              = -5,\/*!< \\brief Indicates to the system that the parameter must be allocated by the system.  *\/$/;"	e	enum:vx_status_e
VX_ERROR_NOT_COMPATIBLE	include/VX/vx_types.h	/^    VX_ERROR_NOT_COMPATIBLE             = -6,\/*!< \\brief Indicates that the attempt to link two parameters together failed due to type incompatibilty. *\/$/;"	e	enum:vx_status_e
VX_ERROR_NOT_IMPLEMENTED	include/VX/vx_types.h	/^    VX_ERROR_NOT_IMPLEMENTED            = -2,\/*!< \\brief Indicates that the requested kernel is missing. \\see vx_kernel_e vxGetKernelByName. *\/$/;"	e	enum:vx_status_e
VX_ERROR_NOT_SUFFICIENT	include/VX/vx_types.h	/^    VX_ERROR_NOT_SUFFICIENT             = -4,\/*!< \\brief Indicates that the given graph has failed verification due to an insufficient number of required parameters, which cannot be automatically created. Typically this indicates required atomic parameters. \\see vxVerifyGraph. *\/$/;"	e	enum:vx_status_e
VX_ERROR_NOT_SUPPORTED	include/VX/vx_types.h	/^    VX_ERROR_NOT_SUPPORTED              = -3,\/*!< \\brief Indicates that the requested set of parameters produce a configuration that cannot be supported. Refer to the supplied documentation on the configured kernels. \\see vx_kernel_e. This is also returned if a function to set an attribute is called on a Read-only attribute.*\/$/;"	e	enum:vx_status_e
VX_ERROR_NO_MEMORY	include/VX/vx_types.h	/^    VX_ERROR_NO_MEMORY                  = -8,\/*!< \\brief Indicates that an internal or implicit allocation failed. Typically catastrophic. After detection, deconstruct the context. \\see vxVerifyGraph. *\/$/;"	e	enum:vx_status_e
VX_ERROR_NO_RESOURCES	include/VX/vx_types.h	/^    VX_ERROR_NO_RESOURCES               = -7,\/*!< \\brief Indicates that an internal or implicit resource can not be acquired (not memory). This is typically catastrophic. After detection, deconstruct the context. \\see vxVerifyGraph. *\/$/;"	e	enum:vx_status_e
VX_ERROR_OPTIMIZED_AWAY	include/VX/vx_types.h	/^    VX_ERROR_OPTIMIZED_AWAY             = -9,\/*!< \\brief Indicates that the object refered to has been optimized out of existence. *\/$/;"	e	enum:vx_status_e
VX_ERROR_REFERENCE_NONZERO	include/VX/vx_types.h	/^    VX_ERROR_REFERENCE_NONZERO          = -24,\/*!< \\brief Indicates that an operation did not complete due to a reference count being non-zero. *\/$/;"	e	enum:vx_status_e
VX_FAILURE	include/VX/vx_types.h	/^    VX_FAILURE                          = -1,\/*!< \\brief Indicates a generic error code, used when no other describes the error. *\/$/;"	e	enum:vx_status_e
VX_FMT_REF	include/VX/vx_types.h	1469;"	d
VX_FMT_REF	include/VX/vx_types.h	1478;"	d
VX_FMT_REF	include/VX/vx_types.h	1488;"	d
VX_FMT_SIZE	include/VX/vx_types.h	1473;"	d
VX_FMT_SIZE	include/VX/vx_types.h	1482;"	d
VX_FMT_SIZE	include/VX/vx_types.h	1492;"	d
VX_GRAPH_ATTRIBUTE_AMD_AFFINITY	include/vx_ext_amd.h	/^	VX_GRAPH_ATTRIBUTE_AMD_AFFINITY                     = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_GRAPH) + 0x01,$/;"	e	enum:vx_graph_attribute_amd_e
VX_GRAPH_ATTRIBUTE_AMD_EXPORT_TO_TEXT	include/vx_ext_amd.h	/^	VX_GRAPH_ATTRIBUTE_AMD_EXPORT_TO_TEXT               = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_GRAPH) + 0x03,$/;"	e	enum:vx_graph_attribute_amd_e
VX_GRAPH_ATTRIBUTE_AMD_IMPORT_FROM_TEXT	include/vx_ext_amd.h	/^	VX_GRAPH_ATTRIBUTE_AMD_IMPORT_FROM_TEXT             = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_GRAPH) + 0x02,$/;"	e	enum:vx_graph_attribute_amd_e
VX_GRAPH_ATTRIBUTE_AMD_OPENCL_COMMAND_QUEUE	include/vx_ext_amd.h	/^	VX_GRAPH_ATTRIBUTE_AMD_OPENCL_COMMAND_QUEUE         = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_GRAPH) + 0x08,$/;"	e	enum:vx_graph_attribute_amd_e
VX_GRAPH_ATTRIBUTE_AMD_OPTIMIZER_FLAGS	include/vx_ext_amd.h	/^	VX_GRAPH_ATTRIBUTE_AMD_OPTIMIZER_FLAGS              = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_GRAPH) + 0x04,$/;"	e	enum:vx_graph_attribute_amd_e
VX_GRAPH_ATTRIBUTE_AMD_PERFORMANCE_INTERNAL_AVG	include/vx_ext_amd.h	/^	VX_GRAPH_ATTRIBUTE_AMD_PERFORMANCE_INTERNAL_AVG     = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_GRAPH) + 0x06,$/;"	e	enum:vx_graph_attribute_amd_e
VX_GRAPH_ATTRIBUTE_AMD_PERFORMANCE_INTERNAL_LAST	include/vx_ext_amd.h	/^	VX_GRAPH_ATTRIBUTE_AMD_PERFORMANCE_INTERNAL_LAST    = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_GRAPH) + 0x05,$/;"	e	enum:vx_graph_attribute_amd_e
VX_GRAPH_ATTRIBUTE_AMD_PERFORMANCE_INTERNAL_PROFILE	include/vx_ext_amd.h	/^	VX_GRAPH_ATTRIBUTE_AMD_PERFORMANCE_INTERNAL_PROFILE = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_GRAPH) + 0x07,$/;"	e	enum:vx_graph_attribute_amd_e
VX_GRAPH_ATTRIBUTE_NUMNODES	include/VX/vx_compatibility.h	81;"	d
VX_GRAPH_ATTRIBUTE_NUMPARAMETERS	include/VX/vx_compatibility.h	84;"	d
VX_GRAPH_ATTRIBUTE_PERFORMANCE	include/VX/vx_compatibility.h	83;"	d
VX_GRAPH_ATTRIBUTE_STATUS	include/VX/vx_compatibility.h	82;"	d
VX_GRAPH_NUMNODES	include/VX/vx_types.h	/^    VX_GRAPH_NUMNODES = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_GRAPH) + 0x0,$/;"	e	enum:vx_graph_attribute_e
VX_GRAPH_NUMPARAMETERS	include/VX/vx_types.h	/^    VX_GRAPH_NUMPARAMETERS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_GRAPH) + 0x3,$/;"	e	enum:vx_graph_attribute_e
VX_GRAPH_PERFORMANCE	include/VX/vx_types.h	/^    VX_GRAPH_PERFORMANCE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_GRAPH) + 0x2,$/;"	e	enum:vx_graph_attribute_e
VX_GRAPH_STATE	include/VX/vx_types.h	/^    VX_GRAPH_STATE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_GRAPH) + 0x4,$/;"	e	enum:vx_graph_attribute_e
VX_GRAPH_STATE_ABANDONED	include/VX/vx_types.h	/^   VX_GRAPH_STATE_ABANDONED = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_GRAPH_STATE) + 0x3,$/;"	e	enum:vx_graph_state_e
VX_GRAPH_STATE_COMPLETED	include/VX/vx_types.h	/^   VX_GRAPH_STATE_COMPLETED = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_GRAPH_STATE) + 0x4,$/;"	e	enum:vx_graph_state_e
VX_GRAPH_STATE_RUNNING	include/VX/vx_types.h	/^   VX_GRAPH_STATE_RUNNING = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_GRAPH_STATE) + 0x2,$/;"	e	enum:vx_graph_state_e
VX_GRAPH_STATE_UNVERIFIED	include/VX/vx_types.h	/^   VX_GRAPH_STATE_UNVERIFIED = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_GRAPH_STATE) + 0x0,$/;"	e	enum:vx_graph_state_e
VX_GRAPH_STATE_VERIFIED	include/VX/vx_types.h	/^   VX_GRAPH_STATE_VERIFIED = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_GRAPH_STATE) + 0x1,$/;"	e	enum:vx_graph_state_e
VX_HINT_PERFORMANCE_DEFAULT	include/VX/vx_types.h	/^    VX_HINT_PERFORMANCE_DEFAULT = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_HINT) + 0x1,$/;"	e	enum:vx_hint_e
VX_HINT_PERFORMANCE_HIGH_SPEED	include/VX/vx_types.h	/^    VX_HINT_PERFORMANCE_HIGH_SPEED = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_HINT) + 0x3,$/;"	e	enum:vx_hint_e
VX_HINT_PERFORMANCE_LOW_POWER	include/VX/vx_types.h	/^    VX_HINT_PERFORMANCE_LOW_POWER = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_HINT) + 0x2,$/;"	e	enum:vx_hint_e
VX_HINT_SERIALIZE	include/VX/vx_compatibility.h	141;"	d
VX_ID_AMD	include/VX/vx_vendors.h	/^    VX_ID_AMD       = 0x00D, \/*!< \\brief Advanced Micro Devices *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_ARM	include/VX/vx_vendors.h	/^    VX_ID_ARM       = 0x004, \/*!< \\brief ARM Ltd. *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_AXIS	include/VX/vx_vendors.h	/^    VX_ID_AXIS      = 0x009, \/*!< \\brief Axis Communications *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_BDTI	include/VX/vx_vendors.h	/^    VX_ID_BDTI      = 0x005, \/*!< \\brief Berkley Design Technology, Inc. *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_BROADCOM	include/VX/vx_vendors.h	/^    VX_ID_BROADCOM  = 0x00E, \/*!< \\brief Broadcom Corporation *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_CADENCE	include/VX/vx_vendors.h	/^    VX_ID_CADENCE   = 0x019, \/*!< \\brief Cadence *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_CEVA	include/VX/vx_vendors.h	/^    VX_ID_CEVA      = 0x013, \/*!< \\brief CEVA DSP *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_DEFAULT	include/VX/vx_vendors.h	/^    VX_ID_DEFAULT = VX_ID_MAX,$/;"	e	enum:vx_vendor_id_e
VX_ID_FREESCALE	include/VX/vx_vendors.h	/^    VX_ID_FREESCALE = 0x00C, \/*!< \\brief Freescale Semiconductor *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_HUAWEI	include/VX/vx_vendors.h	/^    VX_ID_HUAWEI    = 0x01A, \/*!< \\brief Huawei *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_IMAGINATION	include/VX/vx_vendors.h	/^    VX_ID_IMAGINATION=0x015, \/*!< \\brief Imagination Technologies *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_INTEL	include/VX/vx_vendors.h	/^    VX_ID_INTEL     = 0x00F, \/*!< \\brief Intel Corporation *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_ITSEEZ	include/VX/vx_vendors.h	/^    VX_ID_ITSEEZ    = 0x014, \/*!< \\brief Itseez, Inc. *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_KHRONOS	include/VX/vx_vendors.h	/^    VX_ID_KHRONOS   = 0x000, \/*!< \\brief The Khronos Group *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_MARVELL	include/VX/vx_vendors.h	/^    VX_ID_MARVELL   = 0x010, \/*!< \\brief Marvell Technology Group Ltd. *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_MAX	include/VX/vx_vendors.h	/^    VX_ID_MAX       = 0xFFF,$/;"	e	enum:vx_vendor_id_e
VX_ID_MEDIATEK	include/VX/vx_vendors.h	/^    VX_ID_MEDIATEK  = 0x011, \/*!< \\brief MediaTek, Inc. *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_MOVIDIUS	include/VX/vx_vendors.h	/^    VX_ID_MOVIDIUS  = 0x00A, \/*!< \\brief Movidius Ltd. *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_NVIDIA	include/VX/vx_vendors.h	/^    VX_ID_NVIDIA    = 0x003, \/*!< \\brief NVIDIA Corporation *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_NXP	include/VX/vx_vendors.h	/^    VX_ID_NXP       = 0x016, \/*!< \\brief NXP Semiconductors *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_QUALCOMM	include/VX/vx_vendors.h	/^    VX_ID_QUALCOMM  = 0x002, \/*!< \\brief Qualcomm, Inc. *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_RENESAS	include/VX/vx_vendors.h	/^    VX_ID_RENESAS   = 0x006, \/*!< \\brief Renasas Electronics *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_SAMSUNG	include/VX/vx_vendors.h	/^    VX_ID_SAMSUNG   = 0x00B, \/*!< \\brief Samsung Electronics *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_SOCIONEXT	include/VX/vx_vendors.h	/^    VX_ID_SOCIONEXT = 0x01B, \/*!< \\brief Socionext *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_ST	include/VX/vx_vendors.h	/^    VX_ID_ST        = 0x012, \/*!< \\brief STMicroelectronics *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_SYNOPSYS	include/VX/vx_vendors.h	/^    VX_ID_SYNOPSYS  = 0x018, \/*!< \\brief Synopsys *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_TI	include/VX/vx_vendors.h	/^    VX_ID_TI        = 0x001, \/*!< \\brief Texas Instruments, Inc. *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_USER	include/VX/vx_vendors.h	/^    VX_ID_USER      = 0xFFE, \/*!< \\brief For use by vxAllocateUserKernelId and vxAllocateUserKernelLibraryId *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_VIDEANTIS	include/VX/vx_vendors.h	/^    VX_ID_VIDEANTIS = 0x017, \/*!< \\brief Videantis *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_VIVANTE	include/VX/vx_vendors.h	/^    VX_ID_VIVANTE   = 0x007, \/*!< \\brief Vivante Corporation *\/$/;"	e	enum:vx_vendor_id_e
VX_ID_XILINX	include/VX/vx_vendors.h	/^    VX_ID_XILINX    = 0x008, \/*!< \\brief Xilinx Inc. *\/$/;"	e	enum:vx_vendor_id_e
VX_IMAGEPATCH_ADDR_INIT	include/VX/vx_types.h	1532;"	d
VX_IMAGE_ATTRIBUTE_AMD_ENABLE_USER_BUFFER_OPENCL	include/vx_ext_amd.h	/^	VX_IMAGE_ATTRIBUTE_AMD_ENABLE_USER_BUFFER_OPENCL = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_IMAGE) + 0x03,$/;"	e	enum:vx_image_attribute_amd_e
VX_IMAGE_ATTRIBUTE_AMD_OPENCL_BUFFER	include/vx_ext_amd.h	/^	VX_IMAGE_ATTRIBUTE_AMD_OPENCL_BUFFER             = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_IMAGE) + 0x01,$/;"	e	enum:vx_image_attribute_amd_e
VX_IMAGE_ATTRIBUTE_AMD_OPENCL_BUFFER_OFFSET	include/vx_ext_amd.h	/^	VX_IMAGE_ATTRIBUTE_AMD_OPENCL_BUFFER_OFFSET      = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_IMAGE) + 0x02,$/;"	e	enum:vx_image_attribute_amd_e
VX_IMAGE_ATTRIBUTE_AMD_OPENCL_BUFFER_STRIDE	include/vx_ext_amd.h	/^	VX_IMAGE_ATTRIBUTE_AMD_OPENCL_BUFFER_STRIDE      = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_IMAGE) + 0x04,$/;"	e	enum:vx_image_attribute_amd_e
VX_IMAGE_ATTRIBUTE_FORMAT	include/VX/vx_compatibility.h	73;"	d
VX_IMAGE_ATTRIBUTE_HEIGHT	include/VX/vx_compatibility.h	72;"	d
VX_IMAGE_ATTRIBUTE_PLANES	include/VX/vx_compatibility.h	74;"	d
VX_IMAGE_ATTRIBUTE_RANGE	include/VX/vx_compatibility.h	76;"	d
VX_IMAGE_ATTRIBUTE_SIZE	include/VX/vx_compatibility.h	77;"	d
VX_IMAGE_ATTRIBUTE_SPACE	include/VX/vx_compatibility.h	75;"	d
VX_IMAGE_ATTRIBUTE_WIDTH	include/VX/vx_compatibility.h	71;"	d
VX_IMAGE_FORMAT	include/VX/vx_types.h	/^    VX_IMAGE_FORMAT = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_IMAGE) + 0x2,$/;"	e	enum:vx_image_attribute_e
VX_IMAGE_HEIGHT	include/VX/vx_types.h	/^    VX_IMAGE_HEIGHT = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_IMAGE) + 0x1,$/;"	e	enum:vx_image_attribute_e
VX_IMAGE_IS_UNIFORM	include/VX/vx_types.h	/^    VX_IMAGE_IS_UNIFORM = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_IMAGE) + 0x8,$/;"	e	enum:vx_image_attribute_e
VX_IMAGE_MEMORY_TYPE	include/VX/vx_types.h	/^    VX_IMAGE_MEMORY_TYPE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_IMAGE) + 0x7,$/;"	e	enum:vx_image_attribute_e
VX_IMAGE_PLANES	include/VX/vx_types.h	/^    VX_IMAGE_PLANES = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_IMAGE) + 0x3,$/;"	e	enum:vx_image_attribute_e
VX_IMAGE_RANGE	include/VX/vx_types.h	/^    VX_IMAGE_RANGE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_IMAGE) + 0x5,$/;"	e	enum:vx_image_attribute_e
VX_IMAGE_SIZE	include/VX/vx_compatibility.h	138;"	d
VX_IMAGE_SPACE	include/VX/vx_types.h	/^    VX_IMAGE_SPACE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_IMAGE) + 0x4,$/;"	e	enum:vx_image_attribute_e
VX_IMAGE_UNIFORM_VALUE	include/VX/vx_types.h	/^    VX_IMAGE_UNIFORM_VALUE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_IMAGE) + 0x9,    $/;"	e	enum:vx_image_attribute_e
VX_IMAGE_WIDTH	include/VX/vx_types.h	/^    VX_IMAGE_WIDTH = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_IMAGE) + 0x0,$/;"	e	enum:vx_image_attribute_e
VX_IMPORT_ATTRIBUTE_COUNT	include/VX/vx_khr_xml.h	/^    VX_IMPORT_ATTRIBUTE_COUNT = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_IMPORT) + 0x0,$/;"	e	enum:vx_import_attribute_e
VX_IMPORT_ATTRIBUTE_TYPE	include/VX/vx_khr_xml.h	/^    VX_IMPORT_ATTRIBUTE_TYPE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_IMPORT) + 0x1,$/;"	e	enum:vx_import_attribute_e
VX_IMPORT_TYPE_HOST	include/VX/vx_compatibility.h	146;"	d
VX_IMPORT_TYPE_NONE	include/VX/vx_compatibility.h	145;"	d
VX_IMPORT_TYPE_XML	include/VX/vx_khr_xml.h	/^    VX_IMPORT_TYPE_XML = 0,\/*!< \\brief The XML import type *\/$/;"	e	enum:vx_ext_import_types_e
VX_INPUT	include/VX/vx_types.h	/^    VX_INPUT = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_DIRECTION) + 0x0,$/;"	e	enum:vx_direction_e
VX_INTERPOLATION_AREA	include/VX/vx_types.h	/^    VX_INTERPOLATION_AREA = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_INTERPOLATION) + 0x2,$/;"	e	enum:vx_interpolation_type_e
VX_INTERPOLATION_BILINEAR	include/VX/vx_types.h	/^    VX_INTERPOLATION_BILINEAR = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_INTERPOLATION) + 0x1,$/;"	e	enum:vx_interpolation_type_e
VX_INTERPOLATION_NEAREST_NEIGHBOR	include/VX/vx_types.h	/^    VX_INTERPOLATION_NEAREST_NEIGHBOR = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_INTERPOLATION) + 0x0,$/;"	e	enum:vx_interpolation_type_e
VX_INTERPOLATION_TYPE_AREA	include/VX/vx_compatibility.h	134;"	d
VX_INTERPOLATION_TYPE_BILINEAR	include/VX/vx_compatibility.h	135;"	d
VX_INTERPOLATION_TYPE_NEAREST_NEIGHBOR	include/VX/vx_compatibility.h	136;"	d
VX_IX_USE_APPLICATION_CREATE	include/VX/vx_import.h	34;"	d
VX_IX_USE_EXPORT_VALUES	include/VX/vx_import.h	38;"	d
VX_IX_USE_NO_EXPORT_VALUES	include/VX/vx_import.h	42;"	d
VX_KERNEL_ABSDIFF	include/VX/vx_kernels.h	/^    VX_KERNEL_ABSDIFF = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0xB,$/;"	e	enum:vx_kernel_e
VX_KERNEL_ACCUMULATE	include/VX/vx_kernels.h	/^    VX_KERNEL_ACCUMULATE = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x16,$/;"	e	enum:vx_kernel_e
VX_KERNEL_ACCUMULATE_SQUARE	include/VX/vx_kernels.h	/^    VX_KERNEL_ACCUMULATE_SQUARE = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x18,$/;"	e	enum:vx_kernel_e
VX_KERNEL_ACCUMULATE_WEIGHTED	include/VX/vx_kernels.h	/^    VX_KERNEL_ACCUMULATE_WEIGHTED = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x17,$/;"	e	enum:vx_kernel_e
VX_KERNEL_ACTIVATION_LAYER	include/VX/vx_khr_nn.h	/^    VX_KERNEL_ACTIVATION_LAYER = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_NN_EXTENSION) + 0x5,$/;"	e	enum:vx_kernel_nn_ext_e
VX_KERNEL_ADD	include/VX/vx_kernels.h	/^    VX_KERNEL_ADD = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x21,$/;"	e	enum:vx_kernel_e
VX_KERNEL_AMD_ABS_DIFF_S16_S16S16_SAT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ABS_DIFF_S16_S16S16_SAT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_ABS_DIFF_U8_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ABS_DIFF_U8_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_ACCUMULATE_S16_S16U8_SAT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ACCUMULATE_S16_S16U8_SAT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_ACCUMULATE_SQUARED_S16_S16U8_SAT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ACCUMULATE_SQUARED_S16_S16U8_SAT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_ACCUMULATE_WEIGHTED_U8_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ACCUMULATE_WEIGHTED_U8_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_ADD_S16_S16S16_SAT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ADD_S16_S16S16_SAT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_ADD_S16_S16S16_WRAP	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ADD_S16_S16S16_WRAP,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_ADD_S16_S16U8_SAT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ADD_S16_S16U8_SAT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_ADD_S16_S16U8_WRAP	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ADD_S16_S16U8_WRAP,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_ADD_S16_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ADD_S16_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_ADD_U8_U8U8_SAT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ADD_U8_U8U8_SAT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_ADD_U8_U8U8_WRAP	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ADD_U8_U8U8_WRAP,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_AND_U1_U1U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_AND_U1_U1U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_AND_U1_U1U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_AND_U1_U1U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_AND_U1_U8U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_AND_U1_U8U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_AND_U1_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_AND_U1_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_AND_U8_U1U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_AND_U8_U1U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_AND_U8_U1U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_AND_U8_U1U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_AND_U8_U8U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_AND_U8_U8U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_AND_U8_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_AND_U8_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_BOX_U8_U8_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_BOX_U8_U8_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_EDGE_TRACE_U8_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_EDGE_TRACE_U8_U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_EDGE_TRACE_U8_U8XY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_EDGE_TRACE_U8_U8XY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8XY_U8_3x3_L1NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8XY_U8_3x3_L1NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8XY_U8_3x3_L2NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8XY_U8_3x3_L2NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8XY_U8_5x5_L1NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8XY_U8_5x5_L1NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8XY_U8_5x5_L2NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8XY_U8_5x5_L2NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8XY_U8_7x7_L1NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8XY_U8_7x7_L1NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8XY_U8_7x7_L2NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8XY_U8_7x7_L2NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8_U8_3x3_L1NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8_U8_3x3_L1NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8_U8_3x3_L2NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8_U8_3x3_L2NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8_U8_5x5_L1NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8_U8_5x5_L1NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8_U8_5x5_L2NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8_U8_5x5_L2NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8_U8_7x7_L1NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8_U8_7x7_L1NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8_U8_7x7_L2NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_SUPP_THRESHOLD_U8_U8_7x7_L2NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_U16_U8_3x3_L1NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_U16_U8_3x3_L1NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_U16_U8_3x3_L2NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_U16_U8_3x3_L2NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_U16_U8_5x5_L1NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_U16_U8_5x5_L1NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_U16_U8_5x5_L2NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_U16_U8_5x5_L2NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_U16_U8_7x7_L1NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_U16_U8_7x7_L1NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SOBEL_U16_U8_7x7_L2NORM	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SOBEL_U16_U8_7x7_L2NORM,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SUPP_THRESHOLD_U8XY_U16_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SUPP_THRESHOLD_U8XY_U16_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CANNY_SUPP_THRESHOLD_U8_U16_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CANNY_SUPP_THRESHOLD_U8_U16_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_COMBINE_U16_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_COMBINE_U16_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_COMBINE_U24_U8U8U8_RGB	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_COMBINE_U24_U8U8U8_RGB,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_COMBINE_U32_U8U8U8U8_RGBX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_COMBINE_U32_U8U8U8U8_RGBX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_COMBINE_U32_U8U8U8_UYVY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_COMBINE_U32_U8U8U8_UYVY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_COMBINE_U32_U8U8U8_YUYV	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_COMBINE_U32_U8U8U8_YUYV,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_COPY_U1_U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_COPY_U1_U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_COPY_U1_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_COPY_U1_U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_COPY_U8_U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_COPY_U8_U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_COPY_U8_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_COPY_U8_U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_EXTRACT_U8U8U8U8_U32	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_EXTRACT_U8U8U8U8_U32,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_EXTRACT_U8U8U8_U24	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_EXTRACT_U8U8U8_U24,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_EXTRACT_U8U8U8_U32	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_EXTRACT_U8U8U8_U32,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U16_POS0	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U16_POS0,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U16_POS1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U16_POS1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U24_POS0	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U24_POS0,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U24_POS1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U24_POS1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U24_POS2	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U24_POS2,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U32_POS0	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U32_POS0,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U32_POS1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U32_POS1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U32_POS2	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U32_POS2,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U32_POS3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CHANNEL_EXTRACT_U8_U32_POS3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_IUV_RGB	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_IUV_RGB,   \/\/ U & V planes in IYUV 4:2:0$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_IUV_RGBX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_IUV_RGBX,  \/\/ U & V planes in IYUV 4:2:0$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_IU_RGB	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_IU_RGB,    \/\/ U plane in IYUV 4:2:0$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_IU_RGBX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_IU_RGBX,   \/\/ U plane in IYUV 4:2:0$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_IV_RGB	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_IV_RGB,    \/\/ V plane in IYUV 4:2:0$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_IV_RGBX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_IV_RGBX,   \/\/ V plane in IYUV 4:2:0$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_IYUV_RGB	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_IYUV_RGB,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_IYUV_RGBX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_IYUV_RGBX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_NV12_RGB	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_NV12_RGB,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_NV12_RGBX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_NV12_RGBX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_RGBX_IYUV	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_RGBX_IYUV,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_RGBX_NV12	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_RGBX_NV12,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_RGBX_NV21	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_RGBX_NV21,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_RGBX_RGB	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_RGBX_RGB,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_RGBX_UYVY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_RGBX_UYVY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_RGBX_YUYV	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_RGBX_YUYV,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_RGB_IYUV	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_RGB_IYUV,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_RGB_NV12	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_RGB_NV12,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_RGB_NV21	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_RGB_NV21,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_RGB_RGBX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_RGB_RGBX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_RGB_UYVY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_RGB_UYVY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_RGB_YUYV	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_RGB_YUYV,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_UV12_RGB	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_UV12_RGB,  \/\/ UV plane in NV12 4:2:0$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_UV12_RGBX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_UV12_RGBX, \/\/ UV plane in NV12 4:2:0$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_U_RGB	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_U_RGB,     \/\/ U plane$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_U_RGBX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_U_RGBX,    \/\/ U plane$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_V_RGB	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_V_RGB,     \/\/ V plane$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_V_RGBX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_V_RGBX,    \/\/ V plane$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_YUV4_RGB	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_YUV4_RGB,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_YUV4_RGBX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_YUV4_RGBX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_Y_RGB	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_Y_RGB,     \/\/ Y plane$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_CONVERT_Y_RGBX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_CONVERT_Y_RGBX,    \/\/ Y plane$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_DEPTH_S16_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_DEPTH_S16_U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_DEPTH_U8_S16_SAT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_DEPTH_U8_S16_SAT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COLOR_DEPTH_U8_S16_WRAP	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COLOR_DEPTH_U8_S16_WRAP,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CONVOLVE_S16_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CONVOLVE_S16_U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_CONVOLVE_U8_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_CONVOLVE_U8_U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_COPY_DATA_DATA	ago/ago_kernels.h	/^	VX_KERNEL_AMD_COPY_DATA_DATA,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_DILATE_U1_U1_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_DILATE_U1_U1_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_DILATE_U1_U8_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_DILATE_U1_U8_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_DILATE_U8_U1_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_DILATE_U8_U1_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_DILATE_U8_U8_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_DILATE_U8_U8_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_EQUALIZE_DATA_DATA	ago/ago_kernels.h	/^	VX_KERNEL_AMD_EQUALIZE_DATA_DATA,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_ERODE_U1_U1_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ERODE_U1_U1_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_ERODE_U1_U8_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ERODE_U1_U8_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_ERODE_U8_U1_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ERODE_U8_U1_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_ERODE_U8_U8_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_ERODE_U8_U8_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_FAST_CORNERS_XY_U8_NOSUPRESSION	ago/ago_kernels.h	/^	VX_KERNEL_AMD_FAST_CORNERS_XY_U8_NOSUPRESSION,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_FAST_CORNERS_XY_U8_SUPRESSION	ago/ago_kernels.h	/^	VX_KERNEL_AMD_FAST_CORNERS_XY_U8_SUPRESSION,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_FAST_CORNER_MERGE_XY_XY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_FAST_CORNER_MERGE_XY_XY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_FORMAT_CONVERT_IUV_UV12	ago/ago_kernels.h	/^	VX_KERNEL_AMD_FORMAT_CONVERT_IUV_UV12,  \/\/ UV 4:2:0 from IYUV to NV12$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_FORMAT_CONVERT_IYUV_UYVY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_FORMAT_CONVERT_IYUV_UYVY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_FORMAT_CONVERT_IYUV_YUYV	ago/ago_kernels.h	/^	VX_KERNEL_AMD_FORMAT_CONVERT_IYUV_YUYV,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_FORMAT_CONVERT_NV12_UYVY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_FORMAT_CONVERT_NV12_UYVY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_FORMAT_CONVERT_NV12_YUYV	ago/ago_kernels.h	/^	VX_KERNEL_AMD_FORMAT_CONVERT_NV12_YUYV,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_FORMAT_CONVERT_UV12_IUV	ago/ago_kernels.h	/^	VX_KERNEL_AMD_FORMAT_CONVERT_UV12_IUV,  \/\/ UV 4:2:0 from NV12 to IYUV$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_FORMAT_CONVERT_UV_UV12	ago/ago_kernels.h	/^	VX_KERNEL_AMD_FORMAT_CONVERT_UV_UV12,   \/\/ UV12 4:2:0 to 4:4:4 format conversion$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_GAUSSIAN_U8_U8_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_GAUSSIAN_U8_U8_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_HARRIS_MERGE_SORT_AND_PICK_XY_HVC	ago/ago_kernels.h	/^	VX_KERNEL_AMD_HARRIS_MERGE_SORT_AND_PICK_XY_HVC,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_HARRIS_MERGE_SORT_AND_PICK_XY_XYS	ago/ago_kernels.h	/^	VX_KERNEL_AMD_HARRIS_MERGE_SORT_AND_PICK_XY_XYS,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_HARRIS_SCORE_HVC_HG3_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_HARRIS_SCORE_HVC_HG3_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_HARRIS_SCORE_HVC_HG3_5x5	ago/ago_kernels.h	/^	VX_KERNEL_AMD_HARRIS_SCORE_HVC_HG3_5x5,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_HARRIS_SCORE_HVC_HG3_7x7	ago/ago_kernels.h	/^	VX_KERNEL_AMD_HARRIS_SCORE_HVC_HG3_7x7,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_HARRIS_SOBEL_HG3_U8_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_HARRIS_SOBEL_HG3_U8_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_HARRIS_SOBEL_HG3_U8_5x5	ago/ago_kernels.h	/^	VX_KERNEL_AMD_HARRIS_SOBEL_HG3_U8_5x5,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_HARRIS_SOBEL_HG3_U8_7x7	ago/ago_kernels.h	/^	VX_KERNEL_AMD_HARRIS_SOBEL_HG3_U8_7x7,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_HISTOGRAM_DATA_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_HISTOGRAM_DATA_U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_HISTOGRAM_MERGE_DATA_DATA	ago/ago_kernels.h	/^	VX_KERNEL_AMD_HISTOGRAM_MERGE_DATA_DATA,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_INTEGRAL_IMAGE_U32_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_INTEGRAL_IMAGE_U32_U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_INVALID	ago/ago_kernels.h	/^	VX_KERNEL_AMD_INVALID = VX_KERNEL_BASE(VX_ID_AMD, VX_LIBRARY_KHR_BASE) + 0x0,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_LINEAR_FILTER_ANY_ANY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_LINEAR_FILTER_ANY_ANY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_LINEAR_FILTER_ANYx2_ANY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_LINEAR_FILTER_ANYx2_ANY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_LUT_U8_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_LUT_U8_U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MAGNITUDE_S16_S16S16	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MAGNITUDE_S16_S16S16,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MAX_1_0	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MAX_1_0, \/\/ Used for bounds checking in the internal conformance test$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MEAN_STD_DEV_DATA_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MEAN_STD_DEV_DATA_U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MEAN_STD_DEV_MERGE_DATA_DATA	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MEAN_STD_DEV_MERGE_DATA_DATA,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MEDIAN_U8_U8_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MEDIAN_U8_U8_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_DATA_S16	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_DATA_S16,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_DATA_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_DATA_U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_MAX_COUNT_MAX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_MAX_COUNT_MAX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_MAX_COUNT_MINMAX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_MAX_COUNT_MINMAX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_MINMAX_COUNT_MINMAX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_MINMAX_COUNT_MINMAX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_MIN_COUNT_MIN	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_MIN_COUNT_MIN,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_MIN_COUNT_MINMAX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_MIN_COUNT_MINMAX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_NONE_COUNT_MAX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_NONE_COUNT_MAX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_NONE_COUNT_MIN	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_NONE_COUNT_MIN,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_NONE_COUNT_MINMAX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_S16DATA_LOC_NONE_COUNT_MINMAX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_MAX_COUNT_MAX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_MAX_COUNT_MAX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_MAX_COUNT_MINMAX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_MAX_COUNT_MINMAX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_MINMAX_COUNT_MINMAX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_MINMAX_COUNT_MINMAX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_MIN_COUNT_MIN	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_MIN_COUNT_MIN,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_MIN_COUNT_MINMAX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_MIN_COUNT_MINMAX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_NONE_COUNT_MAX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_NONE_COUNT_MAX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_NONE_COUNT_MIN	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_NONE_COUNT_MIN,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_NONE_COUNT_MINMAX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_DATA_U8DATA_LOC_NONE_COUNT_MINMAX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_LOC_MERGE_DATA_DATA	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_LOC_MERGE_DATA_DATA,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MIN_MAX_MERGE_DATA_DATA	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MIN_MAX_MERGE_DATA_DATA,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_S16_S16S16_SAT_ROUND	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_S16_S16S16_SAT_ROUND,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_S16_S16S16_SAT_TRUNC	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_S16_S16S16_SAT_TRUNC,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_S16_S16S16_WRAP_ROUND	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_S16_S16S16_WRAP_ROUND,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_S16_S16S16_WRAP_TRUNC	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_S16_S16S16_WRAP_TRUNC,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_S16_S16U8_SAT_ROUND	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_S16_S16U8_SAT_ROUND,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_S16_S16U8_SAT_TRUNC	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_S16_S16U8_SAT_TRUNC,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_S16_S16U8_WRAP_ROUND	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_S16_S16U8_WRAP_ROUND,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_S16_S16U8_WRAP_TRUNC	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_S16_S16U8_WRAP_TRUNC,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_S16_U8U8_SAT_ROUND	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_S16_U8U8_SAT_ROUND,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_S16_U8U8_SAT_TRUNC	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_S16_U8U8_SAT_TRUNC,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_S16_U8U8_WRAP_ROUND	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_S16_U8U8_WRAP_ROUND,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_S16_U8U8_WRAP_TRUNC	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_S16_U8U8_WRAP_TRUNC,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_U24_U24U8_SAT_ROUND	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_U24_U24U8_SAT_ROUND,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_U32_U32U8_SAT_ROUND	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_U32_U32U8_SAT_ROUND,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_U8_U8U8_SAT_ROUND	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_U8_U8U8_SAT_ROUND,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_U8_U8U8_SAT_TRUNC	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_U8_U8U8_SAT_TRUNC,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_U8_U8U8_WRAP_ROUND	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_U8_U8U8_WRAP_ROUND,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_MUL_U8_U8U8_WRAP_TRUNC	ago/ago_kernels.h	/^	VX_KERNEL_AMD_MUL_U8_U8U8_WRAP_TRUNC,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NAND_U1_U1U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NAND_U1_U1U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NAND_U1_U1U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NAND_U1_U1U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NAND_U1_U8U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NAND_U1_U8U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NAND_U1_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NAND_U1_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NAND_U8_U1U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NAND_U8_U1U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NAND_U8_U1U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NAND_U8_U1U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NAND_U8_U8U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NAND_U8_U8U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NAND_U8_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NAND_U8_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NON_MAX_SUPP_XY_ANY_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NON_MAX_SUPP_XY_ANY_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NOR_U1_U1U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NOR_U1_U1U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NOR_U1_U1U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NOR_U1_U1U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NOR_U1_U8U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NOR_U1_U8U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NOR_U1_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NOR_U1_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NOR_U8_U1U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NOR_U8_U1U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NOR_U8_U1U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NOR_U8_U1U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NOR_U8_U8U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NOR_U8_U8U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NOR_U8_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NOR_U8_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NOT_U1_U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NOT_U1_U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NOT_U1_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NOT_U1_U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NOT_U8_U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NOT_U8_U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_NOT_U8_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_NOT_U8_U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_OPTICAL_FLOW_FINAL_LK_XY_XY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_OPTICAL_FLOW_FINAL_LK_XY_XY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_OPTICAL_FLOW_IMAGE_LK_XY_XY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_OPTICAL_FLOW_IMAGE_LK_XY_XY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_OPTICAL_FLOW_PREPARE_LK_XY_XY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_OPTICAL_FLOW_PREPARE_LK_XY_XY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_OPTICAL_FLOW_PYR_LK_XY_XY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_OPTICAL_FLOW_PYR_LK_XY_XY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_OR_U1_U1U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_OR_U1_U1U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_OR_U1_U1U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_OR_U1_U1U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_OR_U1_U8U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_OR_U1_U8U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_OR_U1_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_OR_U1_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_OR_U8_U1U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_OR_U8_U1U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_OR_U8_U1U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_OR_U8_U1U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_OR_U8_U8U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_OR_U8_U8U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_OR_U8_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_OR_U8_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_PHASE_U8_S16S16	ago/ago_kernels.h	/^	VX_KERNEL_AMD_PHASE_U8_S16S16,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_REMAP_U24_U24_BILINEAR	ago/ago_kernels.h	/^	VX_KERNEL_AMD_REMAP_U24_U24_BILINEAR,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_REMAP_U24_U32_BILINEAR	ago/ago_kernels.h	/^	VX_KERNEL_AMD_REMAP_U24_U32_BILINEAR,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_REMAP_U32_U32_BILINEAR	ago/ago_kernels.h	/^	VX_KERNEL_AMD_REMAP_U32_U32_BILINEAR,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_REMAP_U8_U8_BILINEAR	ago/ago_kernels.h	/^	VX_KERNEL_AMD_REMAP_U8_U8_BILINEAR,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_REMAP_U8_U8_BILINEAR_CONSTANT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_REMAP_U8_U8_BILINEAR_CONSTANT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_REMAP_U8_U8_NEAREST	ago/ago_kernels.h	/^	VX_KERNEL_AMD_REMAP_U8_U8_NEAREST,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_REMAP_U8_U8_NEAREST_CONSTANT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_REMAP_U8_U8_NEAREST_CONSTANT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SCALE_GAUSSIAN_HALF_U8_U8_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SCALE_GAUSSIAN_HALF_U8_U8_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SCALE_GAUSSIAN_HALF_U8_U8_5x5	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SCALE_GAUSSIAN_HALF_U8_U8_5x5,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SCALE_GAUSSIAN_ORB_U8_U8_5x5	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SCALE_GAUSSIAN_ORB_U8_U8_5x5,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SCALE_IMAGE_U8_U8_AREA	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SCALE_IMAGE_U8_U8_AREA,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SCALE_IMAGE_U8_U8_BILINEAR	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SCALE_IMAGE_U8_U8_BILINEAR,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SCALE_IMAGE_U8_U8_BILINEAR_CONSTANT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SCALE_IMAGE_U8_U8_BILINEAR_CONSTANT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SCALE_IMAGE_U8_U8_BILINEAR_REPLICATE	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SCALE_IMAGE_U8_U8_BILINEAR_REPLICATE,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SCALE_IMAGE_U8_U8_NEAREST	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SCALE_IMAGE_U8_U8_NEAREST,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SCALE_UP_2x2_U8_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SCALE_UP_2x2_U8_U8,       \/\/ IUV 4:2:0 to 4:4:4 format conversion$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SELECT_DATA_DATA_DATA	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SELECT_DATA_DATA_DATA,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SET_00_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SET_00_U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SET_FF_U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SET_FF_U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SOBEL_MAGNITUDE_PHASE_S16U8_U8_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SOBEL_MAGNITUDE_PHASE_S16U8_U8_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SOBEL_MAGNITUDE_S16_U8_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SOBEL_MAGNITUDE_S16_U8_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SOBEL_PHASE_U8_U8_3x3	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SOBEL_PHASE_U8_U8_3x3,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SOBEL_S16S16_U8_3x3_GXY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SOBEL_S16S16_U8_3x3_GXY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SOBEL_S16_U8_3x3_GX	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SOBEL_S16_U8_3x3_GX,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SOBEL_S16_U8_3x3_GY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SOBEL_S16_U8_3x3_GY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SUB_S16_S16S16_SAT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SUB_S16_S16S16_SAT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SUB_S16_S16S16_WRAP	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SUB_S16_S16S16_WRAP,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SUB_S16_S16U8_SAT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SUB_S16_S16U8_SAT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SUB_S16_S16U8_WRAP	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SUB_S16_S16U8_WRAP,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SUB_S16_U8S16_SAT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SUB_S16_U8S16_SAT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SUB_S16_U8S16_WRAP	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SUB_S16_U8S16_WRAP,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SUB_S16_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SUB_S16_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SUB_U8_U8U8_SAT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SUB_U8_U8U8_SAT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_SUB_U8_U8U8_WRAP	ago/ago_kernels.h	/^	VX_KERNEL_AMD_SUB_U8_U8U8_WRAP,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_THRESHOLD_NOT_U1_U8_BINARY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_THRESHOLD_NOT_U1_U8_BINARY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_THRESHOLD_NOT_U1_U8_RANGE	ago/ago_kernels.h	/^	VX_KERNEL_AMD_THRESHOLD_NOT_U1_U8_RANGE,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_THRESHOLD_NOT_U8_U8_BINARY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_THRESHOLD_NOT_U8_U8_BINARY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_THRESHOLD_NOT_U8_U8_RANGE	ago/ago_kernels.h	/^	VX_KERNEL_AMD_THRESHOLD_NOT_U8_U8_RANGE,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_THRESHOLD_U1_U8_BINARY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_THRESHOLD_U1_U8_BINARY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_THRESHOLD_U1_U8_RANGE	ago/ago_kernels.h	/^	VX_KERNEL_AMD_THRESHOLD_U1_U8_RANGE,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_THRESHOLD_U8_U8_BINARY	ago/ago_kernels.h	/^	VX_KERNEL_AMD_THRESHOLD_U8_U8_BINARY,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_THRESHOLD_U8_U8_RANGE	ago/ago_kernels.h	/^	VX_KERNEL_AMD_THRESHOLD_U8_U8_RANGE,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_WARP_AFFINE_U8_U8_BILINEAR	ago/ago_kernels.h	/^	VX_KERNEL_AMD_WARP_AFFINE_U8_U8_BILINEAR,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_WARP_AFFINE_U8_U8_BILINEAR_CONSTANT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_WARP_AFFINE_U8_U8_BILINEAR_CONSTANT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_WARP_AFFINE_U8_U8_NEAREST	ago/ago_kernels.h	/^	VX_KERNEL_AMD_WARP_AFFINE_U8_U8_NEAREST,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_WARP_AFFINE_U8_U8_NEAREST_CONSTANT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_WARP_AFFINE_U8_U8_NEAREST_CONSTANT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_WARP_PERSPECTIVE_U8_U8_BILINEAR	ago/ago_kernels.h	/^	VX_KERNEL_AMD_WARP_PERSPECTIVE_U8_U8_BILINEAR,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_WARP_PERSPECTIVE_U8_U8_BILINEAR_CONSTANT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_WARP_PERSPECTIVE_U8_U8_BILINEAR_CONSTANT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_WARP_PERSPECTIVE_U8_U8_NEAREST	ago/ago_kernels.h	/^	VX_KERNEL_AMD_WARP_PERSPECTIVE_U8_U8_NEAREST,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_WARP_PERSPECTIVE_U8_U8_NEAREST_CONSTANT	ago/ago_kernels.h	/^	VX_KERNEL_AMD_WARP_PERSPECTIVE_U8_U8_NEAREST_CONSTANT,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XNOR_U1_U1U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XNOR_U1_U1U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XNOR_U1_U1U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XNOR_U1_U1U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XNOR_U1_U8U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XNOR_U1_U8U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XNOR_U1_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XNOR_U1_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XNOR_U8_U1U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XNOR_U8_U1U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XNOR_U8_U1U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XNOR_U8_U1U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XNOR_U8_U8U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XNOR_U8_U8U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XNOR_U8_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XNOR_U8_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XOR_U1_U1U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XOR_U1_U1U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XOR_U1_U1U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XOR_U1_U1U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XOR_U1_U8U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XOR_U1_U8U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XOR_U1_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XOR_U1_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XOR_U8_U1U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XOR_U8_U1U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XOR_U8_U1U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XOR_U8_U1U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XOR_U8_U8U1	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XOR_U8_U8U1,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AMD_XOR_U8_U8U8	ago/ago_kernels.h	/^	VX_KERNEL_AMD_XOR_U8_U8U8,$/;"	e	enum:vx_kernel_amd_e
VX_KERNEL_AND	include/VX/vx_kernels.h	/^    VX_KERNEL_AND = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x1C,$/;"	e	enum:vx_kernel_e
VX_KERNEL_ATTRIBUTE_AMD_NODE_REGEN_CALLBACK	include/vx_ext_amd.h	/^	VX_KERNEL_ATTRIBUTE_AMD_NODE_REGEN_CALLBACK     = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_KERNEL) + 0x03,$/;"	e	enum:vx_kernel_attribute_amd_e
VX_KERNEL_ATTRIBUTE_AMD_OPENCL_BUFFER_ACCESS_ENABLE	include/vx_ext_amd.h	/^	VX_KERNEL_ATTRIBUTE_AMD_OPENCL_BUFFER_ACCESS_ENABLE        = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_KERNEL) + 0x05,$/;"	e	enum:vx_kernel_attribute_amd_e
VX_KERNEL_ATTRIBUTE_AMD_OPENCL_BUFFER_UPDATE_CALLBACK	include/vx_ext_amd.h	/^	VX_KERNEL_ATTRIBUTE_AMD_OPENCL_BUFFER_UPDATE_CALLBACK      = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_KERNEL) + 0x06,$/;"	e	enum:vx_kernel_attribute_amd_e
VX_KERNEL_ATTRIBUTE_AMD_OPENCL_CODEGEN_CALLBACK	include/vx_ext_amd.h	/^	VX_KERNEL_ATTRIBUTE_AMD_OPENCL_CODEGEN_CALLBACK = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_KERNEL) + 0x02,$/;"	e	enum:vx_kernel_attribute_amd_e
VX_KERNEL_ATTRIBUTE_AMD_OPENCL_GLOBAL_WORK_UPDATE_CALLBACK	include/vx_ext_amd.h	/^	VX_KERNEL_ATTRIBUTE_AMD_OPENCL_GLOBAL_WORK_UPDATE_CALLBACK = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_KERNEL) + 0x04,$/;"	e	enum:vx_kernel_attribute_amd_e
VX_KERNEL_ATTRIBUTE_AMD_QUERY_TARGET_SUPPORT	include/vx_ext_amd.h	/^	VX_KERNEL_ATTRIBUTE_AMD_QUERY_TARGET_SUPPORT    = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_KERNEL) + 0x01,$/;"	e	enum:vx_kernel_attribute_amd_e
VX_KERNEL_ATTRIBUTE_ENUM	include/VX/vx_compatibility.h	55;"	d
VX_KERNEL_ATTRIBUTE_LOCAL_DATA_PTR	include/VX/vx_compatibility.h	57;"	d
VX_KERNEL_ATTRIBUTE_LOCAL_DATA_SIZE	include/VX/vx_compatibility.h	56;"	d
VX_KERNEL_ATTRIBUTE_NAME	include/VX/vx_compatibility.h	54;"	d
VX_KERNEL_ATTRIBUTE_PARAMETERS	include/VX/vx_compatibility.h	53;"	d
VX_KERNEL_BASE	include/VX/vx_types.h	539;"	d
VX_KERNEL_BILATERAL_FILTER	include/VX/vx_kernels.h	/^    VX_KERNEL_BILATERAL_FILTER = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x3C,$/;"	e	enum:vx_kernel_e
VX_KERNEL_BORDER	include/VX/vx_khr_tiling.h	/^    VX_KERNEL_BORDER                  = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_KERNEL) + 0x9,$/;"	e	enum:vx_kernel_attribute_tiling_e
VX_KERNEL_BOX_3x3	include/VX/vx_kernels.h	/^    VX_KERNEL_BOX_3x3 = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x12,$/;"	e	enum:vx_kernel_e
VX_KERNEL_CANNY_EDGE_DETECTOR	include/VX/vx_kernels.h	/^    VX_KERNEL_CANNY_EDGE_DETECTOR = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x1B,$/;"	e	enum:vx_kernel_e
VX_KERNEL_CHANNEL_COMBINE	include/VX/vx_kernels.h	/^    VX_KERNEL_CHANNEL_COMBINE = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x3,$/;"	e	enum:vx_kernel_e
VX_KERNEL_CHANNEL_EXTRACT	include/VX/vx_kernels.h	/^    VX_KERNEL_CHANNEL_EXTRACT = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x2,$/;"	e	enum:vx_kernel_e
VX_KERNEL_COLOR_CONVERT	include/VX/vx_kernels.h	/^    VX_KERNEL_COLOR_CONVERT = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x1,$/;"	e	enum:vx_kernel_e
VX_KERNEL_CONVERTDEPTH	include/VX/vx_kernels.h	/^    VX_KERNEL_CONVERTDEPTH = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x1A,$/;"	e	enum:vx_kernel_e
VX_KERNEL_CONVOLUTION_LAYER	include/VX/vx_khr_nn.h	/^    VX_KERNEL_CONVOLUTION_LAYER = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_NN_EXTENSION) + 0x0,$/;"	e	enum:vx_kernel_nn_ext_e
VX_KERNEL_COPY	include/VX/vx_kernels.h	/^    VX_KERNEL_COPY = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x37,$/;"	e	enum:vx_kernel_e
VX_KERNEL_CUSTOM_CONVOLUTION	include/VX/vx_kernels.h	/^    VX_KERNEL_CUSTOM_CONVOLUTION = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x14,$/;"	e	enum:vx_kernel_e
VX_KERNEL_DECONVOLUTION_LAYER	include/VX/vx_khr_nn.h	/^    VX_KERNEL_DECONVOLUTION_LAYER = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_NN_EXTENSION) + 0x7,$/;"	e	enum:vx_kernel_nn_ext_e
VX_KERNEL_DILATE_3x3	include/VX/vx_kernels.h	/^    VX_KERNEL_DILATE_3x3 = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0xF,$/;"	e	enum:vx_kernel_e
VX_KERNEL_ENUM	include/VX/vx_types.h	/^    VX_KERNEL_ENUM = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_KERNEL) + 0x2,$/;"	e	enum:vx_kernel_attribute_e
VX_KERNEL_EQUALIZE_HISTOGRAM	include/VX/vx_kernels.h	/^    VX_KERNEL_EQUALIZE_HISTOGRAM = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0xA,$/;"	e	enum:vx_kernel_e
VX_KERNEL_ERODE_3x3	include/VX/vx_kernels.h	/^    VX_KERNEL_ERODE_3x3 = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x10,$/;"	e	enum:vx_kernel_e
VX_KERNEL_FAST_CORNERS	include/VX/vx_kernels.h	/^    VX_KERNEL_FAST_CORNERS = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x26,$/;"	e	enum:vx_kernel_e
VX_KERNEL_FULLY_CONNECTED_LAYER	include/VX/vx_khr_nn.h	/^    VX_KERNEL_FULLY_CONNECTED_LAYER = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_NN_EXTENSION) + 0x1,$/;"	e	enum:vx_kernel_nn_ext_e
VX_KERNEL_GAUSSIAN_3x3	include/VX/vx_kernels.h	/^    VX_KERNEL_GAUSSIAN_3x3 = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x13,$/;"	e	enum:vx_kernel_e
VX_KERNEL_GAUSSIAN_PYRAMID	include/VX/vx_kernels.h	/^    VX_KERNEL_GAUSSIAN_PYRAMID = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x15,$/;"	e	enum:vx_kernel_e
VX_KERNEL_HALFSCALE_GAUSSIAN	include/VX/vx_kernels.h	/^    VX_KERNEL_HALFSCALE_GAUSSIAN = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x29,$/;"	e	enum:vx_kernel_e
VX_KERNEL_HARRIS_CORNERS	include/VX/vx_kernels.h	/^    VX_KERNEL_HARRIS_CORNERS = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x25,$/;"	e	enum:vx_kernel_e
VX_KERNEL_HISTOGRAM	include/VX/vx_kernels.h	/^    VX_KERNEL_HISTOGRAM = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x9,$/;"	e	enum:vx_kernel_e
VX_KERNEL_HOG_CELLS	include/VX/vx_kernels.h	/^    VX_KERNEL_HOG_CELLS = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x3B,$/;"	e	enum:vx_kernel_e
VX_KERNEL_HOG_FEATURES	include/VX/vx_kernels.h	/^    VX_KERNEL_HOG_FEATURES = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x3A,$/;"	e	enum:vx_kernel_e
VX_KERNEL_HOUGH_LINES_P	include/VX/vx_kernels.h	/^    VX_KERNEL_HOUGH_LINES_P = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x2F,$/;"	e	enum:vx_kernel_e
VX_KERNEL_INPUT_NEIGHBORHOOD	include/VX/vx_khr_tiling.h	/^    VX_KERNEL_INPUT_NEIGHBORHOOD      = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_KERNEL) + 0x7,$/;"	e	enum:vx_kernel_attribute_tiling_e
VX_KERNEL_INPUT_TILE_BLOCK_SIZE	include/VX/vx_khr_tiling.h	/^    VX_KERNEL_INPUT_TILE_BLOCK_SIZE   = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_KERNEL) + 0xB,$/;"	e	enum:vx_kernel_attribute_tiling_e
VX_KERNEL_INTEGRAL_IMAGE	include/VX/vx_kernels.h	/^    VX_KERNEL_INTEGRAL_IMAGE = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0xE,$/;"	e	enum:vx_kernel_e
VX_KERNEL_INVALID	include/VX/vx_compatibility.h	151;"	d
VX_KERNEL_LAPLACIAN_PYRAMID	include/VX/vx_kernels.h	/^    VX_KERNEL_LAPLACIAN_PYRAMID = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x2A,$/;"	e	enum:vx_kernel_e
VX_KERNEL_LAPLACIAN_RECONSTRUCT	include/VX/vx_kernels.h	/^    VX_KERNEL_LAPLACIAN_RECONSTRUCT = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x2B,$/;"	e	enum:vx_kernel_e
VX_KERNEL_LBP	include/VX/vx_kernels.h	/^    VX_KERNEL_LBP = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x2E,$/;"	e	enum:vx_kernel_e
VX_KERNEL_LOCAL_DATA_SIZE	include/VX/vx_types.h	/^    VX_KERNEL_LOCAL_DATA_SIZE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_KERNEL) + 0x3,$/;"	e	enum:vx_kernel_attribute_e
VX_KERNEL_MAGNITUDE	include/VX/vx_kernels.h	/^    VX_KERNEL_MAGNITUDE = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x5,$/;"	e	enum:vx_kernel_e
VX_KERNEL_MASK	include/VX/vx_types.h	483;"	d
VX_KERNEL_MATCH_TEMPLATE	include/VX/vx_kernels.h	/^    VX_KERNEL_MATCH_TEMPLATE = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x2D,$/;"	e	enum:vx_kernel_e
VX_KERNEL_MAX	include/VX/vx_kernels.h	/^    VX_KERNEL_MAX = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x3E,$/;"	e	enum:vx_kernel_e
VX_KERNEL_MAX_1_0	include/VX/vx_kernels.h	/^    VX_KERNEL_MAX_1_0, \/*!< \\internal Used for VX1.0 bounds checking in the conformance test. *\/$/;"	e	enum:vx_kernel_e
VX_KERNEL_MAX_1_1	include/VX/vx_kernels.h	/^    VX_KERNEL_MAX_1_1, \/*!< \\internal Used for VX1.1 bounds checking in the conformance test. *\/$/;"	e	enum:vx_kernel_e
VX_KERNEL_MAX_1_2	include/VX/vx_kernels.h	/^    VX_KERNEL_MAX_1_2, \/*!< \\internal Used for VX1.2 bounds checking in the conformance test. *\/$/;"	e	enum:vx_kernel_e
VX_KERNEL_MEAN_STDDEV	include/VX/vx_kernels.h	/^    VX_KERNEL_MEAN_STDDEV = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0xC,$/;"	e	enum:vx_kernel_e
VX_KERNEL_MEDIAN_3x3	include/VX/vx_kernels.h	/^    VX_KERNEL_MEDIAN_3x3 = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x11,$/;"	e	enum:vx_kernel_e
VX_KERNEL_MIN	include/VX/vx_kernels.h	/^    VX_KERNEL_MIN = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x3F,$/;"	e	enum:vx_kernel_e
VX_KERNEL_MINMAXLOC	include/VX/vx_kernels.h	/^    VX_KERNEL_MINMAXLOC = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x19,$/;"	e	enum:vx_kernel_e
VX_KERNEL_MULTIPLY	include/VX/vx_kernels.h	/^    VX_KERNEL_MULTIPLY = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x20,$/;"	e	enum:vx_kernel_e
VX_KERNEL_NAME	include/VX/vx_types.h	/^    VX_KERNEL_NAME = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_KERNEL) + 0x1,$/;"	e	enum:vx_kernel_attribute_e
VX_KERNEL_NON_LINEAR_FILTER	include/VX/vx_kernels.h	/^    VX_KERNEL_NON_LINEAR_FILTER = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x2C,$/;"	e	enum:vx_kernel_e
VX_KERNEL_NON_MAX_SUPPRESSION	include/VX/vx_kernels.h	/^    VX_KERNEL_NON_MAX_SUPPRESSION = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x38,$/;"	e	enum:vx_kernel_e
VX_KERNEL_NORMALIZATION_LAYER	include/VX/vx_khr_nn.h	/^    VX_KERNEL_NORMALIZATION_LAYER = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_NN_EXTENSION) + 0x4,$/;"	e	enum:vx_kernel_nn_ext_e
VX_KERNEL_NOT	include/VX/vx_kernels.h	/^    VX_KERNEL_NOT = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x1F,$/;"	e	enum:vx_kernel_e
VX_KERNEL_OPTICAL_FLOW_PYR_LK	include/VX/vx_kernels.h	/^    VX_KERNEL_OPTICAL_FLOW_PYR_LK = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x27,$/;"	e	enum:vx_kernel_e
VX_KERNEL_OR	include/VX/vx_kernels.h	/^    VX_KERNEL_OR = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x1D,$/;"	e	enum:vx_kernel_e
VX_KERNEL_OUTPUT_NEIGHBORHOOD	include/VX/vx_khr_tiling.h	/^    VX_KERNEL_OUTPUT_NEIGHBORHOOD     = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_KERNEL) + 0xC,$/;"	e	enum:vx_kernel_attribute_tiling_e
VX_KERNEL_OUTPUT_TILE_BLOCK_SIZE	include/VX/vx_khr_tiling.h	/^    VX_KERNEL_OUTPUT_TILE_BLOCK_SIZE  = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_KERNEL) + 0x8,$/;"	e	enum:vx_kernel_attribute_tiling_e
VX_KERNEL_PARAMETERS	include/VX/vx_types.h	/^    VX_KERNEL_PARAMETERS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_KERNEL) + 0x0,$/;"	e	enum:vx_kernel_attribute_e
VX_KERNEL_PHASE	include/VX/vx_kernels.h	/^    VX_KERNEL_PHASE = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x6,$/;"	e	enum:vx_kernel_e
VX_KERNEL_POOLING_LAYER	include/VX/vx_khr_nn.h	/^    VX_KERNEL_POOLING_LAYER = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_NN_EXTENSION) + 0x2,$/;"	e	enum:vx_kernel_nn_ext_e
VX_KERNEL_REMAP	include/VX/vx_kernels.h	/^    VX_KERNEL_REMAP = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x28,$/;"	e	enum:vx_kernel_e
VX_KERNEL_ROI_POOLING_LAYER	include/VX/vx_khr_nn.h	/^    VX_KERNEL_ROI_POOLING_LAYER = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_NN_EXTENSION) + 0x6,$/;"	e	enum:vx_kernel_nn_ext_e
VX_KERNEL_SCALAR_OPERATION	include/VX/vx_kernels.h	/^    VX_KERNEL_SCALAR_OPERATION = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x39,$/;"	e	enum:vx_kernel_e
VX_KERNEL_SCALE_IMAGE	include/VX/vx_kernels.h	/^    VX_KERNEL_SCALE_IMAGE = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x7,$/;"	e	enum:vx_kernel_e
VX_KERNEL_SCAN_CLASSIFIER	include/VX/vx_khr_class.h	/^    VX_KERNEL_SCAN_CLASSIFIER = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_CLASS_EXTENSION) + 0x0,$/;"	e	enum:vx_kernel_nn_ext_e
VX_KERNEL_SELECT	include/VX/vx_kernels.h	/^    VX_KERNEL_SELECT = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x3D,$/;"	e	enum:vx_kernel_e
VX_KERNEL_SOBEL_3x3	include/VX/vx_kernels.h	/^    VX_KERNEL_SOBEL_3x3 = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x4,$/;"	e	enum:vx_kernel_e
VX_KERNEL_SOFTMAX_LAYER	include/VX/vx_khr_nn.h	/^    VX_KERNEL_SOFTMAX_LAYER = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_NN_EXTENSION) + 0x3,$/;"	e	enum:vx_kernel_nn_ext_e
VX_KERNEL_SUBTRACT	include/VX/vx_kernels.h	/^    VX_KERNEL_SUBTRACT = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x22,$/;"	e	enum:vx_kernel_e
VX_KERNEL_TABLE_LOOKUP	include/VX/vx_kernels.h	/^    VX_KERNEL_TABLE_LOOKUP = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x8,$/;"	e	enum:vx_kernel_e
VX_KERNEL_TENSOR_ADD	include/VX/vx_kernels.h	/^    VX_KERNEL_TENSOR_ADD = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x31,$/;"	e	enum:vx_kernel_e
VX_KERNEL_TENSOR_CONVERT_DEPTH	include/VX/vx_kernels.h	/^    VX_KERNEL_TENSOR_CONVERT_DEPTH = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x35,$/;"	e	enum:vx_kernel_e
VX_KERNEL_TENSOR_MATRIX_MULTIPLY	include/VX/vx_kernels.h	/^    VX_KERNEL_TENSOR_MATRIX_MULTIPLY = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x36,$/;"	e	enum:vx_kernel_e
VX_KERNEL_TENSOR_MULTIPLY	include/VX/vx_kernels.h	/^    VX_KERNEL_TENSOR_MULTIPLY = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x30,$/;"	e	enum:vx_kernel_e
VX_KERNEL_TENSOR_SUBTRACT	include/VX/vx_kernels.h	/^    VX_KERNEL_TENSOR_SUBTRACT = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x32,$/;"	e	enum:vx_kernel_e
VX_KERNEL_TENSOR_TABLE_LOOKUP	include/VX/vx_kernels.h	/^    VX_KERNEL_TENSOR_TABLE_LOOKUP = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x33,$/;"	e	enum:vx_kernel_e
VX_KERNEL_TENSOR_TRANSPOSE	include/VX/vx_kernels.h	/^    VX_KERNEL_TENSOR_TRANSPOSE = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x34,$/;"	e	enum:vx_kernel_e
VX_KERNEL_THRESHOLD	include/VX/vx_kernels.h	/^    VX_KERNEL_THRESHOLD = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0xD,$/;"	e	enum:vx_kernel_e
VX_KERNEL_TILE_MEMORY_SIZE	include/VX/vx_khr_tiling.h	/^    VX_KERNEL_TILE_MEMORY_SIZE        = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_KERNEL) + 0xA,$/;"	e	enum:vx_kernel_attribute_tiling_e
VX_KERNEL_WARP_AFFINE	include/VX/vx_kernels.h	/^    VX_KERNEL_WARP_AFFINE = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x23,$/;"	e	enum:vx_kernel_e
VX_KERNEL_WARP_PERSPECTIVE	include/VX/vx_kernels.h	/^    VX_KERNEL_WARP_PERSPECTIVE = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x24,$/;"	e	enum:vx_kernel_e
VX_KERNEL_XOR	include/VX/vx_kernels.h	/^    VX_KERNEL_XOR = VX_KERNEL_BASE(VX_ID_KHRONOS, VX_LIBRARY_KHR_BASE) + 0x1E,$/;"	e	enum:vx_kernel_e
VX_LBP	include/VX/vx_types.h	/^    VX_LBP  = VX_ENUM_BASE( VX_ID_KHRONOS, VX_ENUM_LBP_FORMAT ) + 0x0,$/;"	e	enum:vx_lbp_format_e
VX_LIBRARY	include/VX/vx_types.h	518;"	d
VX_LIBRARY_KHR_BASE	include/VX/vx_kernels.h	/^    VX_LIBRARY_KHR_BASE = 0x0,$/;"	e	enum:vx_library_e
VX_LIBRARY_KHR_CLASS_EXTENSION	include/VX/vx_khr_class.h	38;"	d
VX_LIBRARY_KHR_NN_EXTENSION	include/VX/vx_khr_nn.h	46;"	d
VX_LIBRARY_MASK	include/VX/vx_types.h	478;"	d
VX_LUT_ATTRIBUTE_COUNT	include/VX/vx_compatibility.h	87;"	d
VX_LUT_ATTRIBUTE_SIZE	include/VX/vx_compatibility.h	88;"	d
VX_LUT_ATTRIBUTE_TYPE	include/VX/vx_compatibility.h	86;"	d
VX_LUT_COUNT	include/VX/vx_types.h	/^    VX_LUT_COUNT = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS,VX_TYPE_LUT) + 0x1,$/;"	e	enum:vx_lut_attribute_e
VX_LUT_OFFSET	include/VX/vx_types.h	/^    VX_LUT_OFFSET = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS,VX_TYPE_LUT) + 0x3,$/;"	e	enum:vx_lut_attribute_e
VX_LUT_SIZE	include/VX/vx_types.h	/^    VX_LUT_SIZE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS,VX_TYPE_LUT) + 0x2,$/;"	e	enum:vx_lut_attribute_e
VX_LUT_TYPE	include/VX/vx_types.h	/^    VX_LUT_TYPE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS,VX_TYPE_LUT) + 0x0,$/;"	e	enum:vx_lut_attribute_e
VX_MATRIX_ATTRIBUTE_COLUMNS	include/VX/vx_compatibility.h	107;"	d
VX_MATRIX_ATTRIBUTE_ROWS	include/VX/vx_compatibility.h	106;"	d
VX_MATRIX_ATTRIBUTE_SIZE	include/VX/vx_compatibility.h	108;"	d
VX_MATRIX_ATTRIBUTE_TYPE	include/VX/vx_compatibility.h	105;"	d
VX_MATRIX_COLUMNS	include/VX/vx_types.h	/^    VX_MATRIX_COLUMNS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_MATRIX) + 0x2,$/;"	e	enum:vx_matrix_attribute_e
VX_MATRIX_ORIGIN	include/VX/vx_types.h	/^    VX_MATRIX_ORIGIN = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_MATRIX) + 0x4,$/;"	e	enum:vx_matrix_attribute_e
VX_MATRIX_PATTERN	include/VX/vx_types.h	/^    VX_MATRIX_PATTERN = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_MATRIX) + 0x5,$/;"	e	enum:vx_matrix_attribute_e
VX_MATRIX_ROWS	include/VX/vx_types.h	/^    VX_MATRIX_ROWS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_MATRIX) + 0x1,$/;"	e	enum:vx_matrix_attribute_e
VX_MATRIX_SIZE	include/VX/vx_types.h	/^    VX_MATRIX_SIZE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_MATRIX) + 0x3,$/;"	e	enum:vx_matrix_attribute_e
VX_MATRIX_TYPE	include/VX/vx_types.h	/^    VX_MATRIX_TYPE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_MATRIX) + 0x0,$/;"	e	enum:vx_matrix_attribute_e
VX_MAX_IMPLEMENTATION_NAME	include/VX/vx.h	29;"	d
VX_MAX_KERNEL_NAME	include/VX/vx.h	34;"	d
VX_MAX_LOG_MESSAGE_LEN	include/VX/vx.h	39;"	d
VX_MAX_REFERENCE_NAME	include/VX/vx.h	45;"	d
VX_MAX_STRING_BUFFER_SIZE_AMD	include/vx_ext_amd.h	55;"	d
VX_MAX_TILING_PLANES	include/VX/vx_khr_tiling.h	91;"	d
VX_MEMORY_TYPE_HOST	include/VX/vx_types.h	/^    VX_MEMORY_TYPE_HOST = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_MEMORY_TYPE) + 0x1,$/;"	e	enum:vx_memory_type_e
VX_MEMORY_TYPE_NONE	include/VX/vx_types.h	/^    VX_MEMORY_TYPE_NONE = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_MEMORY_TYPE) + 0x0,$/;"	e	enum:vx_memory_type_e
VX_MEMORY_TYPE_OPENCL	include/vx_ext_amd.h	/^	VX_MEMORY_TYPE_OPENCL = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_MEMORY_TYPE) + 0x2,$/;"	e	enum:vx_memory_type_amd_e
VX_META_FORMAT_ATTRIBUTE_DELTA_RECTANGLE	include/VX/vx_compatibility.h	140;"	d
VX_MLBP	include/VX/vx_types.h	/^    VX_MLBP = VX_ENUM_BASE( VX_ID_KHRONOS, VX_ENUM_LBP_FORMAT ) + 0x1,$/;"	e	enum:vx_lbp_format_e
VX_NN_ACTIVATION_ABS	include/VX/vx_khr_nn.h	/^    VX_NN_ACTIVATION_ABS = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NN_ACTIVATION_FUNCTION_TYPE) + 0x5,$/;"	e	enum:vx_nn_activation_function_e
VX_NN_ACTIVATION_BRELU	include/VX/vx_khr_nn.h	/^    VX_NN_ACTIVATION_BRELU = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NN_ACTIVATION_FUNCTION_TYPE) + 0x3,$/;"	e	enum:vx_nn_activation_function_e
VX_NN_ACTIVATION_HYPERBOLIC_TAN	include/VX/vx_khr_nn.h	/^    VX_NN_ACTIVATION_HYPERBOLIC_TAN = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NN_ACTIVATION_FUNCTION_TYPE) + 0x1,$/;"	e	enum:vx_nn_activation_function_e
VX_NN_ACTIVATION_LEAKY_RELU	include/vx_ext_amd.h	59;"	d
VX_NN_ACTIVATION_LINEAR	include/VX/vx_khr_nn.h	/^    VX_NN_ACTIVATION_LINEAR = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NN_ACTIVATION_FUNCTION_TYPE) + 0x8,$/;"	e	enum:vx_nn_activation_function_e
VX_NN_ACTIVATION_LOGISTIC	include/VX/vx_khr_nn.h	/^    VX_NN_ACTIVATION_LOGISTIC = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NN_ACTIVATION_FUNCTION_TYPE) + 0x0,$/;"	e	enum:vx_nn_activation_function_e
VX_NN_ACTIVATION_RELU	include/VX/vx_khr_nn.h	/^    VX_NN_ACTIVATION_RELU = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NN_ACTIVATION_FUNCTION_TYPE) + 0x2,$/;"	e	enum:vx_nn_activation_function_e
VX_NN_ACTIVATION_SOFTRELU	include/VX/vx_khr_nn.h	/^    VX_NN_ACTIVATION_SOFTRELU = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NN_ACTIVATION_FUNCTION_TYPE) + 0x4,$/;"	e	enum:vx_nn_activation_function_e
VX_NN_ACTIVATION_SQRT	include/VX/vx_khr_nn.h	/^    VX_NN_ACTIVATION_SQRT = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NN_ACTIVATION_FUNCTION_TYPE) + 0x7,$/;"	e	enum:vx_nn_activation_function_e
VX_NN_ACTIVATION_SQUARE	include/VX/vx_khr_nn.h	/^    VX_NN_ACTIVATION_SQUARE = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NN_ACTIVATION_FUNCTION_TYPE) + 0x6,$/;"	e	enum:vx_nn_activation_function_e
VX_NN_DS_SIZE_ROUNDING_CEILING	include/VX/vx_khr_nn.h	/^    VX_NN_DS_SIZE_ROUNDING_CEILING = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NN_ROUNDING_TYPE) + 0x1$/;"	e	enum:vx_nn_rounding_type_e
VX_NN_DS_SIZE_ROUNDING_FLOOR	include/VX/vx_khr_nn.h	/^    VX_NN_DS_SIZE_ROUNDING_FLOOR = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NN_ROUNDING_TYPE) + 0x0,$/;"	e	enum:vx_nn_rounding_type_e
VX_NN_NORMALIZATION_ACROSS_MAPS	include/VX/vx_khr_nn.h	/^    VX_NN_NORMALIZATION_ACROSS_MAPS = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NN_NORMALIZATION_TYPE) + 0x1,$/;"	e	enum:vx_nn_norm_type_e
VX_NN_NORMALIZATION_SAME_MAP	include/VX/vx_khr_nn.h	/^    VX_NN_NORMALIZATION_SAME_MAP = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NN_NORMALIZATION_TYPE) + 0x0,$/;"	e	enum:vx_nn_norm_type_e
VX_NN_POOLING_AVG	include/VX/vx_khr_nn.h	/^    VX_NN_POOLING_AVG = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NN_POOLING_TYPE) + 0x1$/;"	e	enum:vx_nn_pooling_type_e
VX_NN_POOLING_MAX	include/VX/vx_khr_nn.h	/^    VX_NN_POOLING_MAX = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NN_POOLING_TYPE) + 0x0,$/;"	e	enum:vx_nn_pooling_type_e
VX_NODE_ATTRIBUTE_AMD_AFFINITY	include/vx_ext_amd.h	/^	VX_NODE_ATTRIBUTE_AMD_AFFINITY                      = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_NODE) + 0x01,$/;"	e	enum:vx_node_attribute_amd_e
VX_NODE_ATTRIBUTE_AMD_OPENCL_COMMAND_QUEUE	include/vx_ext_amd.h	/^	VX_NODE_ATTRIBUTE_AMD_OPENCL_COMMAND_QUEUE          = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_NODE) + 0x02,$/;"	e	enum:vx_node_attribute_amd_e
VX_NODE_ATTRIBUTE_BORDER_MODE	include/VX/vx_compatibility.h	61;"	d
VX_NODE_ATTRIBUTE_LOCAL_DATA_PTR	include/VX/vx_compatibility.h	63;"	d
VX_NODE_ATTRIBUTE_LOCAL_DATA_SIZE	include/VX/vx_compatibility.h	62;"	d
VX_NODE_ATTRIBUTE_PERFORMANCE	include/VX/vx_compatibility.h	60;"	d
VX_NODE_ATTRIBUTE_STATUS	include/VX/vx_compatibility.h	59;"	d
VX_NODE_BORDER	include/VX/vx_types.h	/^    VX_NODE_BORDER = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_NODE) + 0x2,$/;"	e	enum:vx_node_attribute_e
VX_NODE_INPUT_NEIGHBORHOOD	include/VX/vx_khr_tiling.h	/^    VX_NODE_INPUT_NEIGHBORHOOD      = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_NODE) + 0xB,$/;"	e	enum:vx_node_attribute_tiling_e
VX_NODE_INPUT_TILE_BLOCK_SIZE	include/VX/vx_khr_tiling.h	/^    VX_NODE_INPUT_TILE_BLOCK_SIZE   = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_NODE) + 0xE,$/;"	e	enum:vx_node_attribute_tiling_e
VX_NODE_IS_REPLICATED	include/VX/vx_types.h	/^    VX_NODE_IS_REPLICATED = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_NODE) + 0x6,$/;"	e	enum:vx_node_attribute_e
VX_NODE_LOCAL_DATA_PTR	include/VX/vx_types.h	/^    VX_NODE_LOCAL_DATA_PTR = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_NODE) + 0x4,$/;"	e	enum:vx_node_attribute_e
VX_NODE_LOCAL_DATA_SIZE	include/VX/vx_types.h	/^    VX_NODE_LOCAL_DATA_SIZE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_NODE) + 0x3,$/;"	e	enum:vx_node_attribute_e
VX_NODE_OUTPUT_NEIGHBORHOOD	include/VX/vx_khr_tiling.h	/^    VX_NODE_OUTPUT_NEIGHBORHOOD     = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_NODE) + 0xF,$/;"	e	enum:vx_node_attribute_tiling_e
VX_NODE_OUTPUT_TILE_BLOCK_SIZE	include/VX/vx_khr_tiling.h	/^    VX_NODE_OUTPUT_TILE_BLOCK_SIZE  = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_NODE) + 0xC,$/;"	e	enum:vx_node_attribute_tiling_e
VX_NODE_PARAMETERS	include/VX/vx_types.h	/^    VX_NODE_PARAMETERS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_NODE) + 0x5,$/;"	e	enum:vx_node_attribute_e
VX_NODE_PERFORMANCE	include/VX/vx_types.h	/^    VX_NODE_PERFORMANCE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_NODE) + 0x1,$/;"	e	enum:vx_node_attribute_e
VX_NODE_REPLICATE_FLAGS	include/VX/vx_types.h	/^    VX_NODE_REPLICATE_FLAGS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_NODE) + 0x7,$/;"	e	enum:vx_node_attribute_e
VX_NODE_STATUS	include/VX/vx_types.h	/^    VX_NODE_STATUS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_NODE) + 0x0,$/;"	e	enum:vx_node_attribute_e
VX_NODE_TILE_MEMORY_SIZE	include/VX/vx_khr_tiling.h	/^    VX_NODE_TILE_MEMORY_SIZE        = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_NODE) + 0xD,$/;"	e	enum:vx_node_attribute_tiling_e
VX_NODE_VALID_RECT_RESET	include/VX/vx_types.h	/^    VX_NODE_VALID_RECT_RESET = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_NODE) + 0x8,$/;"	e	enum:vx_node_attribute_e
VX_NOGAP_X	include/VX/vx_types.h	/^     VX_NOGAP_X = 1,  \/*!< \\brief No Gap. *\/$/;"	e	enum:vx_map_flag_e
VX_NONLINEAR_FILTER_MAX	include/VX/vx_types.h	/^    VX_NONLINEAR_FILTER_MAX = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NONLINEAR) + 0x2,$/;"	e	enum:vx_non_linear_filter_e
VX_NONLINEAR_FILTER_MEDIAN	include/VX/vx_types.h	/^    VX_NONLINEAR_FILTER_MEDIAN = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NONLINEAR) + 0x0,$/;"	e	enum:vx_non_linear_filter_e
VX_NONLINEAR_FILTER_MIN	include/VX/vx_types.h	/^    VX_NONLINEAR_FILTER_MIN = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NONLINEAR) + 0x1 ,$/;"	e	enum:vx_non_linear_filter_e
VX_NORM_L1	include/VX/vx_types.h	/^    VX_NORM_L1 = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NORM_TYPE) + 0x0,$/;"	e	enum:vx_norm_type_e
VX_NORM_L2	include/VX/vx_types.h	/^    VX_NORM_L2 = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_NORM_TYPE) + 0x1,$/;"	e	enum:vx_norm_type_e
VX_OBJECT_ARRAY_ITEMTYPE	include/VX/vx_types.h	/^    VX_OBJECT_ARRAY_ITEMTYPE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_OBJECT_ARRAY) + 0x0,$/;"	e	enum:vx_object_array_attribute_e
VX_OBJECT_ARRAY_NUMITEMS	include/VX/vx_types.h	/^    VX_OBJECT_ARRAY_NUMITEMS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_OBJECT_ARRAY) + 0x1,$/;"	e	enum:vx_object_array_attribute_e
VX_OUTPUT	include/VX/vx_types.h	/^    VX_OUTPUT = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_DIRECTION) + 0x1,$/;"	e	enum:vx_direction_e
VX_PARAMETER_ATTRIBUTE_DIRECTION	include/VX/vx_compatibility.h	66;"	d
VX_PARAMETER_ATTRIBUTE_INDEX	include/VX/vx_compatibility.h	65;"	d
VX_PARAMETER_ATTRIBUTE_REF	include/VX/vx_compatibility.h	69;"	d
VX_PARAMETER_ATTRIBUTE_STATE	include/VX/vx_compatibility.h	68;"	d
VX_PARAMETER_ATTRIBUTE_TYPE	include/VX/vx_compatibility.h	67;"	d
VX_PARAMETER_DIRECTION	include/VX/vx_types.h	/^    VX_PARAMETER_DIRECTION = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_PARAMETER) + 0x1,$/;"	e	enum:vx_parameter_attribute_e
VX_PARAMETER_INDEX	include/VX/vx_types.h	/^    VX_PARAMETER_INDEX = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_PARAMETER) + 0x0,$/;"	e	enum:vx_parameter_attribute_e
VX_PARAMETER_REF	include/VX/vx_types.h	/^    VX_PARAMETER_REF = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_PARAMETER) + 0x4,$/;"	e	enum:vx_parameter_attribute_e
VX_PARAMETER_STATE	include/VX/vx_types.h	/^    VX_PARAMETER_STATE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_PARAMETER) + 0x3,$/;"	e	enum:vx_parameter_attribute_e
VX_PARAMETER_STATE_OPTIONAL	include/VX/vx_types.h	/^    VX_PARAMETER_STATE_OPTIONAL = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_PARAMETER_STATE) + 0x1,$/;"	e	enum:vx_parameter_state_e
VX_PARAMETER_STATE_REQUIRED	include/VX/vx_types.h	/^    VX_PARAMETER_STATE_REQUIRED = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_PARAMETER_STATE) + 0x0,$/;"	e	enum:vx_parameter_state_e
VX_PARAMETER_TYPE	include/VX/vx_types.h	/^    VX_PARAMETER_TYPE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_PARAMETER) + 0x2,$/;"	e	enum:vx_parameter_attribute_e
VX_PATTERN_BOX	include/VX/vx_types.h	/^    VX_PATTERN_BOX = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_PATTERN) + 0x0,$/;"	e	enum:vx_pattern_e
VX_PATTERN_CROSS	include/VX/vx_types.h	/^    VX_PATTERN_CROSS = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_PATTERN) + 0x1 ,$/;"	e	enum:vx_pattern_e
VX_PATTERN_DISK	include/VX/vx_types.h	/^    VX_PATTERN_DISK = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_PATTERN) + 0x2,$/;"	e	enum:vx_pattern_e
VX_PATTERN_OTHER	include/VX/vx_types.h	/^    VX_PATTERN_OTHER = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_PATTERN) + 0x3,$/;"	e	enum:vx_pattern_e
VX_PERF_INIT	include/VX/vx_types.h	1601;"	d
VX_PYRAMID_ATTRIBUTE_FORMAT	include/VX/vx_compatibility.h	119;"	d
VX_PYRAMID_ATTRIBUTE_HEIGHT	include/VX/vx_compatibility.h	118;"	d
VX_PYRAMID_ATTRIBUTE_LEVELS	include/VX/vx_compatibility.h	115;"	d
VX_PYRAMID_ATTRIBUTE_SCALE	include/VX/vx_compatibility.h	116;"	d
VX_PYRAMID_ATTRIBUTE_WIDTH	include/VX/vx_compatibility.h	117;"	d
VX_PYRAMID_FORMAT	include/VX/vx_types.h	/^    VX_PYRAMID_FORMAT = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_PYRAMID) + 0x4,$/;"	e	enum:vx_pyramid_attribute_e
VX_PYRAMID_HEIGHT	include/VX/vx_types.h	/^    VX_PYRAMID_HEIGHT = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_PYRAMID) + 0x3,$/;"	e	enum:vx_pyramid_attribute_e
VX_PYRAMID_LEVELS	include/VX/vx_types.h	/^    VX_PYRAMID_LEVELS = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_PYRAMID) + 0x0,$/;"	e	enum:vx_pyramid_attribute_e
VX_PYRAMID_SCALE	include/VX/vx_types.h	/^    VX_PYRAMID_SCALE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_PYRAMID) + 0x1,$/;"	e	enum:vx_pyramid_attribute_e
VX_PYRAMID_WIDTH	include/VX/vx_types.h	/^    VX_PYRAMID_WIDTH = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_PYRAMID) + 0x2,$/;"	e	enum:vx_pyramid_attribute_e
VX_READ_AND_WRITE	include/VX/vx_types.h	/^    VX_READ_AND_WRITE = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_ACCESSOR) + 0x3,$/;"	e	enum:vx_accessor_e
VX_READ_ONLY	include/VX/vx_types.h	/^    VX_READ_ONLY = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_ACCESSOR) + 0x1,$/;"	e	enum:vx_accessor_e
VX_REFERENCE_COUNT	include/VX/vx_types.h	/^    VX_REFERENCE_COUNT = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_REFERENCE) + 0x0,$/;"	e	enum:vx_reference_attribute_e
VX_REFERENCE_NAME	include/VX/vx_types.h	/^    VX_REFERENCE_NAME = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_REFERENCE) + 0x2,$/;"	e	enum:vx_reference_attribute_e
VX_REFERENCE_TYPE	include/VX/vx_types.h	/^    VX_REFERENCE_TYPE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_REFERENCE) + 0x1,$/;"	e	enum:vx_reference_attribute_e
VX_REF_ATTRIBUTE_COUNT	include/VX/vx_compatibility.h	36;"	d
VX_REF_ATTRIBUTE_NAME	include/VX/vx_compatibility.h	38;"	d
VX_REF_ATTRIBUTE_TYPE	include/VX/vx_compatibility.h	37;"	d
VX_REMAP_ATTRIBUTE_DESTINATION_HEIGHT	include/VX/vx_compatibility.h	124;"	d
VX_REMAP_ATTRIBUTE_DESTINATION_WIDTH	include/VX/vx_compatibility.h	123;"	d
VX_REMAP_ATTRIBUTE_SOURCE_HEIGHT	include/VX/vx_compatibility.h	122;"	d
VX_REMAP_ATTRIBUTE_SOURCE_WIDTH	include/VX/vx_compatibility.h	121;"	d
VX_REMAP_DESTINATION_HEIGHT	include/VX/vx_types.h	/^    VX_REMAP_DESTINATION_HEIGHT = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_REMAP) + 0x3,$/;"	e	enum:vx_remap_attribute_e
VX_REMAP_DESTINATION_WIDTH	include/VX/vx_types.h	/^    VX_REMAP_DESTINATION_WIDTH = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_REMAP) + 0x2,$/;"	e	enum:vx_remap_attribute_e
VX_REMAP_SOURCE_HEIGHT	include/VX/vx_types.h	/^    VX_REMAP_SOURCE_HEIGHT = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_REMAP) + 0x1,$/;"	e	enum:vx_remap_attribute_e
VX_REMAP_SOURCE_WIDTH	include/VX/vx_types.h	/^    VX_REMAP_SOURCE_WIDTH = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_REMAP) + 0x0,$/;"	e	enum:vx_remap_attribute_e
VX_RESTRICT	include/VX/vx_khr_tiling.h	45;"	d
VX_RESTRICT	include/VX/vx_khr_tiling.h	48;"	d
VX_RESTRICT	include/VX/vx_khr_tiling.h	50;"	d
VX_ROUND_POLICY_TO_NEAREST_EVEN	include/VX/vx_types.h	/^    VX_ROUND_POLICY_TO_NEAREST_EVEN = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_ROUND_POLICY) + 0x2,$/;"	e	enum:vx_round_policy_e
VX_ROUND_POLICY_TO_ZERO	include/VX/vx_types.h	/^    VX_ROUND_POLICY_TO_ZERO = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_ROUND_POLICY) + 0x1,$/;"	e	enum:vx_round_policy_e
VX_SCALAR_ATTRIBUTE_TYPE	include/VX/vx_compatibility.h	79;"	d
VX_SCALAR_OP_ADD	include/VX/vx_types.h	/^    VX_SCALAR_OP_ADD = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0xA,  $/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_AND	include/VX/vx_types.h	/^    VX_SCALAR_OP_AND = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0x0,$/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_DIVIDE	include/VX/vx_types.h	/^    VX_SCALAR_OP_DIVIDE = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0xD,$/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_EQUAL	include/VX/vx_types.h	/^    VX_SCALAR_OP_EQUAL = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0x4,$/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_GREATER	include/VX/vx_types.h	/^    VX_SCALAR_OP_GREATER = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0x8,$/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_GREATEREQ	include/VX/vx_types.h	/^    VX_SCALAR_OP_GREATEREQ = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0x9,  $/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_LESS	include/VX/vx_types.h	/^    VX_SCALAR_OP_LESS = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0x6,$/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_LESSEQ	include/VX/vx_types.h	/^    VX_SCALAR_OP_LESSEQ = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0x7,  $/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_MAX	include/VX/vx_types.h	/^    VX_SCALAR_OP_MAX = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0x10,      $/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_MIN	include/VX/vx_types.h	/^    VX_SCALAR_OP_MIN = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0xF,$/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_MODULUS	include/VX/vx_types.h	/^    VX_SCALAR_OP_MODULUS = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0xE,  $/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_MULTIPLY	include/VX/vx_types.h	/^    VX_SCALAR_OP_MULTIPLY = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0xC,$/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_NAND	include/VX/vx_types.h	/^    VX_SCALAR_OP_NAND = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0x3,  $/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_NOTEQUAL	include/VX/vx_types.h	/^    VX_SCALAR_OP_NOTEQUAL = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0x5,$/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_OR	include/VX/vx_types.h	/^    VX_SCALAR_OP_OR = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0x1,$/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_SUBTRACT	include/VX/vx_types.h	/^    VX_SCALAR_OP_SUBTRACT = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0xB,$/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_OP_XOR	include/VX/vx_types.h	/^    VX_SCALAR_OP_XOR = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_SCALAR_OPERATION) + 0x2,$/;"	e	enum:vx_scalar_operation_e
VX_SCALAR_TYPE	include/VX/vx_types.h	/^    VX_SCALAR_TYPE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_SCALAR) + 0x0,$/;"	e	enum:vx_scalar_attribute_e
VX_SCALE_PYRAMID_HALF	include/VX/vx_types.h	1624;"	d
VX_SCALE_PYRAMID_ORB	include/VX/vx_types.h	1629;"	d
VX_SCALE_UNITY	include/VX/vx_types.h	1497;"	d
VX_SEMAPHORE	ago/ago_platform.cpp	145;"	d	file:
VX_STATUS_MIN	include/VX/vx_types.h	/^    VX_STATUS_MIN                       = -25,\/*!< \\brief Indicates the lower bound of status codes in VX. Used for bounds checks only. *\/$/;"	e	enum:vx_status_e
VX_SUCCESS	include/VX/vx_types.h	/^    VX_SUCCESS                          =  0,\/*!< \\brief No error. *\/$/;"	e	enum:vx_status_e
VX_TARGET_ANY	include/VX/vx_types.h	/^    VX_TARGET_ANY = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_TARGET) + 0x0000,$/;"	e	enum:vx_target_e
VX_TARGET_STRING	include/VX/vx_types.h	/^    VX_TARGET_STRING = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_TARGET) + 0x0001,$/;"	e	enum:vx_target_e
VX_TARGET_VENDOR_BEGIN	include/VX/vx_types.h	/^    VX_TARGET_VENDOR_BEGIN = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_TARGET) + 0x1000,$/;"	e	enum:vx_target_e
VX_TENSOR_BUFFER_OPENCL	include/vx_ext_amd.h	/^	VX_TENSOR_BUFFER_OPENCL   = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_TENSOR) + 0x7,$/;"	e	enum:vx_tensor_attribute_amd_e
VX_TENSOR_DATA_TYPE	include/VX/vx_types.h	/^    VX_TENSOR_DATA_TYPE   = VX_ATTRIBUTE_BASE( VX_ID_KHRONOS, VX_TYPE_TENSOR ) + 0x2,$/;"	e	enum:vx_tensor_attribute_e
VX_TENSOR_DIMS	include/VX/vx_types.h	/^    VX_TENSOR_DIMS        = VX_ATTRIBUTE_BASE( VX_ID_KHRONOS, VX_TYPE_TENSOR ) + 0x1,$/;"	e	enum:vx_tensor_attribute_e
VX_TENSOR_FIXED_POINT_POSITION	include/VX/vx_types.h	/^    VX_TENSOR_FIXED_POINT_POSITION = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_TENSOR) + 0x3$/;"	e	enum:vx_tensor_attribute_e
VX_TENSOR_MEMORY_TYPE	include/vx_ext_amd.h	/^	VX_TENSOR_MEMORY_TYPE     = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_TENSOR) + 0x8,$/;"	e	enum:vx_tensor_attribute_amd_e
VX_TENSOR_NUMBER_OF_DIMS	include/VX/vx_types.h	/^    VX_TENSOR_NUMBER_OF_DIMS = VX_ATTRIBUTE_BASE( VX_ID_KHRONOS, VX_TYPE_TENSOR ) + 0x0,$/;"	e	enum:vx_tensor_attribute_e
VX_TENSOR_OFFSET_OPENCL	include/vx_ext_amd.h	/^	VX_TENSOR_OFFSET_OPENCL   = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_TENSOR) + 0x6,$/;"	e	enum:vx_tensor_attribute_amd_e
VX_TENSOR_STRIDE_OPENCL	include/vx_ext_amd.h	/^	VX_TENSOR_STRIDE_OPENCL   = VX_ATTRIBUTE_BASE(VX_ID_AMD, VX_TYPE_TENSOR) + 0x5,$/;"	e	enum:vx_tensor_attribute_amd_e
VX_TERM_CRITERIA_BOTH	include/VX/vx_types.h	/^    VX_TERM_CRITERIA_BOTH = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_TERM_CRITERIA) + 0x2,$/;"	e	enum:vx_termination_criteria_e
VX_TERM_CRITERIA_EPSILON	include/VX/vx_types.h	/^    VX_TERM_CRITERIA_EPSILON = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_TERM_CRITERIA) + 0x1,$/;"	e	enum:vx_termination_criteria_e
VX_TERM_CRITERIA_ITERATIONS	include/VX/vx_types.h	/^    VX_TERM_CRITERIA_ITERATIONS = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_TERM_CRITERIA) + 0x0,$/;"	e	enum:vx_termination_criteria_e
VX_THREAD	ago/ago_platform.cpp	146;"	d	file:
VX_THRESHOLD_ATTRIBUTE_DATA_TYPE	include/VX/vx_compatibility.h	103;"	d
VX_THRESHOLD_ATTRIBUTE_FALSE_VALUE	include/VX/vx_compatibility.h	102;"	d
VX_THRESHOLD_ATTRIBUTE_THRESHOLD_LOWER	include/VX/vx_compatibility.h	99;"	d
VX_THRESHOLD_ATTRIBUTE_THRESHOLD_UPPER	include/VX/vx_compatibility.h	100;"	d
VX_THRESHOLD_ATTRIBUTE_THRESHOLD_VALUE	include/VX/vx_compatibility.h	98;"	d
VX_THRESHOLD_ATTRIBUTE_TRUE_VALUE	include/VX/vx_compatibility.h	101;"	d
VX_THRESHOLD_ATTRIBUTE_TYPE	include/VX/vx_compatibility.h	97;"	d
VX_THRESHOLD_DATA_TYPE	include/VX/vx_compatibility.h	158;"	d
VX_THRESHOLD_FALSE_VALUE	include/VX/vx_compatibility.h	157;"	d
VX_THRESHOLD_INPUT_FORMAT	include/VX/vx_types.h	/^    VX_THRESHOLD_INPUT_FORMAT = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_THRESHOLD) + 0x7,$/;"	e	enum:vx_threshold_attribute_e
VX_THRESHOLD_OUTPUT_FORMAT	include/VX/vx_types.h	/^    VX_THRESHOLD_OUTPUT_FORMAT = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_THRESHOLD) + 0x8$/;"	e	enum:vx_threshold_attribute_e
VX_THRESHOLD_THRESHOLD_LOWER	include/VX/vx_compatibility.h	154;"	d
VX_THRESHOLD_THRESHOLD_UPPER	include/VX/vx_compatibility.h	155;"	d
VX_THRESHOLD_THRESHOLD_VALUE	include/VX/vx_compatibility.h	153;"	d
VX_THRESHOLD_TRUE_VALUE	include/VX/vx_compatibility.h	156;"	d
VX_THRESHOLD_TYPE	include/VX/vx_types.h	/^    VX_THRESHOLD_TYPE = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_THRESHOLD) + 0x0,$/;"	e	enum:vx_threshold_attribute_e
VX_THRESHOLD_TYPE_BINARY	include/VX/vx_types.h	/^    VX_THRESHOLD_TYPE_BINARY = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_THRESHOLD_TYPE) + 0x0,$/;"	e	enum:vx_threshold_type_e
VX_THRESHOLD_TYPE_RANGE	include/VX/vx_types.h	/^    VX_THRESHOLD_TYPE_RANGE = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_THRESHOLD_TYPE) + 0x1,$/;"	e	enum:vx_threshold_type_e
VX_TYPE	include/VX/vx_types.h	508;"	d
VX_TYPE_ARRAY	include/VX/vx_types.h	/^    VX_TYPE_ARRAY           = 0x80E,\/*!< \\brief A <tt>\\ref vx_array<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_BOOL	include/VX/vx_types.h	/^    VX_TYPE_BOOL            = 0x010,\/*!< \\brief A <tt>\\ref vx_bool<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_CHAR	include/VX/vx_types.h	/^    VX_TYPE_CHAR            = 0x001,\/*!< \\brief A <tt>\\ref vx_char<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_CLASSIFER_MODEL	include/VX/vx_khr_class.h	/^	VX_TYPE_CLASSIFER_MODEL     = 0x02C,\/*!< \\brief A <tt>\\ref vx_classifier_model<\/tt>. type *\/$/;"	e	enum:vx_classifier_type_e
VX_TYPE_CONTEXT	include/VX/vx_types.h	/^    VX_TYPE_CONTEXT         = 0x801,\/*!< \\brief A <tt>\\ref vx_context<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_CONVOLUTION	include/VX/vx_types.h	/^    VX_TYPE_CONVOLUTION     = 0x80C,\/*!< \\brief A <tt>\\ref vx_convolution<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_COORDINATES2D	include/VX/vx_types.h	/^    VX_TYPE_COORDINATES2D   = 0x022,\/*!< \\brief A <tt>\\ref vx_coordinates2d_t<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_COORDINATES2DF	include/VX/vx_types.h	/^    VX_TYPE_COORDINATES2DF  = 0x024,\/*!< \\brief A <tt>\\ref vx_coordinates2df_t<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_COORDINATES3D	include/VX/vx_types.h	/^    VX_TYPE_COORDINATES3D   = 0x023,\/*!< \\brief A <tt>\\ref vx_coordinates3d_t<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_DELAY	include/VX/vx_types.h	/^    VX_TYPE_DELAY           = 0x806,\/*!< \\brief A <tt>\\ref vx_delay<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_DF_IMAGE	include/VX/vx_types.h	/^    VX_TYPE_DF_IMAGE        = 0x00E,\/*!< \\brief A <tt>\\ref vx_df_image<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_DISTRIBUTION	include/VX/vx_types.h	/^    VX_TYPE_DISTRIBUTION    = 0x808,\/*!< \\brief A <tt>\\ref vx_distribution<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_ENUM	include/VX/vx_types.h	/^    VX_TYPE_ENUM            = 0x00C,\/*!< \\brief A <tt>\\ref vx_enum<\/tt>. Equivalent in size to a <tt>\\ref vx_int32<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_ERROR	include/VX/vx_types.h	/^    VX_TYPE_ERROR           = 0x811,\/*!< \\brief An error object which has no type. *\/$/;"	e	enum:vx_type_e
VX_TYPE_FLOAT16	include/VX/vx_types.h	/^    VX_TYPE_FLOAT16         = 0x00F,\/*!< \\brief A <tt>\\ref vx_float16<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_FLOAT16	include/vx_ext_amd.h	/^	VX_TYPE_FLOAT16             = 0x00F,                     \/\/ 16-bit float data type$/;"	e	enum:ago_type_public_e
VX_TYPE_FLOAT32	include/VX/vx_types.h	/^    VX_TYPE_FLOAT32         = 0x00A,\/*!< \\brief A <tt>\\ref vx_float32<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_FLOAT64	include/VX/vx_types.h	/^    VX_TYPE_FLOAT64         = 0x00B,\/*!< \\brief A <tt>\\ref vx_float64<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_GRAPH	include/VX/vx_types.h	/^    VX_TYPE_GRAPH           = 0x802,\/*!< \\brief A <tt>\\ref vx_graph<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_HOG_PARAMS	include/VX/vx_types.h	/^	VX_TYPE_HOG_PARAMS                       = 0x028, \/*!< \\brief A <tt>\\ref vx_hog_t<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_HOUGH_LINES_PARAMS	include/VX/vx_types.h	/^	VX_TYPE_HOUGH_LINES_PARAMS               = 0x029, \/*!< \\brief A <tt>\\ref vx_hough_lines_p_t<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_IMAGE	include/VX/vx_types.h	/^    VX_TYPE_IMAGE           = 0x80F,\/*!< \\brief A <tt>\\ref vx_image<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_IMPORT	include/VX/vx_import.h	57;"	d
VX_TYPE_IMPORT	include/VX/vx_khr_xml.h	/^    VX_TYPE_IMPORT = 0x814,\/*!< \\brief A <tt>\\ref vx_import<\/tt> *\/$/;"	e	enum:vx_ext_import_type_e
VX_TYPE_INT16	include/VX/vx_types.h	/^    VX_TYPE_INT16           = 0x004,\/*!< \\brief A <tt>\\ref vx_int16<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_INT32	include/VX/vx_types.h	/^    VX_TYPE_INT32           = 0x006,\/*!< \\brief A <tt>\\ref vx_int32<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_INT64	include/VX/vx_types.h	/^    VX_TYPE_INT64           = 0x008,\/*!< \\brief A <tt>\\ref vx_int64<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_INT8	include/VX/vx_types.h	/^    VX_TYPE_INT8            = 0x002,\/*!< \\brief A <tt>\\ref vx_int8<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_INVALID	include/VX/vx_types.h	/^    VX_TYPE_INVALID         = 0x000,\/*!< \\brief An invalid type value. When passed an error must be returned. *\/$/;"	e	enum:vx_type_e
VX_TYPE_KERNEL	include/VX/vx_types.h	/^    VX_TYPE_KERNEL          = 0x804,\/*!< \\brief A <tt>\\ref vx_kernel<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_KEYPOINT	include/VX/vx_types.h	/^    VX_TYPE_KEYPOINT        = 0x021,\/*!< \\brief A <tt>\\ref vx_keypoint_t<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_KHRONOS_OBJECT_END	include/VX/vx_types.h	/^    VX_TYPE_KHRONOS_OBJECT_END   = VX_TYPE_VENDOR_OBJECT_START - 1,\/*!< \\brief A value for comparison between Khronos defined objects and vendor structs. *\/$/;"	e	enum:vx_type_e
VX_TYPE_KHRONOS_OBJECT_START	include/VX/vx_types.h	/^    VX_TYPE_KHRONOS_OBJECT_START = 0x800,\/*!< \\brief A Khronos defined object base index. *\/$/;"	e	enum:vx_type_e
VX_TYPE_KHRONOS_STRUCT_MAX	include/VX/vx_types.h	/^    VX_TYPE_KHRONOS_STRUCT_MAX   = VX_TYPE_USER_STRUCT_START - 1,\/*!< \\brief A value for comparison between Khronos defined structs and user structs. *\/$/;"	e	enum:vx_type_e
VX_TYPE_LINE_2D	include/VX/vx_types.h	/^	VX_TYPE_LINE_2D                          = 0x02A, \/*!< \\brief A <tt>\\ref vx_line2d_t<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_LUT	include/VX/vx_types.h	/^    VX_TYPE_LUT             = 0x807,\/*!< \\brief A <tt>\\ref vx_lut<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_MASK	include/VX/vx_types.h	472;"	d
VX_TYPE_MATRIX	include/VX/vx_types.h	/^    VX_TYPE_MATRIX          = 0x80B,\/*!< \\brief A <tt>\\ref vx_matrix<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_META_FORMAT	include/VX/vx_types.h	/^    VX_TYPE_META_FORMAT     = 0x812,\/*!< \\brief A <tt>\\ref vx_meta_format<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_NN_CONVOLUTION_PARAMS	include/VX/vx_khr_nn.h	/^	VX_TYPE_NN_CONVOLUTION_PARAMS     = 0x025,\/*!< \\brief A <tt>\\ref vx_nn_convolution_params_t<\/tt>. *\/$/;"	e	enum:vx_nn_type_e
VX_TYPE_NN_DECONVOLUTION_PARAMS	include/VX/vx_khr_nn.h	/^	VX_TYPE_NN_DECONVOLUTION_PARAMS   = 0x026,\/*!< \\brief A <tt>\\ref vx_nn_deconvolution_params_t<\/tt>. *\/$/;"	e	enum:vx_nn_type_e
VX_TYPE_NN_ROI_POOL_PARAMS	include/VX/vx_khr_nn.h	/^	VX_TYPE_NN_ROI_POOL_PARAMS        = 0x027,\/*!< \\brief A <tt>\\ref vx_nn_roi_pool_params_t<\/tt>. *\/$/;"	e	enum:vx_nn_type_e
VX_TYPE_NODE	include/VX/vx_types.h	/^    VX_TYPE_NODE            = 0x803,\/*!< \\brief A <tt>\\ref vx_node<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_OBJECT_ARRAY	include/VX/vx_types.h	/^    VX_TYPE_OBJECT_ARRAY    = 0x813,\/*!< \\brief A <tt>\\ref vx_object_array<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_OBJECT_MAX	include/VX/vx_compatibility.h	148;"	d
VX_TYPE_PARAMETER	include/VX/vx_types.h	/^    VX_TYPE_PARAMETER       = 0x805,\/*!< \\brief A <tt>\\ref vx_parameter<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_PYRAMID	include/VX/vx_types.h	/^    VX_TYPE_PYRAMID         = 0x809,\/*!< \\brief A <tt>\\ref vx_pyramid<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_RECTANGLE	include/VX/vx_types.h	/^    VX_TYPE_RECTANGLE       = 0x020,\/*!< \\brief A <tt>\\ref vx_rectangle_t<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_REFERENCE	include/VX/vx_types.h	/^    VX_TYPE_REFERENCE       = 0x800,\/*!< \\brief A <tt>\\ref vx_reference<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_REMAP	include/VX/vx_types.h	/^    VX_TYPE_REMAP           = 0x810,\/*!< \\brief A <tt>\\ref vx_remap<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_SCALAR	include/VX/vx_types.h	/^    VX_TYPE_SCALAR          = 0x80D,\/*!< \\brief A <tt>\\ref vx_scalar<\/tt>. when needed to be completely generic for kernel validation. *\/$/;"	e	enum:vx_type_e
VX_TYPE_SCALAR_MAX	include/VX/vx_compatibility.h	21;"	d
VX_TYPE_SIZE	include/VX/vx_types.h	/^    VX_TYPE_SIZE            = 0x00D,\/*!< \\brief A <tt>\\ref vx_size<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_STRING_AMD	include/vx_ext_amd.h	/^	VX_TYPE_STRING_AMD          = 0x011,                     \/\/ scalar data type for string$/;"	e	enum:ago_type_public_e
VX_TYPE_STRUCT_MAX	include/VX/vx_compatibility.h	149;"	d
VX_TYPE_TENSOR	include/VX/vx_types.h	/^    VX_TYPE_TENSOR          = 0x815,\/*!< \\brief A <tt>\\ref vx_tensor<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_TENSOR_MATRIX_MULTIPLY_PARAMS	include/VX/vx_types.h	/^	VX_TYPE_TENSOR_MATRIX_MULTIPLY_PARAMS    = 0x02B, \/*!< \\brief A <tt>\\ref vx_tensor_matrix_multiply_params_t<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_THRESHOLD	include/VX/vx_types.h	/^    VX_TYPE_THRESHOLD       = 0x80A,\/*!< \\brief A <tt>\\ref vx_threshold<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_UINT16	include/VX/vx_types.h	/^    VX_TYPE_UINT16          = 0x005,\/*!< \\brief A <tt>\\ref vx_uint16<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_UINT32	include/VX/vx_types.h	/^    VX_TYPE_UINT32          = 0x007,\/*!< \\brief A <tt>\\ref vx_uint32<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_UINT64	include/VX/vx_types.h	/^    VX_TYPE_UINT64          = 0x009,\/*!< \\brief A <tt>\\ref vx_uint64<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_UINT8	include/VX/vx_types.h	/^    VX_TYPE_UINT8           = 0x003,\/*!< \\brief A <tt>\\ref vx_uint8<\/tt>. *\/$/;"	e	enum:vx_type_e
VX_TYPE_USER_STRUCT_END	include/VX/vx_types.h	/^    VX_TYPE_USER_STRUCT_END      = VX_TYPE_VENDOR_STRUCT_START - 1,\/*!< \\brief A value for comparison between user structs and vendor structs. *\/$/;"	e	enum:vx_type_e
VX_TYPE_USER_STRUCT_START	include/VX/vx_types.h	/^    VX_TYPE_USER_STRUCT_START    = 0x100,\/*!< \\brief A user-defined struct base index.*\/$/;"	e	enum:vx_type_e
VX_TYPE_VENDOR_OBJECT_END	include/VX/vx_types.h	/^    VX_TYPE_VENDOR_OBJECT_END    = 0xFFF,\/*!< \\brief A value used for bound checking of vendor objects *\/$/;"	e	enum:vx_type_e
VX_TYPE_VENDOR_OBJECT_START	include/VX/vx_types.h	/^    VX_TYPE_VENDOR_OBJECT_START  = 0xC00,\/*!< \\brief A vendor defined object base index. *\/$/;"	e	enum:vx_type_e
VX_TYPE_VENDOR_STRUCT_END	include/VX/vx_types.h	/^    VX_TYPE_VENDOR_STRUCT_END    = VX_TYPE_KHRONOS_OBJECT_START - 1,\/*!< \\brief A value for comparison between vendor structs and Khronos defined objects. *\/$/;"	e	enum:vx_type_e
VX_TYPE_VENDOR_STRUCT_START	include/VX/vx_types.h	/^    VX_TYPE_VENDOR_STRUCT_START  = 0x400,\/*!< \\brief A vendor-defined struct base index.*\/$/;"	e	enum:vx_type_e
VX_ULBP	include/VX/vx_types.h	/^    VX_ULBP = VX_ENUM_BASE( VX_ID_KHRONOS, VX_ENUM_LBP_FORMAT ) + 0x2$/;"	e	enum:vx_lbp_format_e
VX_VALID_RECT_CALLBACK	include/VX/vx_types.h	/^    VX_VALID_RECT_CALLBACK = VX_ATTRIBUTE_BASE(VX_ID_KHRONOS, VX_TYPE_META_FORMAT) + 0x1,$/;"	e	enum:vx_meta_valid_rect_attribute_e
VX_VENDOR	include/VX/vx_types.h	503;"	d
VX_VENDOR_MASK	include/VX/vx_types.h	465;"	d
VX_VERSION	include/VX/vx.h	81;"	d
VX_VERSION_1_0	include/VX/vx.h	66;"	d
VX_VERSION_1_1	include/VX/vx.h	71;"	d
VX_VERSION_1_2	include/VX/vx.h	76;"	d
VX_VERSION_MAJOR	include/VX/vx.h	56;"	d
VX_VERSION_MINOR	include/VX/vx.h	61;"	d
VX_WRITE_ONLY	include/VX/vx_types.h	/^    VX_WRITE_ONLY = VX_ENUM_BASE(VX_ID_KHRONOS, VX_ENUM_ACCESSOR) + 0x2,$/;"	e	enum:vx_accessor_e
ValidateArguments_CannySuppThreshold_U8	ago/ago_kernel_api.cpp	/^static int ValidateArguments_CannySuppThreshold_U8(AgoNode * node, vx_df_image fmtIn, int shrinkValidRegion_x, int shrinkValidRegion_y)$/;"	f	file:
ValidateArguments_CannySuppThreshold_U8XY	ago/ago_kernel_api.cpp	/^static int ValidateArguments_CannySuppThreshold_U8XY(AgoNode * node, vx_df_image fmtIn, int shrinkValidRegion_x, int shrinkValidRegion_y)$/;"	f	file:
ValidateArguments_Img_1IN	ago/ago_kernel_api.cpp	/^static int ValidateArguments_Img_1IN(AgoNode * node, vx_df_image fmtIn)$/;"	f	file:
ValidateArguments_Img_1OUT	ago/ago_kernel_api.cpp	/^static int ValidateArguments_Img_1OUT(AgoNode * node, vx_df_image fmtOut)$/;"	f	file:
ValidateArguments_Img_1OUT_1IN	ago/ago_kernel_api.cpp	/^static int ValidateArguments_Img_1OUT_1IN(AgoNode * node, vx_df_image fmtOut, vx_df_image fmtIn, bool bShrinkValidRegion = false, int shrinkValidRegion_x = 0, int shrinkValidRegion_y = 0)$/;"	f	file:
ValidateArguments_Img_1OUT_1IN_2S	ago/ago_kernel_api.cpp	/^static int ValidateArguments_Img_1OUT_1IN_2S(AgoNode * node, vx_df_image fmtOut, vx_df_image fmtIn, vx_enum scalarType, vx_enum scalarType2, bool bShrinkValidRegion = false, int shrinkValidRegion_x = 0, int shrinkValidRegion_y = 0)$/;"	f	file:
ValidateArguments_Img_1OUT_1IN_3S	ago/ago_kernel_api.cpp	/^static int ValidateArguments_Img_1OUT_1IN_3S(AgoNode * node, vx_df_image fmtOut, vx_df_image fmtIn, vx_enum scalarType, vx_enum scalarType2, vx_enum scalarType3, bool bShrinkValidRegion = false, int shrinkValidRegion_x = 0, int shrinkValidRegion_y = 0)$/;"	f	file:
ValidateArguments_Img_1OUT_1IN_S	ago/ago_kernel_api.cpp	/^static int ValidateArguments_Img_1OUT_1IN_S(AgoNode * node, vx_df_image fmtOut, vx_df_image fmtIn, vx_enum scalarType, bool bShrinkValidRegion = false, int shrinkValidRegion_x = 0, int shrinkValidRegion_y = 0)$/;"	f	file:
ValidateArguments_Img_1OUT_2IN	ago/ago_kernel_api.cpp	/^static int ValidateArguments_Img_1OUT_2IN(AgoNode * node, vx_df_image fmtOut, vx_df_image fmtIn1, vx_df_image fmtIn2)$/;"	f	file:
ValidateArguments_Img_1OUT_2IN_S	ago/ago_kernel_api.cpp	/^static int ValidateArguments_Img_1OUT_2IN_S(AgoNode * node, vx_df_image fmtOut, vx_df_image fmtIn1, vx_df_image fmtIn2, vx_enum scalarType)$/;"	f	file:
ValidateArguments_Img_1OUT_3IN	ago/ago_kernel_api.cpp	/^static int ValidateArguments_Img_1OUT_3IN(AgoNode * node, vx_df_image fmtOut, vx_df_image fmtIn1, vx_df_image fmtIn2, vx_df_image fmtIn3)$/;"	f	file:
ValidateArguments_Img_1OUT_4IN	ago/ago_kernel_api.cpp	/^static int ValidateArguments_Img_1OUT_4IN(AgoNode * node, vx_df_image fmtOut, vx_df_image fmtIn1, vx_df_image fmtIn2, vx_df_image fmtIn3, vx_df_image fmtIn4)$/;"	f	file:
ValidateArguments_Img_2OUT_1IN	ago/ago_kernel_api.cpp	/^static int ValidateArguments_Img_2OUT_1IN(AgoNode * node, vx_df_image fmtOut1, vx_df_image fmtOut2, vx_df_image fmtIn, bool bShrinkValidRegion = false, int shrinkValidRegion_x = 0, int shrinkValidRegion_y = 0)$/;"	f	file:
ValidateArguments_Img_3OUT_1IN	ago/ago_kernel_api.cpp	/^static int ValidateArguments_Img_3OUT_1IN(AgoNode * node, vx_df_image fmtOut1, vx_df_image fmtOut2, vx_df_image fmtOut3, vx_df_image fmtIn, bool bShrinkValidRegion = false, int shrinkValidRegion_x = 0, int shrinkValidRegion_y = 0)$/;"	f	file:
ValidateArguments_Img_4OUT_1IN	ago/ago_kernel_api.cpp	/^static int ValidateArguments_Img_4OUT_1IN(AgoNode * node, vx_df_image fmtOut1, vx_df_image fmtOut2, vx_df_image fmtOut3, vx_df_image fmtOut4, vx_df_image fmtIn, bool bShrinkValidRegion = false, int shrinkValidRegion_x = 0, int shrinkValidRegion_y = 0)$/;"	f	file:
ValidateArguments_OpticalFlowPyrLK_XY_XY	ago/ago_kernel_api.cpp	/^static int ValidateArguments_OpticalFlowPyrLK_XY_XY(AgoNode * node)$/;"	f	file:
WAIT_OBJECT_0	ago/ago_platform.h	148;"	d
WINAPI	ago/ago_platform.h	146;"	d
WRITEONLY	ago/ago_drama_remove.cpp	31;"	d	file:
W_BITS	ago/ago_haf_cpu_opticalflow.cpp	/^static const int W_BITS = 14;$/;"	v	file:
WaitForSingleObject	ago/ago_platform.cpp	/^DWORD WaitForSingleObject(HANDLE h, DWORD dwMilliseconds)$/;"	f
YUV	include/VX/vx_types.h	/^    vx_uint8 YUV[3]; \/*!< \\brief All YUV formats in the Y,U,V order *\/$/;"	m	union:_vx_pixel_value_t
_CRT_SECURE_NO_WARNINGS	ago/ago_platform.h	32;"	d
_OPENVX_API_H_	include/VX/vx_api.h	19;"	d
_OPENVX_H_	include/VX/vx.h	19;"	d
_OPENVX_IMPORT_EXPORT_H_	include/VX/vx_khr_ix.h	18;"	d
_OPENVX_IMPORT_H_	include/VX/vx_import.h	18;"	d
_OPENVX_KERNELS_H_	include/VX/vx_kernels.h	19;"	d
_OPENVX_NODES_H_	include/VX/vx_nodes.h	19;"	d
_OPENVX_TYPES_H_	include/VX/vx_types.h	19;"	d
_OPENVX_UTILITY_H_	include/VX/vxu.h	19;"	d
_OPENVX_VENDORS_H_	include/VX/vx_vendors.h	19;"	d
_USE_MATH_DEFINES	ago/ago_platform.h	33;"	d
_VX_EXT_AMD_H_	include/vx_ext_amd.h	25;"	d
_VX_KHR_CLASSIFIER_H_	include/VX/vx_khr_class.h	19;"	d
_VX_KHR_ICD_H_	include/VX/vx_khr_icd.h	25;"	d
_VX_KHR_NN_H_	include/VX/vx_khr_nn.h	19;"	d
_VX_KHR_TILING_H_	include/VX/vx_khr_tiling.h	19;"	d
_VX_KHR_XML_H_	include/VX/vx_khr_xml.h	19;"	d
__ago_haf_cpu_h__	ago/ago_haf_cpu.h	25;"	d
__ago_haf_gpu_h__	ago/ago_haf_gpu.h	25;"	d
__ago_internal_h__	ago/ago_internal.h	25;"	d
__ago_kernel_h__	ago/ago_kernels.h	25;"	d
__ago_kernels_api_h__	ago/ago_kernel_api.h	25;"	d
__ago_platform_h__	ago/ago_platform.h	25;"	d
__cpuid	ago/ago_platform.cpp	28;"	d	file:
_vx_array	ago/ago_internal.h	/^struct _vx_array { AgoData d; };$/;"	s
_vx_bool_e	include/VX/vx_types.h	/^typedef enum _vx_bool_e {$/;"	g
_vx_border_mode_t	include/VX/vx_compatibility.h	25;"	d
_vx_border_t	include/VX/vx_types.h	/^typedef struct _vx_border_t {$/;"	s
_vx_convolution	ago/ago_internal.h	/^struct _vx_convolution { AgoData d; };$/;"	s
_vx_coordinates2d_t	include/VX/vx_types.h	/^typedef struct _vx_coordinates2d_t {$/;"	s
_vx_coordinates2df_t	include/VX/vx_types.h	/^typedef struct _vx_coordinates2df_t {$/;"	s
_vx_coordinates3d_t	include/VX/vx_types.h	/^typedef struct _vx_coordinates3d_t {$/;"	s
_vx_delay	ago/ago_internal.h	/^struct _vx_delay { AgoData d; };$/;"	s
_vx_delta_rectangle_t	include/VX/vx_compatibility.h	/^typedef struct _vx_delta_rectangle_t {$/;"	s
_vx_distribution	ago/ago_internal.h	/^struct _vx_distribution { AgoData d; };$/;"	s
_vx_hough_lines_p_t	include/VX/vx_types.h	/^typedef struct _vx_hough_lines_p_t$/;"	s
_vx_image	ago/ago_internal.h	/^struct _vx_image { AgoData d; };$/;"	s
_vx_image_description_t	include/VX/vx_khr_tiling.h	/^typedef struct _vx_image_description_t {$/;"	s
_vx_imagepatch_addressing_t	include/VX/vx_types.h	/^typedef struct _vx_imagepatch_addressing_t {$/;"	s
_vx_kernel_info_t	include/VX/vx_types.h	/^typedef struct _vx_kernel_info_t {$/;"	s
_vx_keypoint_t	include/VX/vx_types.h	/^typedef struct _vx_keypoint_t {$/;"	s
_vx_line2d_t	include/VX/vx_types.h	/^typedef struct _vx_line2d_t$/;"	s
_vx_lut	ago/ago_internal.h	/^struct _vx_lut { AgoData d; };$/;"	s
_vx_matrix	ago/ago_internal.h	/^struct _vx_matrix { AgoData d; };$/;"	s
_vx_neighborhood_size_t	include/VX/vx_khr_tiling.h	/^typedef struct _vx_neighborhood_size_t {$/;"	s
_vx_nn_convolution_params_t	include/VX/vx_khr_nn.h	/^typedef struct _vx_nn_convolution_params_t$/;"	s
_vx_nn_deconvolution_params_t	include/VX/vx_khr_nn.h	/^typedef struct _vx_nn_deconvolution_params_t$/;"	s
_vx_nn_roi_pool_params_t	include/VX/vx_khr_nn.h	/^typedef struct _vx_nn_roi_pool_params_t$/;"	s
_vx_perf_t	include/VX/vx_types.h	/^typedef struct _vx_perf_t {$/;"	s
_vx_pixel_value_t	include/VX/vx_types.h	/^typedef union _vx_pixel_value_t {$/;"	u
_vx_pyramid	ago/ago_internal.h	/^struct _vx_pyramid { AgoData d; };$/;"	s
_vx_rectangle_t	include/VX/vx_types.h	/^typedef struct _vx_rectangle_t {$/;"	s
_vx_remap	ago/ago_internal.h	/^struct _vx_remap { AgoData d; };$/;"	s
_vx_scalar	ago/ago_internal.h	/^struct _vx_scalar { AgoData d; };$/;"	s
_vx_tensor_matrix_multiply_params_t	include/VX/vx_types.h	/^typedef struct _vx_tensor_matrix_multiply_params_t{$/;"	s
_vx_threshold	ago/ago_internal.h	/^struct _vx_threshold { AgoData d; };$/;"	s
_vx_tile_block_size_t	include/VX/vx_khr_tiling.h	/^typedef struct _vx_tile_block_size_t {$/;"	s
_vx_tile_t	include/VX/vx_khr_tiling.h	/^typedef struct _vx_tile_t {$/;"	s
a_x	include/VX/vx_khr_nn.h	/^    vx_size a_x;                 \/*!< \\brief user-specified quantity used to distinguish between the \\f$upscale_x\\f$ different possible output sizes. *\/$/;"	m	struct:_vx_nn_deconvolution_params_t
a_y	include/VX/vx_khr_nn.h	/^    vx_size a_y;                 \/*!< \\brief user-specified quantity used to distinguish between the \\f$upscale_y\\f$ different possible output sizes. *\/$/;"	m	struct:_vx_nn_deconvolution_params_t
addr	include/VX/vx_khr_tiling.h	/^    vx_imagepatch_addressing_t addr[VX_MAX_TILING_PLANES];$/;"	m	struct:_vx_tile_t
age	ago/ago_internal.h	/^	vx_int32 age;$/;"	m	struct:AgoConfigDelay
agoAddData	ago/ago_util.cpp	/^void agoAddData(AgoDataList * dataList, AgoData * data)$/;"	f
agoAddGraph	ago/ago_util.cpp	/^void agoAddGraph(AgoGraphList * graphList, AgoGraph * graph)$/;"	f
agoAddKernel	ago/ago_util.cpp	/^void agoAddKernel(AgoKernelList * kernelList, AgoKernel * kernel)$/;"	f
agoAddLogEntry	ago/ago_util.cpp	/^void agoAddLogEntry(vx_reference ref, vx_status status, const char *message, ...)$/;"	f
agoAddNode	ago/ago_util.cpp	/^void agoAddNode(AgoNodeList * nodeList, AgoNode * node)$/;"	f
agoAddUserStruct	ago/ago_util.cpp	/^vx_enum agoAddUserStruct(AgoContext * acontext, vx_size size, vx_char * name)$/;"	f
agoAgeDelay	ago/ago_interface.cpp	/^int agoAgeDelay(AgoData * delay)$/;"	f
agoAllocData	ago/ago_util.cpp	/^int agoAllocData(AgoData * data)$/;"	f
agoAllocMemory	ago/ago_util.cpp	/^void * agoAllocMemory(vx_size size)$/;"	f
agoChannelEnum2Index	ago/ago_util.cpp	/^int agoChannelEnum2Index(vx_enum channel)$/;"	f
agoCloseModule	ago/ago_platform.cpp	/^void agoCloseModule(ago_module module)$/;"	f
agoCodeGenOpenCL_AbsDiff_S16_S16S16_Sat	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_AbsDiff_S16_S16S16_Sat(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_Add_S16_S16U8_Sat	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_Add_S16_S16U8_Sat(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_BilinearSample	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_BilinearSample(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_BilinearSampleFXY	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_BilinearSampleFXY(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_BilinearSampleFXYConstant	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_BilinearSampleFXYConstant(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_BilinearSampleFXYConstantForRemap	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_BilinearSampleFXYConstantForRemap(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_BilinearSampleWithConstBorder	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_BilinearSampleWithConstBorder(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_ChannelExtract_U8_U24_Pos0	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_ChannelExtract_U8_U24_Pos0(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_ChannelExtract_U8_U24_Pos1	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_ChannelExtract_U8_U24_Pos1(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_ChannelExtract_U8_U24_Pos2	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_ChannelExtract_U8_U24_Pos2(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_ChannelExtract_U8_U32_Pos0	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_ChannelExtract_U8_U32_Pos0(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_ChannelExtract_U8_U32_Pos1	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_ChannelExtract_U8_U32_Pos1(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_ChannelExtract_U8_U32_Pos2	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_ChannelExtract_U8_U32_Pos2(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_ChannelExtract_U8_U32_Pos3	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_ChannelExtract_U8_U32_Pos3(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_ClampPixelCoordinatesToBorder	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_ClampPixelCoordinatesToBorder(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_ColorConvert_U_RGB	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_ColorConvert_U_RGB(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_ColorConvert_U_RGBX	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_ColorConvert_U_RGBX(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_ColorConvert_V_RGB	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_ColorConvert_V_RGB(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_ColorConvert_V_RGBX	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_ColorConvert_V_RGBX(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_ColorConvert_Y_RGB	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_ColorConvert_Y_RGB(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_ColorConvert_Y_RGBX	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_ColorConvert_Y_RGBX(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_SampleWithConstBorder	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_SampleWithConstBorder(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_ScaleImage_U8_U8_Bilinear	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_ScaleImage_U8_U8_Bilinear(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_Threshold_U8_U8_Binary	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_Threshold_U8_U8_Binary(std::string& opencl_code)$/;"	f	file:
agoCodeGenOpenCL_Threshold_U8_U8_Range	ago/ago_kernel_api.cpp	/^static void agoCodeGenOpenCL_Threshold_U8_U8_Range(std::string& opencl_code)$/;"	f	file:
agoComputeImageValidRectangleOutputs	ago/ago_interface.cpp	/^vx_status agoComputeImageValidRectangleOutputs(AgoGraph * graph)$/;"	f
agoControlFpReset	ago/ago_platform.cpp	/^void agoControlFpReset(uint32_t state)$/;"	f
agoControlFpSetRoundEven	ago/ago_platform.cpp	/^uint32_t agoControlFpSetRoundEven()$/;"	f
agoCreateContextFromPlatform	ago/ago_interface.cpp	/^AgoContext * agoCreateContextFromPlatform(struct _vx_platform * platform)$/;"	f
agoCreateDataFromDescription	ago/ago_util.cpp	/^AgoData * agoCreateDataFromDescription(AgoContext * acontext, AgoGraph * agraph, const char * desc, bool isForExternalUse)$/;"	f
agoCreateGraph	ago/ago_interface.cpp	/^AgoGraph * agoCreateGraph(AgoContext * acontext)$/;"	f
agoCreateNode	ago/ago_util.cpp	/^AgoNode * agoCreateNode(AgoGraph * graph, AgoKernel * kernel)$/;"	f
agoCreateNode	ago/ago_util.cpp	/^AgoNode * agoCreateNode(AgoGraph * graph, vx_enum kernel_id)$/;"	f
agoDataSanityCheckAndUpdate	ago/ago_util.cpp	/^int agoDataSanityCheckAndUpdate(AgoData * data)$/;"	f
agoDataSyncFromGpuToCpu	ago/ago_interface.cpp	/^static int agoDataSyncFromGpuToCpu(AgoGraph * graph, AgoNode * node, AgoData * dataToSync)$/;"	f	file:
agoDirective	ago/ago_interface.cpp	/^vx_status agoDirective(vx_reference reference, vx_enum directive)$/;"	f
agoDramaDivideAbsdiffNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideAbsdiffNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideAccumulateNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideAccumulateNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideAccumulateSquareNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideAccumulateSquareNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideAccumulateWeightedNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideAccumulateWeightedNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideAddNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideAddNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideAddNodeCallback	ago/ago_drama_divide.cpp	/^vx_status VX_CALLBACK agoDramaDivideAddNodeCallback(vx_node node, vx_enum kernel_id, vx_reference * paramList, vx_uint32 paramCount)$/;"	f
agoDramaDivideAndNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideAndNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideAppend	ago/ago_drama_divide.cpp	/^int agoDramaDivideAppend(AgoNodeList * nodeList, AgoNode * anode, vx_enum new_kernel_id)$/;"	f
agoDramaDivideAppend	ago/ago_drama_divide.cpp	/^int agoDramaDivideAppend(AgoNodeList * nodeList, AgoNode * anode, vx_enum new_kernel_id, vx_reference * paramList, vx_uint32 paramCount)$/;"	f
agoDramaDivideBox3x3Node	ago/ago_drama_divide.cpp	/^int agoDramaDivideBox3x3Node(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideCannyEdgeDetectorNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideCannyEdgeDetectorNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideChannelCombineNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideChannelCombineNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideChannelExtractNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideChannelExtractNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideColorConvertNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideColorConvertNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideConvertDepthNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideConvertDepthNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideCopyNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideCopyNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideCustomConvolutionNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideCustomConvolutionNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideDilate3x3Node	ago/ago_drama_divide.cpp	/^int agoDramaDivideDilate3x3Node(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideEqualizeHistogramNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideEqualizeHistogramNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideErode3x3Node	ago/ago_drama_divide.cpp	/^int agoDramaDivideErode3x3Node(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideFastCornersNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideFastCornersNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideGaussian3x3Node	ago/ago_drama_divide.cpp	/^int agoDramaDivideGaussian3x3Node(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideGaussianPyramidNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideGaussianPyramidNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideHalfscaleGaussianNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideHalfscaleGaussianNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideHarrisCornersNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideHarrisCornersNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideHistogramNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideHistogramNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideIntegralImageNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideIntegralImageNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideMagnitudeNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideMagnitudeNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideMeanStddevNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideMeanStddevNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideMedian3x3Node	ago/ago_drama_divide.cpp	/^int agoDramaDivideMedian3x3Node(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideMinmaxlocNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideMinmaxlocNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideMultiplyNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideMultiplyNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideNotNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideNotNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideOpticalFlowPyrLkNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideOpticalFlowPyrLkNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideOrNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideOrNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDividePhaseNode	ago/ago_drama_divide.cpp	/^int agoDramaDividePhaseNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideRemapNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideRemapNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideScaleImageNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideScaleImageNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideSelectNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideSelectNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideSobel3x3Node	ago/ago_drama_divide.cpp	/^int agoDramaDivideSobel3x3Node(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideSubtractNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideSubtractNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideTableLookupNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideTableLookupNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideThresholdNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideThresholdNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideWarpAffineNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideWarpAffineNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideWarpPerspectiveNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideWarpPerspectiveNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoDramaDivideXorNode	ago/ago_drama_divide.cpp	/^int agoDramaDivideXorNode(AgoNodeList * nodeList, AgoNode * anode)$/;"	f
agoEmulateAmdMediaOpsInOpenCL	ago/ago_util_opencl.cpp	/^static void agoEmulateAmdMediaOpsInOpenCL(std::string& code)$/;"	f	file:
agoEnum2Name	ago/ago_util.cpp	/^const char * agoEnum2Name(vx_enum e)$/;"	f
agoEvaluateIntegerExpression	ago/ago_util.cpp	/^void agoEvaluateIntegerExpression(char * expr)$/;"	f
agoExecuteGraph	ago/ago_interface.cpp	/^int agoExecuteGraph(AgoGraph * graph)$/;"	f
agoFindDataByName	ago/ago_util.cpp	/^AgoData * agoFindDataByName(AgoContext * acontext, AgoGraph * agraph, vx_char * name)$/;"	f
agoFindKernelByEnum	ago/ago_util.cpp	/^AgoKernel * agoFindKernelByEnum(AgoContext * acontext, vx_enum kernel_id)$/;"	f
agoFindKernelByName	ago/ago_util.cpp	/^AgoKernel * agoFindKernelByName(AgoContext * acontext, const vx_char * name)$/;"	f
agoGenerateDataName	ago/ago_util.cpp	/^void agoGenerateDataName(AgoContext * acontext, const char * postfix, std::string& name_)$/;"	f
agoGenerateVirtualDataName	ago/ago_util.cpp	/^void agoGenerateVirtualDataName(AgoGraph * agraph, const char * postfix, std::string& name_)$/;"	f
agoGetClockCounter	ago/ago_platform.cpp	/^int64_t agoGetClockCounter()$/;"	f
agoGetClockFrequency	ago/ago_platform.cpp	/^int64_t agoGetClockFrequency()$/;"	f
agoGetDataFromDescription	ago/ago_util.cpp	/^int agoGetDataFromDescription(AgoContext * acontext, AgoGraph * agraph, AgoData * data, const char * desc)$/;"	f
agoGetDataFromTrace	ago/ago_util.cpp	/^AgoData * agoGetDataFromTrace(AgoData * data, int trace[], int traceCount)$/;"	f
agoGetDataName	ago/ago_util.cpp	/^void agoGetDataName(vx_char * name, AgoData * data)$/;"	f
agoGetDescriptionFromData	ago/ago_util.cpp	/^void agoGetDescriptionFromData(AgoContext * acontext, char * desc, AgoData * data)$/;"	f
agoGetEnvironmentVariable	ago/ago_platform.cpp	/^bool agoGetEnvironmentVariable(const char * name, char * value, size_t valueSize)$/;"	f
agoGetFunctionAddress	ago/ago_platform.cpp	/^void * agoGetFunctionAddress(ago_module module, const char * functionName)$/;"	f
agoGetImageComponentsAndPlanes	ago/ago_util.cpp	/^int agoGetImageComponentsAndPlanes(AgoContext * acontext, vx_df_image format, vx_size * pComponents, vx_size * pPlanes, vx_uint32 * pPixelSizeInBitsNum, vx_uint32 * pPixelSizeInBitsDenom, vx_color_space_e * pColorSpace, vx_channel_range_e * pChannelRange)$/;"	f
agoGetImagePlaneFormat	ago/ago_util.cpp	/^int agoGetImagePlaneFormat(AgoContext * acontext, vx_df_image format, vx_uint32 width, vx_uint32 height, vx_uint32 plane, vx_df_image *pFormat, vx_uint32 * pWidth, vx_uint32 * pHeight)$/;"	f
agoGetSiblingTraceToDelayForInit	ago/ago_util.cpp	/^AgoData * agoGetSiblingTraceToDelayForInit(AgoData * data, int trace[], int& traceCount)$/;"	f
agoGetSiblingTraceToDelayForUpdate	ago/ago_util.cpp	/^AgoData * agoGetSiblingTraceToDelayForUpdate(AgoData * data, int trace[], int& traceCount)$/;"	f
agoGetUserStructName	ago/ago_util.cpp	/^const char * agoGetUserStructName(AgoContext * acontext, vx_enum id)$/;"	f
agoGetUserStructSize	ago/ago_util.cpp	/^vx_size agoGetUserStructSize(AgoContext * acontext, vx_char * name)$/;"	f
agoGetUserStructSize	ago/ago_util.cpp	/^vx_size agoGetUserStructSize(AgoContext * acontext, vx_enum id)$/;"	f
agoGetUserStructType	ago/ago_util.cpp	/^vx_enum agoGetUserStructType(AgoContext * acontext, vx_char * name)$/;"	f
agoGpuGetKernelFunctionName	ago/ago_util_opencl.cpp	/^static const char * agoGpuGetKernelFunctionName(AgoNode * node)$/;"	f	file:
agoGpuImageFormat2RegType	ago/ago_util_opencl.cpp	/^static const char * agoGpuImageFormat2RegType(vx_df_image format)$/;"	f	file:
agoGpuOclAllocBuffer	ago/ago_util_opencl.cpp	/^int agoGpuOclAllocBuffer(AgoData * data)$/;"	f
agoGpuOclAllocBuffers	ago/ago_drama_alloc.cpp	/^int agoGpuOclAllocBuffers(AgoGraph * graph)$/;"	f
agoGpuOclCreateBuffer	ago/ago_util_opencl.cpp	/^static cl_mem agoGpuOclCreateBuffer(AgoContext * context, cl_mem_flags flags, size_t size, void * host_ptr, cl_int * errcode_ret)$/;"	f	file:
agoGpuOclCreateContext	ago/ago_util_opencl.cpp	/^int agoGpuOclCreateContext(AgoContext * context, cl_context opencl_context)$/;"	f
agoGpuOclCreateImage	ago/ago_util_opencl.cpp	/^static cl_mem agoGpuOclCreateImage(AgoContext * context, cl_mem_flags flags, const cl_image_format * image_format, const cl_image_desc * image_desc, void * host_ptr, cl_int * errcode_ret)$/;"	f	file:
agoGpuOclData2Decl	ago/ago_util_opencl.cpp	/^static std::string agoGpuOclData2Decl(AgoData * data, vx_uint32 index, vx_uint32 dataFlags, vx_uint32 group)$/;"	f	file:
agoGpuOclDataInputSync	ago/ago_util_opencl.cpp	/^static int agoGpuOclDataInputSync(AgoGraph * graph, cl_kernel opencl_kernel, vx_uint32& kernelArgIndex, AgoData * data, vx_uint32 dataFlags, vx_uint32 group, bool need_access, bool need_read_access, bool need_atomic_access)$/;"	f	file:
agoGpuOclDataOutputAtomicSync	ago/ago_util_opencl.cpp	/^static int agoGpuOclDataOutputAtomicSync(AgoGraph * graph, AgoData * data)$/;"	f	file:
agoGpuOclDataOutputMarkDirty	ago/ago_util_opencl.cpp	/^static int agoGpuOclDataOutputMarkDirty(AgoGraph * graph, AgoData * data, bool need_access, bool need_write_access)$/;"	f	file:
agoGpuOclDataSetBufferAsKernelArg	ago/ago_util_opencl.cpp	/^int agoGpuOclDataSetBufferAsKernelArg(AgoData * data, cl_kernel opencl_kernel, vx_uint32 kernelArgIndex, vx_uint32 group)$/;"	f
agoGpuOclReleaseContext	ago/ago_util_opencl.cpp	/^int agoGpuOclReleaseContext(AgoContext * context)$/;"	f
agoGpuOclReleaseData	ago/ago_util_opencl.cpp	/^int agoGpuOclReleaseData(AgoData * data)$/;"	f
agoGpuOclReleaseGraph	ago/ago_util_opencl.cpp	/^int agoGpuOclReleaseGraph(AgoGraph * graph)$/;"	f
agoGpuOclReleaseSuperNode	ago/ago_util_opencl.cpp	/^int agoGpuOclReleaseSuperNode(AgoSuperNode * supernode)$/;"	f
agoGpuOclSetKernelArgs	ago/ago_util_opencl.cpp	/^static int agoGpuOclSetKernelArgs(cl_kernel opencl_kernel, vx_uint32& kernelArgIndex, AgoData * data, bool need_access, vx_uint32 dataFlags, vx_uint32 group)$/;"	f	file:
agoGpuOclSingleNodeFinalize	ago/ago_util_opencl.cpp	/^int agoGpuOclSingleNodeFinalize(AgoGraph * graph, AgoNode * node)$/;"	f
agoGpuOclSingleNodeLaunch	ago/ago_util_opencl.cpp	/^int agoGpuOclSingleNodeLaunch(AgoGraph * graph, AgoNode * node)$/;"	f
agoGpuOclSingleNodeWait	ago/ago_util_opencl.cpp	/^int agoGpuOclSingleNodeWait(AgoGraph * graph, AgoNode * node)$/;"	f
agoGpuOclSuperNodeFinalize	ago/ago_util_opencl.cpp	/^int agoGpuOclSuperNodeFinalize(AgoGraph * graph, AgoSuperNode * supernode)$/;"	f
agoGpuOclSuperNodeLaunch	ago/ago_util_opencl.cpp	/^int agoGpuOclSuperNodeLaunch(AgoGraph * graph, AgoSuperNode * supernode)$/;"	f
agoGpuOclSuperNodeMerge	ago/ago_util_opencl.cpp	/^int agoGpuOclSuperNodeMerge(AgoGraph * graph, AgoSuperNode * supernode, AgoNode * node)$/;"	f
agoGpuOclSuperNodeUpdate	ago/ago_util_opencl.cpp	/^int agoGpuOclSuperNodeUpdate(AgoGraph * graph, AgoSuperNode * supernode)$/;"	f
agoGpuOclSuperNodeWait	ago/ago_util_opencl.cpp	/^int agoGpuOclSuperNodeWait(AgoGraph * graph, AgoSuperNode * supernode)$/;"	f
agoGraphDumpPerformanceProfile	ago/ago_interface.cpp	/^vx_status agoGraphDumpPerformanceProfile(AgoGraph * graph, const char * fileName)$/;"	f
agoGraphThreadFunction	ago/ago_interface.cpp	/^static DWORD WINAPI agoGraphThreadFunction(LPVOID graph_)$/;"	f	file:
agoImportNodeConfig	ago/ago_util.cpp	/^void agoImportNodeConfig(AgoNode * childnode, AgoNode * anode)$/;"	f
agoInitializeGraph	ago/ago_interface.cpp	/^int agoInitializeGraph(AgoGraph * graph)$/;"	f
agoInitializeImageComponentsAndPlanes	ago/ago_util.cpp	/^int agoInitializeImageComponentsAndPlanes(AgoContext * acontext)$/;"	f
agoIsCpuHardwareSupported	ago/ago_platform.cpp	/^bool agoIsCpuHardwareSupported()$/;"	f
agoIsPartOfDelay	ago/ago_util.cpp	/^bool agoIsPartOfDelay(AgoData * adata)$/;"	f
agoIsValidContext	ago/ago_util.cpp	/^bool agoIsValidContext(vx_context context)$/;"	f
agoIsValidData	ago/ago_util.cpp	/^bool agoIsValidData(AgoData * data, vx_enum type)$/;"	f
agoIsValidGraph	ago/ago_util.cpp	/^bool agoIsValidGraph(vx_graph graph)$/;"	f
agoIsValidKernel	ago/ago_util.cpp	/^bool agoIsValidKernel(vx_kernel kernel)$/;"	f
agoIsValidNode	ago/ago_util.cpp	/^bool agoIsValidNode(vx_node node)$/;"	f
agoIsValidParameter	ago/ago_util.cpp	/^bool agoIsValidParameter(vx_parameter parameter)$/;"	f
agoIsValidReference	ago/ago_util.cpp	/^bool agoIsValidReference(vx_reference ref)$/;"	f
agoKernel_AbsDiff_S16_S16S16_Sat	ago/ago_kernel_api.cpp	/^int agoKernel_AbsDiff_S16_S16S16_Sat(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_AbsDiff_U8_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_AbsDiff_U8_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_AccumulateSquared_S16_S16U8_Sat	ago/ago_kernel_api.cpp	/^int agoKernel_AccumulateSquared_S16_S16U8_Sat(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_AccumulateWeighted_U8_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_AccumulateWeighted_U8_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Accumulate_S16_S16U8_Sat	ago/ago_kernel_api.cpp	/^int agoKernel_Accumulate_S16_S16U8_Sat(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Add_S16_S16S16_Sat	ago/ago_kernel_api.cpp	/^int agoKernel_Add_S16_S16S16_Sat(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Add_S16_S16S16_Wrap	ago/ago_kernel_api.cpp	/^int agoKernel_Add_S16_S16S16_Wrap(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Add_S16_S16U8_Sat	ago/ago_kernel_api.cpp	/^int agoKernel_Add_S16_S16U8_Sat(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Add_S16_S16U8_Wrap	ago/ago_kernel_api.cpp	/^int agoKernel_Add_S16_S16U8_Wrap(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Add_S16_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_Add_S16_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Add_U8_U8U8_Sat	ago/ago_kernel_api.cpp	/^int agoKernel_Add_U8_U8U8_Sat(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Add_U8_U8U8_Wrap	ago/ago_kernel_api.cpp	/^int agoKernel_Add_U8_U8U8_Wrap(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_And_U1_U1U1	ago/ago_kernel_api.cpp	/^int agoKernel_And_U1_U1U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_And_U1_U1U8	ago/ago_kernel_api.cpp	/^int agoKernel_And_U1_U1U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_And_U1_U8U1	ago/ago_kernel_api.cpp	/^int agoKernel_And_U1_U8U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_And_U1_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_And_U1_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_And_U8_U1U1	ago/ago_kernel_api.cpp	/^int agoKernel_And_U8_U1U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_And_U8_U1U8	ago/ago_kernel_api.cpp	/^int agoKernel_And_U8_U1U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_And_U8_U8U1	ago/ago_kernel_api.cpp	/^int agoKernel_And_U8_U8U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_And_U8_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_And_U8_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Box_U8_U8_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_Box_U8_U8_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannyEdgeTrace_U8_U8	ago/ago_kernel_api.cpp	/^int agoKernel_CannyEdgeTrace_U8_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannyEdgeTrace_U8_U8XY	ago/ago_kernel_api.cpp	/^int agoKernel_CannyEdgeTrace_U8_U8XY(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobelSuppThreshold_U8XY_U8_3x3_L1NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobelSuppThreshold_U8XY_U8_3x3_L1NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobelSuppThreshold_U8XY_U8_3x3_L2NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobelSuppThreshold_U8XY_U8_3x3_L2NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobelSuppThreshold_U8XY_U8_5x5_L1NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobelSuppThreshold_U8XY_U8_5x5_L1NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobelSuppThreshold_U8XY_U8_5x5_L2NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobelSuppThreshold_U8XY_U8_5x5_L2NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobelSuppThreshold_U8XY_U8_7x7_L1NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobelSuppThreshold_U8XY_U8_7x7_L1NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobelSuppThreshold_U8XY_U8_7x7_L2NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobelSuppThreshold_U8XY_U8_7x7_L2NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobelSuppThreshold_U8_U8_3x3_L1NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobelSuppThreshold_U8_U8_3x3_L1NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobelSuppThreshold_U8_U8_3x3_L2NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobelSuppThreshold_U8_U8_3x3_L2NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobelSuppThreshold_U8_U8_5x5_L1NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobelSuppThreshold_U8_U8_5x5_L1NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobelSuppThreshold_U8_U8_5x5_L2NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobelSuppThreshold_U8_U8_5x5_L2NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobelSuppThreshold_U8_U8_7x7_L1NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobelSuppThreshold_U8_U8_7x7_L1NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobelSuppThreshold_U8_U8_7x7_L2NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobelSuppThreshold_U8_U8_7x7_L2NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobel_U16_U8_3x3_L1NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobel_U16_U8_3x3_L1NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobel_U16_U8_3x3_L2NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobel_U16_U8_3x3_L2NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobel_U16_U8_5x5_L1NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobel_U16_U8_5x5_L1NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobel_U16_U8_5x5_L2NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobel_U16_U8_5x5_L2NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobel_U16_U8_7x7_L1NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobel_U16_U8_7x7_L1NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySobel_U16_U8_7x7_L2NORM	ago/ago_kernel_api.cpp	/^int agoKernel_CannySobel_U16_U8_7x7_L2NORM(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySuppThreshold_U8XY_U16_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_CannySuppThreshold_U8XY_U16_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_CannySuppThreshold_U8_U16_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_CannySuppThreshold_U8_U16_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelCombine_U16_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelCombine_U16_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelCombine_U24_U8U8U8_RGB	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelCombine_U24_U8U8U8_RGB(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelCombine_U32_U8U8U8U8_RGBX	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelCombine_U32_U8U8U8U8_RGBX(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelCombine_U32_U8U8U8_UYVY	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelCombine_U32_U8U8U8_UYVY(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelCombine_U32_U8U8U8_YUYV	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelCombine_U32_U8U8U8_YUYV(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelCopy_U1_U1	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelCopy_U1_U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelCopy_U1_U8	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelCopy_U1_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelCopy_U8_U1	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelCopy_U8_U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelCopy_U8_U8	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelCopy_U8_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelExtract_U8U8U8U8_U32	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelExtract_U8U8U8U8_U32(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelExtract_U8U8U8_U24	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelExtract_U8U8U8_U24(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelExtract_U8U8U8_U32	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelExtract_U8U8U8_U32(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelExtract_U8_U16_Pos0	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelExtract_U8_U16_Pos0(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelExtract_U8_U16_Pos1	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelExtract_U8_U16_Pos1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelExtract_U8_U24_Pos0	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelExtract_U8_U24_Pos0(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelExtract_U8_U24_Pos1	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelExtract_U8_U24_Pos1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelExtract_U8_U24_Pos2	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelExtract_U8_U24_Pos2(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelExtract_U8_U32_Pos0	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelExtract_U8_U32_Pos0(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelExtract_U8_U32_Pos1	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelExtract_U8_U32_Pos1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelExtract_U8_U32_Pos2	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelExtract_U8_U32_Pos2(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ChannelExtract_U8_U32_Pos3	ago/ago_kernel_api.cpp	/^int agoKernel_ChannelExtract_U8_U32_Pos3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_IUV_RGB	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_IUV_RGB(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_IUV_RGBX	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_IUV_RGBX(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_IU_RGB	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_IU_RGB(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_IU_RGBX	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_IU_RGBX(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_IV_RGB	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_IV_RGB(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_IV_RGBX	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_IV_RGBX(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_IYUV_RGB	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_IYUV_RGB(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_IYUV_RGBX	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_IYUV_RGBX(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_NV12_RGB	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_NV12_RGB(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_NV12_RGBX	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_NV12_RGBX(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_RGBX_IYUV	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_RGBX_IYUV(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_RGBX_NV12	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_RGBX_NV12(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_RGBX_NV21	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_RGBX_NV21(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_RGBX_RGB	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_RGBX_RGB(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_RGBX_UYVY	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_RGBX_UYVY(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_RGBX_YUYV	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_RGBX_YUYV(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_RGB_IYUV	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_RGB_IYUV(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_RGB_NV12	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_RGB_NV12(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_RGB_NV21	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_RGB_NV21(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_RGB_RGBX	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_RGB_RGBX(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_RGB_UYVY	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_RGB_UYVY(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_RGB_YUYV	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_RGB_YUYV(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_UV12_RGB	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_UV12_RGB(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_UV12_RGBX	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_UV12_RGBX(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_U_RGB	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_U_RGB(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_U_RGBX	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_U_RGBX(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_V_RGB	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_V_RGB(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_V_RGBX	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_V_RGBX(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_YUV4_RGB	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_YUV4_RGB(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_YUV4_RGBX	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_YUV4_RGBX(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_Y_RGB	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_Y_RGB(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorConvert_Y_RGBX	ago/ago_kernel_api.cpp	/^int agoKernel_ColorConvert_Y_RGBX(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorDepth_S16_U8	ago/ago_kernel_api.cpp	/^int agoKernel_ColorDepth_S16_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorDepth_U8_S16_Sat	ago/ago_kernel_api.cpp	/^int agoKernel_ColorDepth_U8_S16_Sat(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ColorDepth_U8_S16_Wrap	ago/ago_kernel_api.cpp	/^int agoKernel_ColorDepth_U8_S16_Wrap(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Convolve_S16_U8	ago/ago_kernel_api.cpp	/^int agoKernel_Convolve_S16_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Convolve_U8_U8	ago/ago_kernel_api.cpp	/^int agoKernel_Convolve_U8_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Copy_DATA_DATA	ago/ago_kernel_api.cpp	/^int agoKernel_Copy_DATA_DATA(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Dilate_U1_U1_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_Dilate_U1_U1_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Dilate_U1_U8_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_Dilate_U1_U8_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Dilate_U8_U1_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_Dilate_U8_U1_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Dilate_U8_U8_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_Dilate_U8_U8_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Equalize_DATA_DATA	ago/ago_kernel_api.cpp	/^int agoKernel_Equalize_DATA_DATA(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Erode_U1_U1_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_Erode_U1_U1_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Erode_U1_U8_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_Erode_U1_U8_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Erode_U8_U1_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_Erode_U8_U1_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Erode_U8_U8_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_Erode_U8_U8_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_FastCornerMerge_XY_XY	ago/ago_kernel_api.cpp	/^int agoKernel_FastCornerMerge_XY_XY(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_FastCorners_XY_U8_NoSupression	ago/ago_kernel_api.cpp	/^int agoKernel_FastCorners_XY_U8_NoSupression(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_FastCorners_XY_U8_Supression	ago/ago_kernel_api.cpp	/^int agoKernel_FastCorners_XY_U8_Supression(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_FormatConvert_IUV_UV12	ago/ago_kernel_api.cpp	/^int agoKernel_FormatConvert_IUV_UV12(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_FormatConvert_IYUV_UYVY	ago/ago_kernel_api.cpp	/^int agoKernel_FormatConvert_IYUV_UYVY(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_FormatConvert_IYUV_YUYV	ago/ago_kernel_api.cpp	/^int agoKernel_FormatConvert_IYUV_YUYV(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_FormatConvert_NV12_UYVY	ago/ago_kernel_api.cpp	/^int agoKernel_FormatConvert_NV12_UYVY(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_FormatConvert_NV12_YUYV	ago/ago_kernel_api.cpp	/^int agoKernel_FormatConvert_NV12_YUYV(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_FormatConvert_UV12_IUV	ago/ago_kernel_api.cpp	/^int agoKernel_FormatConvert_UV12_IUV(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_FormatConvert_UV_UV12	ago/ago_kernel_api.cpp	/^int agoKernel_FormatConvert_UV_UV12(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Gaussian_U8_U8_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_Gaussian_U8_U8_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_HarrisMergeSortAndPick_XY_HVC	ago/ago_kernel_api.cpp	/^int agoKernel_HarrisMergeSortAndPick_XY_HVC(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_HarrisMergeSortAndPick_XY_XYS	ago/ago_kernel_api.cpp	/^int agoKernel_HarrisMergeSortAndPick_XY_XYS(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_HarrisScore_HVC_HG3_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_HarrisScore_HVC_HG3_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_HarrisScore_HVC_HG3_5x5	ago/ago_kernel_api.cpp	/^int agoKernel_HarrisScore_HVC_HG3_5x5(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_HarrisScore_HVC_HG3_7x7	ago/ago_kernel_api.cpp	/^int agoKernel_HarrisScore_HVC_HG3_7x7(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_HarrisSobel_HG3_U8_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_HarrisSobel_HG3_U8_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_HarrisSobel_HG3_U8_5x5	ago/ago_kernel_api.cpp	/^int agoKernel_HarrisSobel_HG3_U8_5x5(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_HarrisSobel_HG3_U8_7x7	ago/ago_kernel_api.cpp	/^int agoKernel_HarrisSobel_HG3_U8_7x7(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_HistogramMerge_DATA_DATA	ago/ago_kernel_api.cpp	/^int agoKernel_HistogramMerge_DATA_DATA(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Histogram_DATA_U8	ago/ago_kernel_api.cpp	/^int agoKernel_Histogram_DATA_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_IntegralImage_U32_U8	ago/ago_kernel_api.cpp	/^int agoKernel_IntegralImage_U32_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_LinearFilter_ANY_ANY	ago/ago_kernel_api.cpp	/^int agoKernel_LinearFilter_ANY_ANY(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_LinearFilter_ANYx2_ANY	ago/ago_kernel_api.cpp	/^int agoKernel_LinearFilter_ANYx2_ANY(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Lut_U8_U8	ago/ago_kernel_api.cpp	/^int agoKernel_Lut_U8_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Magnitude_S16_S16S16	ago/ago_kernel_api.cpp	/^int agoKernel_Magnitude_S16_S16S16(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MeanStdDevMerge_DATA_DATA	ago/ago_kernel_api.cpp	/^int agoKernel_MeanStdDevMerge_DATA_DATA(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MeanStdDev_DATA_U8	ago/ago_kernel_api.cpp	/^int agoKernel_MeanStdDev_DATA_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Median_U8_U8_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_Median_U8_U8_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLocMerge_DATA_DATA	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLocMerge_DATA_DATA(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_S16DATA_Loc_Max_Count_Max	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_S16DATA_Loc_Max_Count_Max(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_S16DATA_Loc_Max_Count_MinMax	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_S16DATA_Loc_Max_Count_MinMax(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_S16DATA_Loc_MinMax_Count_MinMax	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_S16DATA_Loc_MinMax_Count_MinMax(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_S16DATA_Loc_Min_Count_Min	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_S16DATA_Loc_Min_Count_Min(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_S16DATA_Loc_Min_Count_MinMax	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_S16DATA_Loc_Min_Count_MinMax(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_S16DATA_Loc_None_Count_Max	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_S16DATA_Loc_None_Count_Max(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_S16DATA_Loc_None_Count_Min	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_S16DATA_Loc_None_Count_Min(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_S16DATA_Loc_None_Count_MinMax	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_S16DATA_Loc_None_Count_MinMax(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_U8DATA_Loc_Max_Count_Max	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_U8DATA_Loc_Max_Count_Max(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_U8DATA_Loc_Max_Count_MinMax	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_U8DATA_Loc_Max_Count_MinMax(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_U8DATA_Loc_MinMax_Count_MinMax	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_U8DATA_Loc_MinMax_Count_MinMax(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_U8DATA_Loc_Min_Count_Min	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_U8DATA_Loc_Min_Count_Min(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_U8DATA_Loc_Min_Count_MinMax	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_U8DATA_Loc_Min_Count_MinMax(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_U8DATA_Loc_None_Count_Max	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_U8DATA_Loc_None_Count_Max(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_U8DATA_Loc_None_Count_Min	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_U8DATA_Loc_None_Count_Min(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxLoc_DATA_U8DATA_Loc_None_Count_MinMax	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxLoc_DATA_U8DATA_Loc_None_Count_MinMax(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMaxMerge_DATA_DATA	ago/ago_kernel_api.cpp	/^int agoKernel_MinMaxMerge_DATA_DATA(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMax_DATA_S16	ago/ago_kernel_api.cpp	/^int agoKernel_MinMax_DATA_S16(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_MinMax_DATA_U8	ago/ago_kernel_api.cpp	/^int agoKernel_MinMax_DATA_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_S16_S16S16_Sat_Round	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_S16_S16S16_Sat_Round(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_S16_S16S16_Sat_Trunc	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_S16_S16S16_Sat_Trunc(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_S16_S16S16_Wrap_Round	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_S16_S16S16_Wrap_Round(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_S16_S16S16_Wrap_Trunc	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_S16_S16S16_Wrap_Trunc(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_S16_S16U8_Sat_Round	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_S16_S16U8_Sat_Round(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_S16_S16U8_Sat_Trunc	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_S16_S16U8_Sat_Trunc(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_S16_S16U8_Wrap_Round	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_S16_S16U8_Wrap_Round(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_S16_S16U8_Wrap_Trunc	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_S16_S16U8_Wrap_Trunc(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_S16_U8U8_Sat_Round	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_S16_U8U8_Sat_Round(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_S16_U8U8_Sat_Trunc	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_S16_U8U8_Sat_Trunc(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_S16_U8U8_Wrap_Round	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_S16_U8U8_Wrap_Round(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_S16_U8U8_Wrap_Trunc	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_S16_U8U8_Wrap_Trunc(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_U24_U24U8_Sat_Round	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_U24_U24U8_Sat_Round(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_U32_U32U8_Sat_Round	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_U32_U32U8_Sat_Round(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_U8_U8U8_Sat_Round	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_U8_U8U8_Sat_Round(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_U8_U8U8_Sat_Trunc	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_U8_U8U8_Sat_Trunc(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_U8_U8U8_Wrap_Round	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_U8_U8U8_Wrap_Round(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Mul_U8_U8U8_Wrap_Trunc	ago/ago_kernel_api.cpp	/^int agoKernel_Mul_U8_U8U8_Wrap_Trunc(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nand_U1_U1U1	ago/ago_kernel_api.cpp	/^int agoKernel_Nand_U1_U1U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nand_U1_U1U8	ago/ago_kernel_api.cpp	/^int agoKernel_Nand_U1_U1U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nand_U1_U8U1	ago/ago_kernel_api.cpp	/^int agoKernel_Nand_U1_U8U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nand_U1_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_Nand_U1_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nand_U8_U1U1	ago/ago_kernel_api.cpp	/^int agoKernel_Nand_U8_U1U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nand_U8_U1U8	ago/ago_kernel_api.cpp	/^int agoKernel_Nand_U8_U1U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nand_U8_U8U1	ago/ago_kernel_api.cpp	/^int agoKernel_Nand_U8_U8U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nand_U8_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_Nand_U8_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_NonMaxSupp_XY_ANY_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_NonMaxSupp_XY_ANY_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nor_U1_U1U1	ago/ago_kernel_api.cpp	/^int agoKernel_Nor_U1_U1U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nor_U1_U1U8	ago/ago_kernel_api.cpp	/^int agoKernel_Nor_U1_U1U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nor_U1_U8U1	ago/ago_kernel_api.cpp	/^int agoKernel_Nor_U1_U8U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nor_U1_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_Nor_U1_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nor_U8_U1U1	ago/ago_kernel_api.cpp	/^int agoKernel_Nor_U8_U1U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nor_U8_U1U8	ago/ago_kernel_api.cpp	/^int agoKernel_Nor_U8_U1U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nor_U8_U8U1	ago/ago_kernel_api.cpp	/^int agoKernel_Nor_U8_U8U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Nor_U8_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_Nor_U8_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Not_U1_U1	ago/ago_kernel_api.cpp	/^int agoKernel_Not_U1_U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Not_U1_U8	ago/ago_kernel_api.cpp	/^int agoKernel_Not_U1_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Not_U8_U1	ago/ago_kernel_api.cpp	/^int agoKernel_Not_U8_U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Not_U8_U8	ago/ago_kernel_api.cpp	/^int agoKernel_Not_U8_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_OpticalFlowFinalLK_XY_XY	ago/ago_kernel_api.cpp	/^int agoKernel_OpticalFlowFinalLK_XY_XY(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_OpticalFlowImageLK_XY_XY	ago/ago_kernel_api.cpp	/^int agoKernel_OpticalFlowImageLK_XY_XY(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_OpticalFlowPrepareLK_XY_XY	ago/ago_kernel_api.cpp	/^int agoKernel_OpticalFlowPrepareLK_XY_XY(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_OpticalFlowPyrLK_XY_XY	ago/ago_kernel_api.cpp	/^int agoKernel_OpticalFlowPyrLK_XY_XY(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Or_U1_U1U1	ago/ago_kernel_api.cpp	/^int agoKernel_Or_U1_U1U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Or_U1_U1U8	ago/ago_kernel_api.cpp	/^int agoKernel_Or_U1_U1U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Or_U1_U8U1	ago/ago_kernel_api.cpp	/^int agoKernel_Or_U1_U8U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Or_U1_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_Or_U1_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Or_U8_U1U1	ago/ago_kernel_api.cpp	/^int agoKernel_Or_U8_U1U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Or_U8_U1U8	ago/ago_kernel_api.cpp	/^int agoKernel_Or_U8_U1U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Or_U8_U8U1	ago/ago_kernel_api.cpp	/^int agoKernel_Or_U8_U8U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Or_U8_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_Or_U8_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Phase_U8_S16S16	ago/ago_kernel_api.cpp	/^int agoKernel_Phase_U8_S16S16(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Remap_U24_U24_Bilinear	ago/ago_kernel_api.cpp	/^int agoKernel_Remap_U24_U24_Bilinear(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Remap_U24_U32_Bilinear	ago/ago_kernel_api.cpp	/^int agoKernel_Remap_U24_U32_Bilinear(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Remap_U32_U32_Bilinear	ago/ago_kernel_api.cpp	/^int agoKernel_Remap_U32_U32_Bilinear(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Remap_U8_U8_Bilinear	ago/ago_kernel_api.cpp	/^int agoKernel_Remap_U8_U8_Bilinear(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Remap_U8_U8_Bilinear_Constant	ago/ago_kernel_api.cpp	/^int agoKernel_Remap_U8_U8_Bilinear_Constant(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Remap_U8_U8_Nearest	ago/ago_kernel_api.cpp	/^int agoKernel_Remap_U8_U8_Nearest(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Remap_U8_U8_Nearest_Constant	ago/ago_kernel_api.cpp	/^int agoKernel_Remap_U8_U8_Nearest_Constant(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ScaleGaussianHalf_U8_U8_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_ScaleGaussianHalf_U8_U8_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ScaleGaussianHalf_U8_U8_5x5	ago/ago_kernel_api.cpp	/^int agoKernel_ScaleGaussianHalf_U8_U8_5x5(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ScaleGaussianOrb_U8_U8_5x5	ago/ago_kernel_api.cpp	/^int agoKernel_ScaleGaussianOrb_U8_U8_5x5(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ScaleImage_U8_U8_Area	ago/ago_kernel_api.cpp	/^int agoKernel_ScaleImage_U8_U8_Area(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ScaleImage_U8_U8_Bilinear	ago/ago_kernel_api.cpp	/^int agoKernel_ScaleImage_U8_U8_Bilinear(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ScaleImage_U8_U8_Bilinear_Constant	ago/ago_kernel_api.cpp	/^int agoKernel_ScaleImage_U8_U8_Bilinear_Constant(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ScaleImage_U8_U8_Bilinear_Replicate	ago/ago_kernel_api.cpp	/^int agoKernel_ScaleImage_U8_U8_Bilinear_Replicate(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ScaleImage_U8_U8_Nearest	ago/ago_kernel_api.cpp	/^int agoKernel_ScaleImage_U8_U8_Nearest(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ScaleUp2x2_U8_U8	ago/ago_kernel_api.cpp	/^int agoKernel_ScaleUp2x2_U8_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Select_DATA_DATA_DATA	ago/ago_kernel_api.cpp	/^int agoKernel_Select_DATA_DATA_DATA(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Set00_U8	ago/ago_kernel_api.cpp	/^int agoKernel_Set00_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_SetFF_U8	ago/ago_kernel_api.cpp	/^int agoKernel_SetFF_U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_SobelMagnitudePhase_S16U8_U8_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_SobelMagnitudePhase_S16U8_U8_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_SobelMagnitude_S16_U8_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_SobelMagnitude_S16_U8_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_SobelPhase_U8_U8_3x3	ago/ago_kernel_api.cpp	/^int agoKernel_SobelPhase_U8_U8_3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Sobel_S16S16_U8_3x3_GXY	ago/ago_kernel_api.cpp	/^int agoKernel_Sobel_S16S16_U8_3x3_GXY(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Sobel_S16_U8_3x3_GX	ago/ago_kernel_api.cpp	/^int agoKernel_Sobel_S16_U8_3x3_GX(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Sobel_S16_U8_3x3_GY	ago/ago_kernel_api.cpp	/^int agoKernel_Sobel_S16_U8_3x3_GY(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Sub_S16_S16S16_Sat	ago/ago_kernel_api.cpp	/^int agoKernel_Sub_S16_S16S16_Sat(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Sub_S16_S16S16_Wrap	ago/ago_kernel_api.cpp	/^int agoKernel_Sub_S16_S16S16_Wrap(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Sub_S16_S16U8_Sat	ago/ago_kernel_api.cpp	/^int agoKernel_Sub_S16_S16U8_Sat(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Sub_S16_S16U8_Wrap	ago/ago_kernel_api.cpp	/^int agoKernel_Sub_S16_S16U8_Wrap(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Sub_S16_U8S16_Sat	ago/ago_kernel_api.cpp	/^int agoKernel_Sub_S16_U8S16_Sat(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Sub_S16_U8S16_Wrap	ago/ago_kernel_api.cpp	/^int agoKernel_Sub_S16_U8S16_Wrap(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Sub_S16_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_Sub_S16_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Sub_U8_U8U8_Sat	ago/ago_kernel_api.cpp	/^int agoKernel_Sub_U8_U8U8_Sat(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Sub_U8_U8U8_Wrap	ago/ago_kernel_api.cpp	/^int agoKernel_Sub_U8_U8U8_Wrap(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ThresholdNot_U1_U8_Binary	ago/ago_kernel_api.cpp	/^int agoKernel_ThresholdNot_U1_U8_Binary(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ThresholdNot_U1_U8_Range	ago/ago_kernel_api.cpp	/^int agoKernel_ThresholdNot_U1_U8_Range(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ThresholdNot_U8_U8_Binary	ago/ago_kernel_api.cpp	/^int agoKernel_ThresholdNot_U8_U8_Binary(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_ThresholdNot_U8_U8_Range	ago/ago_kernel_api.cpp	/^int agoKernel_ThresholdNot_U8_U8_Range(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Threshold_U1_U8_Binary	ago/ago_kernel_api.cpp	/^int agoKernel_Threshold_U1_U8_Binary(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Threshold_U1_U8_Range	ago/ago_kernel_api.cpp	/^int agoKernel_Threshold_U1_U8_Range(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Threshold_U8_U8_Binary	ago/ago_kernel_api.cpp	/^int agoKernel_Threshold_U8_U8_Binary(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Threshold_U8_U8_Range	ago/ago_kernel_api.cpp	/^int agoKernel_Threshold_U8_U8_Range(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_WarpAffine_U8_U8_Bilinear	ago/ago_kernel_api.cpp	/^int agoKernel_WarpAffine_U8_U8_Bilinear(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_WarpAffine_U8_U8_Bilinear_Constant	ago/ago_kernel_api.cpp	/^int agoKernel_WarpAffine_U8_U8_Bilinear_Constant(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_WarpAffine_U8_U8_Nearest	ago/ago_kernel_api.cpp	/^int agoKernel_WarpAffine_U8_U8_Nearest(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_WarpAffine_U8_U8_Nearest_Constant	ago/ago_kernel_api.cpp	/^int agoKernel_WarpAffine_U8_U8_Nearest_Constant(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_WarpPerspective_U8_U8_Bilinear	ago/ago_kernel_api.cpp	/^int agoKernel_WarpPerspective_U8_U8_Bilinear(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_WarpPerspective_U8_U8_Bilinear_Constant	ago/ago_kernel_api.cpp	/^int agoKernel_WarpPerspective_U8_U8_Bilinear_Constant(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_WarpPerspective_U8_U8_Nearest	ago/ago_kernel_api.cpp	/^int agoKernel_WarpPerspective_U8_U8_Nearest(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_WarpPerspective_U8_U8_Nearest_Constant	ago/ago_kernel_api.cpp	/^int agoKernel_WarpPerspective_U8_U8_Nearest_Constant(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xnor_U1_U1U1	ago/ago_kernel_api.cpp	/^int agoKernel_Xnor_U1_U1U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xnor_U1_U1U8	ago/ago_kernel_api.cpp	/^int agoKernel_Xnor_U1_U1U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xnor_U1_U8U1	ago/ago_kernel_api.cpp	/^int agoKernel_Xnor_U1_U8U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xnor_U1_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_Xnor_U1_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xnor_U8_U1U1	ago/ago_kernel_api.cpp	/^int agoKernel_Xnor_U8_U1U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xnor_U8_U1U8	ago/ago_kernel_api.cpp	/^int agoKernel_Xnor_U8_U1U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xnor_U8_U8U1	ago/ago_kernel_api.cpp	/^int agoKernel_Xnor_U8_U8U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xnor_U8_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_Xnor_U8_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xor_U1_U1U1	ago/ago_kernel_api.cpp	/^int agoKernel_Xor_U1_U1U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xor_U1_U1U8	ago/ago_kernel_api.cpp	/^int agoKernel_Xor_U1_U1U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xor_U1_U8U1	ago/ago_kernel_api.cpp	/^int agoKernel_Xor_U1_U8U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xor_U1_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_Xor_U1_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xor_U8_U1U1	ago/ago_kernel_api.cpp	/^int agoKernel_Xor_U8_U1U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xor_U8_U1U8	ago/ago_kernel_api.cpp	/^int agoKernel_Xor_U8_U1U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xor_U8_U8U1	ago/ago_kernel_api.cpp	/^int agoKernel_Xor_U8_U8U1(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoKernel_Xor_U8_U8U8	ago/ago_kernel_api.cpp	/^int agoKernel_Xor_U8_U8U8(AgoNode * node, AgoKernelCommand cmd)$/;"	f
agoLoadModule	ago/ago_interface.cpp	/^int agoLoadModule(AgoContext * context, const char * module)$/;"	f
agoLockGlobalContext	ago/ago_util.cpp	/^void agoLockGlobalContext()$/;"	f
agoMarkChildrenAsPartOfDelay	ago/ago_util.cpp	/^void agoMarkChildrenAsPartOfDelay(AgoData * adata)$/;"	f
agoName2Enum	ago/ago_util.cpp	/^vx_enum agoName2Enum(const char * name)$/;"	f
agoOpenModule	ago/ago_platform.cpp	/^ago_module agoOpenModule(const char * libFileName)$/;"	f
agoOptimizeDrama	ago/ago_drama.cpp	/^int agoOptimizeDrama(AgoGraph * agraph)$/;"	f
agoOptimizeDramaAlloc	ago/ago_drama_alloc.cpp	/^int agoOptimizeDramaAlloc(AgoGraph * agraph)$/;"	f
agoOptimizeDramaAllocGpuResources	ago/ago_drama_alloc.cpp	/^static int agoOptimizeDramaAllocGpuResources(AgoGraph * graph)$/;"	f	file:
agoOptimizeDramaAllocMergeSuperNodes	ago/ago_drama_alloc.cpp	/^static int agoOptimizeDramaAllocMergeSuperNodes(AgoGraph * graph)$/;"	f	file:
agoOptimizeDramaAllocRemoveUnusedData	ago/ago_drama_alloc.cpp	/^static int agoOptimizeDramaAllocRemoveUnusedData(AgoGraph * agraph)$/;"	f	file:
agoOptimizeDramaAllocSetDefaultTargets	ago/ago_drama_alloc.cpp	/^static int agoOptimizeDramaAllocSetDefaultTargets(AgoGraph * agraph)$/;"	f	file:
agoOptimizeDramaAnalyze	ago/ago_drama_analyze.cpp	/^int agoOptimizeDramaAnalyze(AgoGraph * agraph)$/;"	f
agoOptimizeDramaCheckArgs	ago/ago_drama.cpp	/^int agoOptimizeDramaCheckArgs(AgoGraph * agraph)$/;"	f
agoOptimizeDramaComputeGraphHierarchy	ago/ago_drama.cpp	/^int agoOptimizeDramaComputeGraphHierarchy(AgoGraph * graph)$/;"	f
agoOptimizeDramaDivide	ago/ago_drama_divide.cpp	/^int agoOptimizeDramaDivide(AgoGraph * agraph)$/;"	f
agoOptimizeDramaGetDataUsageOfROI	ago/ago_drama.cpp	/^void agoOptimizeDramaGetDataUsageOfROI(AgoGraph * agraph, AgoData * roiMasterImage, vx_uint32& inputUsageCount, vx_uint32& outputUsageCount, vx_uint32& inoutUsageCount)$/;"	f
agoOptimizeDramaMarkDataUsage	ago/ago_drama.cpp	/^void agoOptimizeDramaMarkDataUsage(AgoGraph * agraph)$/;"	f
agoOptimizeDramaMarkDataUsageOfROI	ago/ago_drama.cpp	/^void agoOptimizeDramaMarkDataUsageOfROI(AgoGraph * agraph, AgoData * roiMasterImage, vx_uint32 inputUsageCount, vx_uint32 outputUsageCount, vx_uint32 inoutUsageCount)$/;"	f
agoOptimizeDramaMerge	ago/ago_drama_merge.cpp	/^int agoOptimizeDramaMerge(AgoGraph * agraph)$/;"	f
agoOptimizeDramaRemove	ago/ago_drama_remove.cpp	/^int agoOptimizeDramaRemove(AgoGraph * agraph)$/;"	f
agoOptimizeDramaRemoveCopyNodes	ago/ago_drama_remove.cpp	/^int agoOptimizeDramaRemoveCopyNodes(AgoGraph * agraph)$/;"	f
agoOptimizeDramaRemoveImageU8toU1	ago/ago_drama_remove.cpp	/^int agoOptimizeDramaRemoveImageU8toU1(AgoGraph * agraph)$/;"	f
agoOptimizeDramaRemoveNodeMerge	ago/ago_drama_remove.cpp	/^int agoOptimizeDramaRemoveNodeMerge(AgoGraph * agraph)$/;"	f
agoOptimizeDramaRemoveNodesWithUnusedOutputs	ago/ago_drama_remove.cpp	/^int agoOptimizeDramaRemoveNodesWithUnusedOutputs(AgoGraph * agraph)$/;"	f
agoOptimizeDramaSortGraphHierarchy	ago/ago_drama.cpp	/^void agoOptimizeDramaSortGraphHierarchy(AgoGraph * graph)$/;"	f
agoOptimizeGraph	ago/ago_interface.cpp	/^int agoOptimizeGraph(AgoGraph * agraph)$/;"	f
agoParseListFromDescription	ago/ago_util.cpp	/^int agoParseListFromDescription(const char *& desc, vx_size num_dims, vx_size * dims)$/;"	f
agoParseValueFromDescription	ago/ago_util.cpp	/^int agoParseValueFromDescription(const char *& desc, vx_size& value)$/;"	f
agoParseValueFromDescription	ago/ago_util.cpp	/^int agoParseValueFromDescription(const char *& desc, vx_uint32& value)$/;"	f
agoParseWordFromDescription	ago/ago_util.cpp	/^int agoParseWordFromDescription(const char *& desc, vx_size size, char * word)$/;"	f
agoPerfCaptureReset	ago/ago_util.cpp	/^void agoPerfCaptureReset(vx_perf_t * perf)$/;"	f
agoPerfCaptureStart	ago/ago_util.cpp	/^void agoPerfCaptureStart(vx_perf_t * perf)$/;"	f
agoPerfCaptureStop	ago/ago_util.cpp	/^void agoPerfCaptureStop(vx_perf_t * perf)$/;"	f
agoPerfCopyNormalize	ago/ago_util.cpp	/^void agoPerfCopyNormalize(AgoContext * context, vx_perf_t * perfDst, vx_perf_t * perfSrc)$/;"	f
agoPerfProfileEntry	ago/ago_util.cpp	/^void agoPerfProfileEntry(AgoGraph * graph, AgoProfileEntryType type, vx_reference ref)$/;"	f
agoPrepareImageValidRectangleBuffers	ago/ago_interface.cpp	/^vx_status agoPrepareImageValidRectangleBuffers(AgoGraph * graph)$/;"	f
agoProcessGraph	ago/ago_interface.cpp	/^int agoProcessGraph(AgoGraph * graph)$/;"	f
agoPublishKernels	ago/ago_kernel_list.cpp	/^int agoPublishKernels(AgoContext * acontext)$/;"	f
agoReadGraph	ago/ago_interface.cpp	/^int agoReadGraph(AgoGraph * agraph, AgoReference * * ref, int num_ref, ago_data_registry_callback_f callback_f, void * callback_obj, FILE * fp, vx_int32 dumpToConsole)$/;"	f
agoReadGraphFromString	ago/ago_interface.cpp	/^int agoReadGraphFromString(AgoGraph * agraph, AgoReference * * ref, int num_ref, ago_data_registry_callback_f callback_f, void * callback_obj, char * str, vx_int32 dumpToConsole)$/;"	f
agoReadGraphFromStringInternal	ago/ago_interface.cpp	/^static void agoReadGraphFromStringInternal(AgoGraph * agraph, AgoReference * * ref, int num_ref, ago_data_registry_callback_f callback_f, void * callback_obj, const char * str, vx_int32 dumpToConsole, std::vector< std::pair< std::string, std::string > >& vars, std::string localPrefix)$/;"	f	file:
agoReadLine	ago/ago_interface.cpp	/^static const char * agoReadLine(char * line, int size, const char * str)$/;"	f	file:
agoRegisterLogCallback	ago/ago_util.cpp	/^void agoRegisterLogCallback(vx_context context, vx_log_callback_f callback, vx_bool reentrant)$/;"	f
agoReleaseContext	ago/ago_interface.cpp	/^int agoReleaseContext(AgoContext * acontext)$/;"	f
agoReleaseData	ago/ago_util.cpp	/^int agoReleaseData(AgoData * data, bool isForExternalUse)$/;"	f
agoReleaseGraph	ago/ago_interface.cpp	/^int agoReleaseGraph(AgoGraph * agraph)$/;"	f
agoReleaseKernel	ago/ago_util.cpp	/^int agoReleaseKernel(AgoKernel * kernel, bool isForExternalUse)$/;"	f
agoReleaseMemory	ago/ago_util.cpp	/^void agoReleaseMemory(void * mem)$/;"	f
agoReleaseNode	ago/ago_util.cpp	/^int agoReleaseNode(AgoNode * node)$/;"	f
agoRemoveData	ago/ago_util.cpp	/^int agoRemoveData(AgoDataList * list, AgoData * item, AgoData ** trash)$/;"	f
agoRemoveDataInGraph	ago/ago_util.cpp	/^void agoRemoveDataInGraph(AgoGraph * agraph, AgoData * adata)$/;"	f
agoRemoveDataTree	ago/ago_util.cpp	/^int agoRemoveDataTree(AgoDataList * list, AgoData * item, AgoData ** trash)$/;"	f
agoRemoveGraph	ago/ago_util.cpp	/^AgoGraph * agoRemoveGraph(AgoGraphList * list, AgoGraph * item)$/;"	f
agoRemoveKernel	ago/ago_util.cpp	/^AgoKernel * agoRemoveKernel(AgoKernelList * list, AgoKernel * item)$/;"	f
agoRemoveNode	ago/ago_util.cpp	/^int agoRemoveNode(AgoNodeList * list, AgoNode * item, bool moveToTrash)$/;"	f
agoReplaceDataInGraph	ago/ago_util.cpp	/^void agoReplaceDataInGraph(AgoGraph * agraph, AgoData * dataFind, AgoData * dataReplace)$/;"	f
agoResetDataList	ago/ago_util.cpp	/^void agoResetDataList(AgoDataList * dataList)$/;"	f
agoResetKernelList	ago/ago_util.cpp	/^void agoResetKernelList(AgoKernelList * kernelList)$/;"	f
agoResetNodeList	ago/ago_util.cpp	/^void agoResetNodeList(AgoNodeList * nodeList)$/;"	f
agoResetReference	ago/ago_util.cpp	/^void agoResetReference(AgoReference * ref, vx_enum type, vx_context context, vx_reference scope)$/;"	f
agoResetSuperNodeList	ago/ago_util.cpp	/^static void agoResetSuperNodeList(AgoSuperNode * supernodeList)$/;"	f	file:
agoRetainData	ago/ago_util.cpp	/^void agoRetainData(AgoGraph * graph, AgoData * data, bool isForExternalUse)$/;"	f
agoRetainMemory	ago/ago_util.cpp	/^void agoRetainMemory(void * mem)$/;"	f
agoScheduleGraph	ago/ago_interface.cpp	/^int agoScheduleGraph(AgoGraph * graph)$/;"	f
agoSetDataHierarchicalLevel	ago/ago_drama.cpp	/^static int agoSetDataHierarchicalLevel(AgoData * data, vx_uint32 hierarchical_level)$/;"	f	file:
agoSetImageComponentsAndPlanes	ago/ago_util.cpp	/^int agoSetImageComponentsAndPlanes(AgoContext * acontext, vx_df_image format, vx_size components, vx_size planes, vx_uint32 pixelSizeInBitsNum, vx_uint32 pixelSizeInBitsDenom, vx_color_space_e colorSpace, vx_channel_range_e channelRange)$/;"	f
agoShutdownNode	ago/ago_util.cpp	/^int agoShutdownNode(AgoNode * node)$/;"	f
agoType2Size	ago/ago_util.cpp	/^size_t agoType2Size(vx_context context, vx_enum type)$/;"	f
agoUnloadModule	ago/ago_interface.cpp	/^int agoUnloadModule(AgoContext * context, const char * module)$/;"	f
agoUnlockGlobalContext	ago/ago_util.cpp	/^void agoUnlockGlobalContext()$/;"	f
agoUpdateDelaySlots	ago/ago_interface.cpp	/^int agoUpdateDelaySlots(AgoNode * node)$/;"	f
agoUpdateLine	ago/ago_interface.cpp	/^static void agoUpdateLine(char * line, std::vector< std::pair< std::string, std::string > >& vars, std::string localPrefix)$/;"	f	file:
agoUpdateN	ago/ago_interface.cpp	/^static void agoUpdateN(char * output, char * input, int N, int Nchar)$/;"	f	file:
agoVerifyGraph	ago/ago_interface.cpp	/^int agoVerifyGraph(AgoGraph * graph)$/;"	f
agoVerifyNode	ago/ago_interface.cpp	/^vx_status agoVerifyNode(AgoNode * node)$/;"	f
agoWaitForNodesCompletion	ago/ago_interface.cpp	/^static int agoWaitForNodesCompletion(AgoGraph * graph)$/;"	f	file:
agoWaitGraph	ago/ago_interface.cpp	/^int agoWaitGraph(AgoGraph * graph)$/;"	f
agoWriteGraph	ago/ago_interface.cpp	/^int agoWriteGraph(AgoGraph * agraph, AgoReference * * ref, int num_ref, FILE * fp, const char * comment)$/;"	f
ago_affine_matrix_t	ago/ago_haf_cpu.h	/^} ago_affine_matrix_t;$/;"	t	typeref:struct:__anon15
ago_coord2d_float_t	ago/ago_haf_cpu.h	/^} ago_coord2d_float_t;$/;"	t	typeref:struct:__anon14
ago_coord2d_int_t	ago/ago_haf_cpu.h	/^} ago_coord2d_int_t;$/;"	t	typeref:struct:__anon13
ago_coord2d_short_t	ago/ago_haf_cpu.h	/^} ago_coord2d_short_t;$/;"	t	typeref:struct:__anon12
ago_coord2d_ushort_t	ago/ago_haf_cpu.h	/^} ago_coord2d_ushort_t;$/;"	t	typeref:struct:__anon11
ago_data_registry_callback_f	ago/ago_internal.h	/^extern "C" typedef void (VX_CALLBACK * ago_data_registry_callback_f) (void * obj, vx_reference ref, const char * name, const char * app_params);$/;"	t
ago_harris_Gxy_t	ago/ago_haf_cpu_harris.cpp	/^} ago_harris_Gxy_t;$/;"	t	typeref:struct:__anon10	file:
ago_harris_grid_header_t	ago/ago_haf_cpu.h	/^} ago_harris_grid_header_t;$/;"	t	typeref:struct:__anon22
ago_kernel_cmd_execute	ago/ago_internal.h	/^	ago_kernel_cmd_execute                    =  0,$/;"	e	enum:__anon2
ago_kernel_cmd_get_image_plane_nonusage	ago/ago_internal.h	/^	ago_kernel_cmd_get_image_plane_nonusage   =  2,$/;"	e	enum:__anon2
ago_kernel_cmd_initialize	ago/ago_internal.h	/^	ago_kernel_cmd_initialize                 =  3,$/;"	e	enum:__anon2
ago_kernel_cmd_opencl_codegen	ago/ago_internal.h	/^	ago_kernel_cmd_opencl_codegen             =  6,$/;"	e	enum:__anon2
ago_kernel_cmd_query_target_support	ago/ago_internal.h	/^	ago_kernel_cmd_query_target_support       =  5,$/;"	e	enum:__anon2
ago_kernel_cmd_shutdown	ago/ago_internal.h	/^	ago_kernel_cmd_shutdown                   =  4,$/;"	e	enum:__anon2
ago_kernel_cmd_valid_rect_callback	ago/ago_internal.h	/^	ago_kernel_cmd_valid_rect_callback        =  7,$/;"	e	enum:__anon2
ago_kernel_cmd_validate	ago/ago_internal.h	/^	ago_kernel_cmd_validate                   =  1,$/;"	e	enum:__anon2
ago_kernel_count	ago/ago_kernel_list.cpp	/^size_t ago_kernel_count = sizeof(ago_kernel_list) \/ sizeof(ago_kernel_list[0]);$/;"	v
ago_kernel_list	ago/ago_kernel_list.cpp	/^} ago_kernel_list[] = {$/;"	v	typeref:struct:__anon9	file:
ago_keypoint_t	ago/ago_haf_cpu.h	/^} ago_keypoint_t;$/;"	t	typeref:struct:__anon21
ago_keypoint_xys_t	ago/ago_haf_cpu.h	/^} ago_keypoint_xys_t;$/;"	t	typeref:struct:__anon17
ago_meanstddev_data_t	ago/ago_haf_cpu.h	/^} ago_meanstddev_data_t;$/;"	t	typeref:struct:__anon19
ago_minmaxloc_data_t	ago/ago_haf_cpu.h	/^} ago_minmaxloc_data_t;$/;"	t	typeref:struct:__anon20
ago_module	ago/ago_platform.h	/^typedef struct _ago_module    * ago_module;$/;"	t	typeref:struct:_ago_module
ago_perspective_matrix_t	ago/ago_haf_cpu.h	/^} ago_perspective_matrix_t;$/;"	t	typeref:struct:__anon16
ago_profile_type_copy_begin	ago/ago_internal.h	/^	ago_profile_type_copy_begin,$/;"	e	enum:__anon3
ago_profile_type_copy_end	ago/ago_internal.h	/^	ago_profile_type_copy_end,$/;"	e	enum:__anon3
ago_profile_type_exec_begin	ago/ago_internal.h	/^	ago_profile_type_exec_begin,$/;"	e	enum:__anon3
ago_profile_type_exec_end	ago/ago_internal.h	/^	ago_profile_type_exec_end,$/;"	e	enum:__anon3
ago_profile_type_launch_begin	ago/ago_internal.h	/^	ago_profile_type_launch_begin,$/;"	e	enum:__anon3
ago_profile_type_launch_end	ago/ago_internal.h	/^	ago_profile_type_launch_end,$/;"	e	enum:__anon3
ago_profile_type_wait_begin	ago/ago_internal.h	/^	ago_profile_type_wait_begin,$/;"	e	enum:__anon3
ago_profile_type_wait_end	ago/ago_internal.h	/^	ago_profile_type_wait_end,$/;"	e	enum:__anon3
ago_pyramid_u8_t	ago/ago_haf_cpu.h	/^} ago_pyramid_u8_t;$/;"	t	typeref:struct:__anon18
ago_scale_matrix_t	ago/ago_haf_cpu.h	/^typedef struct AgoConfigScaleMatrix ago_scale_matrix_t;$/;"	t	typeref:struct:AgoConfigScaleMatrix
ago_type_public_e	include/vx_ext_amd.h	/^enum ago_type_public_e {$/;"	g
akernel	ago/ago_internal.h	/^	AgoKernel * akernel;$/;"	m	struct:AgoNode
alias_data	ago/ago_internal.h	/^	AgoData * alias_data;$/;"	m	struct:AgoData
alias_offset	ago/ago_internal.h	/^	vx_size   alias_offset;$/;"	m	struct:AgoData
allocate_id	ago/ago_internal.h	/^	vx_int32 allocate_id;$/;"	m	struct:AgoAllocInfo
allocated	ago/ago_internal.h	/^	void * allocated;$/;"	m	struct:AgoAllocInfo
amd_drama_add_node_f	include/vx_ext_amd.h	/^typedef vx_status(VX_CALLBACK * amd_drama_add_node_f)(vx_node node, vx_enum kernel_id, vx_reference * paramList, vx_uint32 paramCount);$/;"	t
amd_kernel_node_regen_callback_f	include/vx_ext_amd.h	/^typedef vx_status(VX_CALLBACK * amd_kernel_node_regen_callback_f)(vx_node node, amd_drama_add_node_f add_node_f, vx_bool& replace_original);$/;"	t
amd_kernel_opencl_buffer_update_callback_f	include/vx_ext_amd.h	/^typedef vx_status(VX_CALLBACK * amd_kernel_opencl_buffer_update_callback_f) ($/;"	t
amd_kernel_opencl_codegen_callback_f	include/vx_ext_amd.h	/^typedef vx_status(VX_CALLBACK * amd_kernel_opencl_codegen_callback_f) ($/;"	t
amd_kernel_opencl_global_work_update_callback_f	include/vx_ext_amd.h	/^typedef vx_status(VX_CALLBACK * amd_kernel_opencl_global_work_update_callback_f) ($/;"	t
amd_kernel_query_target_support_f	include/vx_ext_amd.h	/^typedef vx_status(VX_CALLBACK * amd_kernel_query_target_support_f) (vx_graph graph, vx_node node,$/;"	t
argConfig	ago/ago_internal.h	/^	vx_uint8 argConfig[AGO_MAX_PARAMS];$/;"	m	struct:AgoKernel
argConfig	ago/ago_kernel_list.cpp	/^	vx_uint8  argConfig[AGO_MAX_PARAMS];$/;"	m	struct:__anon9	file:
argCount	ago/ago_internal.h	/^	vx_uint32 argCount;$/;"	m	struct:AgoKernel
argType	ago/ago_internal.h	/^	vx_enum argType[AGO_MAX_PARAMS];$/;"	m	struct:AgoKernel
argType	ago/ago_kernel_list.cpp	/^	vx_enum argType[AGO_MAX_PARAMS];$/;"	m	struct:__anon9	file:
arg_index	ago/ago_drama_remove.cpp	/^	vx_int32   arg_index;$/;"	m	struct:AgoImageU8toU1Rule_t	file:
arg_spec	include/vx_ext_amd.h	/^		vx_uint32  arg_spec[AGO_MAX_PARAMS];$/;"	m	struct:AgoNodeMergeRule_t::__anon31
arg_spec	include/vx_ext_amd.h	/^		vx_uint32  arg_spec[AGO_MAX_PARAMS];$/;"	m	struct:AgoNodeMergeRule_t::__anon32
argument_usage	ago/ago_internal.h	/^	vx_uint32 argument_usage[3]; \/\/ VX_INPUT, VX_OUTPUT, VX_BIDIRECTIONAL$/;"	m	struct:AgoSuperNodeDataInfo
arr	ago/ago_internal.h	/^		AgoConfigArray arr;$/;"	m	union:AgoData::__anon5
atan2_p0	ago/ago_haf_cpu.h	32;"	d
atan2_p1	ago/ago_haf_cpu.h	33;"	d
atan2_p3	ago/ago_haf_cpu.h	34;"	d
atan2_p5	ago/ago_haf_cpu.h	35;"	d
atan2_p7	ago/ago_haf_cpu.h	36;"	d
attr_affinity	ago/ago_internal.h	/^	AgoTargetAffinityInfo_ attr_affinity;$/;"	m	struct:AgoContext
attr_affinity	ago/ago_internal.h	/^	AgoTargetAffinityInfo_ attr_affinity;$/;"	m	struct:AgoGraph
attr_affinity	ago/ago_internal.h	/^	AgoTargetAffinityInfo_ attr_affinity;$/;"	m	struct:AgoNode
attr_border_mode	ago/ago_internal.h	/^	vx_border_mode_t attr_border_mode;$/;"	m	struct:AgoNode
autoAgeDelayList	ago/ago_internal.h	/^	std::vector<AgoData *> autoAgeDelayList;$/;"	m	struct:AgoGraph
avg	include/VX/vx_types.h	/^    vx_uint64 avg;          \/*!< \\brief Holds the average of the durations. *\/$/;"	m	struct:_vx_perf_t
base	include/VX/vx_khr_tiling.h	/^    vx_uint8 * VX_RESTRICT base[VX_MAX_TILING_PLANES];$/;"	m	struct:_vx_tile_t
beg	include/VX/vx_types.h	/^    vx_uint64 beg;          \/*!< \\brief Holds the first measurement in a set. *\/$/;"	m	struct:_vx_perf_t
block_height	include/VX/vx_types.h	/^    vx_int32 block_height; $/;"	m	struct:__anon24
block_stride	include/VX/vx_types.h	/^    vx_int32 block_stride;$/;"	m	struct:__anon24
block_width	include/VX/vx_types.h	/^    vx_int32 block_width; $/;"	m	struct:__anon24
bottom	include/VX/vx_khr_tiling.h	/^    vx_int32 bottom; \/*!< \\brief Bottom of the tile block. *\/$/;"	m	struct:_vx_neighborhood_size_t
buffer	ago/ago_internal.h	/^	vx_uint8 * buffer;$/;"	m	struct:AgoData
buffer_allocated	ago/ago_internal.h	/^	vx_uint8 * buffer_allocated;$/;"	m	struct:AgoData
buffer_read	ago/ago_internal.h	/^		vx_uint64 buffer_read;$/;"	m	struct:AgoGraph::AgoGraphPerfInternalInfo_
buffer_read	include/vx_ext_amd.h	/^	vx_uint64 buffer_read;$/;"	m	struct:__anon30
buffer_sync_flags	ago/ago_internal.h	/^	vx_uint32  buffer_sync_flags;$/;"	m	struct:AgoData
buffer_write	ago/ago_internal.h	/^		vx_uint64 buffer_write;$/;"	m	struct:AgoGraph::AgoGraphPerfInternalInfo_
buffer_write	include/vx_ext_amd.h	/^	vx_uint64 buffer_write;$/;"	m	struct:__anon30
callback	ago/ago_internal.h	/^	vx_nodecomplete_f callback;$/;"	m	struct:AgoNode
callback_log	ago/ago_internal.h	/^	vx_log_callback_f callback_log;$/;"	m	struct:AgoContext
callback_reentrant	ago/ago_internal.h	/^	vx_bool callback_reentrant;$/;"	m	struct:AgoContext
cannystack	ago/ago_internal.h	/^		AgoConfigCannyStack cannystack;$/;"	m	union:AgoData::__anon5
capacity	ago/ago_internal.h	/^	vx_size capacity;$/;"	m	struct:AgoConfigArray
cellSize	ago/ago_haf_cpu.h	/^	vx_uint32 cellSize;$/;"	m	struct:__anon22
cell_height	include/VX/vx_types.h	/^    vx_int32 cell_height; $/;"	m	struct:__anon24
cell_width	include/VX/vx_types.h	/^    vx_int32 cell_width; $/;"	m	struct:__anon24
channelRange	include/vx_ext_amd.h	/^	vx_channel_range_e channelRange;$/;"	m	struct:__anon25
channel_range	ago/ago_internal.h	/^	vx_channel_range_e channel_range;$/;"	m	struct:AgoConfigImage
checkForCornerAndGetStrength	ago/ago_haf_cpu_fast_corners.cpp	/^static inline bool checkForCornerAndGetStrength(unsigned char * src, int* offsets, short t, short * strength)$/;"	f	file:
checkForCornerAndGetStrength_SSE	ago/ago_haf_cpu_fast_corners.cpp	/^static inline bool checkForCornerAndGetStrength_SSE(unsigned char pixel, __m128i boundary, short threshold, short * strength)$/;"	f	file:
children	ago/ago_internal.h	/^	AgoData ** children;$/;"	m	struct:AgoData
clDumpBuffer	ago/ago_util_opencl.cpp	/^static void clDumpBuffer(const char * fileNameFormat, cl_command_queue opencl_cmdq, AgoData * data)$/;"	f	file:
colorSpace	include/vx_ext_amd.h	/^	vx_color_space_e   colorSpace;$/;"	m	struct:__anon25
color_space	ago/ago_internal.h	/^	vx_color_space_e color_space;$/;"	m	struct:AgoConfigImage
columns	ago/ago_internal.h	/^	vx_size columns;$/;"	m	struct:AgoConfigConvolution
columns	ago/ago_internal.h	/^	vx_size columns;$/;"	m	struct:AgoConfigMatrix
comment	include/vx_ext_amd.h	/^	vx_char comment[64];$/;"	m	struct:__anon29
compareTwo	ago/ago_haf_cpu_filter.cpp	/^int compareTwo(const void * a, const void * b)$/;"	f
components	ago/ago_internal.h	/^	vx_size components;$/;"	m	struct:AgoConfigImage
components	include/vx_ext_amd.h	/^	vx_size            components;$/;"	m	struct:__anon25
constant_value	include/VX/vx_types.h	/^    vx_pixel_value_t constant_value;$/;"	m	struct:_vx_border_t
context	ago/ago_internal.h	/^	AgoContext * context;         \/\/ context$/;"	m	struct:AgoReference
conv	ago/ago_internal.h	/^		AgoConfigConvolution conv;$/;"	m	union:AgoData::__anon5
count	ago/ago_internal.h	/^	vx_size count;$/;"	m	struct:AgoConfigLut
count	ago/ago_internal.h	/^	vx_uint32 count;$/;"	m	struct:AgoConfigCannyStack
count	ago/ago_internal.h	/^	vx_uint32 count;$/;"	m	struct:AgoConfigDelay
count	ago/ago_internal.h	/^	vx_uint32 count;$/;"	m	struct:AgoDataList
count	ago/ago_internal.h	/^	vx_uint32 count;$/;"	m	struct:AgoGraphList
count	ago/ago_internal.h	/^	vx_uint32 count;$/;"	m	struct:AgoKernelList
count	ago/ago_internal.h	/^	vx_uint32 count;$/;"	m	struct:AgoNodeList
count	ago/ago_platform.cpp	/^	int count;$/;"	m	struct:__anon23	file:
cs	ago/ago_internal.h	/^	CRITICAL_SECTION cs;$/;"	m	struct:AgoContext
cs	ago/ago_internal.h	/^	CRITICAL_SECTION cs;$/;"	m	struct:AgoGraph
cv	ago/ago_platform.cpp	/^	condition_variable cv;$/;"	m	struct:__anon23	file:
d	ago/ago_internal.h	/^struct _vx_array { AgoData d; };$/;"	m	struct:_vx_array
d	ago/ago_internal.h	/^struct _vx_convolution { AgoData d; };$/;"	m	struct:_vx_convolution
d	ago/ago_internal.h	/^struct _vx_delay { AgoData d; };$/;"	m	struct:_vx_delay
d	ago/ago_internal.h	/^struct _vx_distribution { AgoData d; };$/;"	m	struct:_vx_distribution
d	ago/ago_internal.h	/^struct _vx_image { AgoData d; };$/;"	m	struct:_vx_image
d	ago/ago_internal.h	/^struct _vx_lut { AgoData d; };$/;"	m	struct:_vx_lut
d	ago/ago_internal.h	/^struct _vx_matrix { AgoData d; };$/;"	m	struct:_vx_matrix
d	ago/ago_internal.h	/^struct _vx_pyramid { AgoData d; };$/;"	m	struct:_vx_pyramid
d	ago/ago_internal.h	/^struct _vx_remap { AgoData d; };$/;"	m	struct:_vx_remap
d	ago/ago_internal.h	/^struct _vx_scalar { AgoData d; };$/;"	m	struct:_vx_scalar
d	ago/ago_internal.h	/^struct _vx_threshold { AgoData d; };$/;"	m	struct:_vx_threshold
data	ago/ago_internal.h	/^	AgoData data;$/;"	m	struct:AgoMetaFormat
dataConvertU1ToU8_4bytes	ago/ago_haf_cpu_logical.cpp	/^vx_uint32 dataConvertU1ToU8_4bytes[16] = { 0x00000000, 0x000000FF, 0x0000FF00, 0x0000FFFF,$/;"	v
dataGenerationCount	ago/ago_internal.h	/^	vx_uint32 dataGenerationCount;$/;"	m	struct:AgoContext
dataInfo	ago/ago_internal.h	/^	std::vector<AgoSuperNodeDataInfo> dataInfo;$/;"	m	struct:AgoSuperNode
dataList	ago/ago_internal.h	/^	AgoDataList dataList;$/;"	m	struct:AgoContext
dataList	ago/ago_internal.h	/^	AgoDataList dataList;$/;"	m	struct:AgoGraph
dataList	ago/ago_internal.h	/^	std::vector<AgoData *> dataList;$/;"	m	struct:AgoSuperNode
dataListForAgeDelay	ago/ago_internal.h	/^	std::vector<AgoData *> dataListForAgeDelay;$/;"	m	struct:AgoSuperNode
data_registry_callback_f	include/vx_ext_amd.h	/^	void (VX_CALLBACK * data_registry_callback_f) (void * obj, vx_reference ref, const char * name, const char * app_params);$/;"	m	struct:__anon28
data_registry_callback_obj	include/vx_ext_amd.h	/^	void * data_registry_callback_obj;$/;"	m	struct:__anon28
data_type	ago/ago_internal.h	/^	vx_enum data_type;$/;"	m	struct:AgoConfigTensor
data_type	ago/ago_internal.h	/^	vx_enum data_type;$/;"	m	struct:AgoConfigThreshold
data_type_flags	ago/ago_internal.h	/^	vx_uint32 data_type_flags;$/;"	m	struct:AgoSuperNodeDataInfo
debug_printf	ago/ago_internal.h	170;"	d
debug_printf	ago/ago_internal.h	172;"	d
deinitialize_f	ago/ago_internal.h	/^	vx_kernel_deinitialize_f deinitialize_f;$/;"	m	struct:AgoKernel
delay	ago/ago_internal.h	/^		AgoConfigDelay delay;$/;"	m	union:AgoData::__anon5
delta_end_x	include/VX/vx_compatibility.h	/^    vx_int32 delta_end_x;   \/*!< \\brief The change in the end x. *\/$/;"	m	struct:_vx_delta_rectangle_t
delta_end_y	include/VX/vx_compatibility.h	/^    vx_int32 delta_end_y;   \/*!< \\brief The change in the end y. *\/$/;"	m	struct:_vx_delta_rectangle_t
delta_start_x	include/VX/vx_compatibility.h	/^    vx_int32 delta_start_x; \/*!< \\brief The change in the start x. *\/$/;"	m	struct:_vx_delta_rectangle_t
delta_start_y	include/VX/vx_compatibility.h	/^    vx_int32 delta_start_y; \/*!< \\brief The change in the start y. *\/$/;"	m	struct:_vx_delta_rectangle_t
desc	ago/ago_internal.h	/^	AgoImageFormatDescription desc;$/;"	m	struct:AgoImageFormatDescItem
detectedInvalidNode	ago/ago_internal.h	/^	bool detectedInvalidNode;$/;"	m	struct:AgoGraph
device_info	ago/ago_internal.h	/^	vx_uint32 device_info;$/;"	m	struct:AgoTargetAffinityInfo_
device_info	include/vx_ext_amd.h	/^	vx_uint32 device_info; \/\/ reserved -- shall be initialized to ZERO and shall not be modified$/;"	m	struct:__anon26
device_type	ago/ago_internal.h	/^	vx_uint32 device_type;$/;"	m	struct:AgoTargetAffinityInfo_
device_type	include/vx_ext_amd.h	/^	vx_uint32 device_type; \/\/ shall be AGO_TARGET_AFFINITY_CPU or AGO_TARGET_AFFINITY_GPU$/;"	m	struct:__anon26
device_type_unused	ago/ago_internal.h	/^	vx_uint32 device_type_unused;$/;"	m	struct:AgoData
df	ago/ago_internal.h	/^		vx_df_image df;$/;"	m	union:AgoConfigScalar::__anon4
dilation_x	include/VX/vx_khr_nn.h	/^    vx_size dilation_x;            \/*!< \\brief “inflate” the kernel by inserting zeros between the kernel elements in the x direction. The value is the number of zeros to insert.*\/$/;"	m	struct:_vx_nn_convolution_params_t
dilation_y	include/VX/vx_khr_nn.h	/^    vx_size dilation_y;            \/*!< \\brief “inflate” the kernel by inserting zeros between the kernel elements in the y direction. The value is the number of zeros to insert.*\/$/;"	m	struct:_vx_nn_convolution_params_t
dim_x	include/VX/vx_types.h	/^    vx_uint32 dim_x;        \/*!< \\brief Width of patch in X dimension in pixels. *\/$/;"	m	struct:_vx_imagepatch_addressing_t
dim_y	include/VX/vx_types.h	/^    vx_uint32 dim_y;        \/*!< \\brief Height of patch in Y dimension in pixels. *\/$/;"	m	struct:_vx_imagepatch_addressing_t
dimof	ago/ago_internal.h	167;"	d
dims	ago/ago_internal.h	/^	vx_size dims[AGO_MAX_TENSOR_DIMENSIONS];$/;"	m	struct:AgoConfigTensor
dir_offsets	ago/ago_haf_cpu_canny.cpp	/^static const ago_coord2d_short_t dir_offsets[8] = {$/;"	v	file:
direction	ago/ago_internal.h	/^	vx_direction_e direction;$/;"	m	struct:AgoParameter
dist	ago/ago_internal.h	/^		AgoConfigDistribution dist;$/;"	m	union:AgoData::__anon5
down_scale_size_rounding	include/VX/vx_khr_nn.h	/^    vx_enum down_scale_size_rounding; \/*!< \\brief Rounding method for calculating output dimensions. See <tt>\\ref vx_nn_rounding_type_e<\/tt> *\/$/;"	m	struct:_vx_nn_convolution_params_t
drama_divide_invoked	ago/ago_internal.h	/^	bool drama_divide_invoked;$/;"	m	struct:AgoNode
dst_height	ago/ago_internal.h	/^	vx_uint32 dst_height;$/;"	m	struct:AgoConfigRemap
dst_width	ago/ago_internal.h	/^	vx_uint32 dst_width;$/;"	m	struct:AgoConfigRemap
dumpToConsole	include/vx_ext_amd.h	/^	vx_int32 dumpToConsole;$/;"	m	struct:__anon28
e	ago/ago_internal.h	/^		vx_enum e;$/;"	m	union:AgoConfigScalar::__anon4
enable	ago/ago_internal.h	/^	struct { bool enable; int paramIndexScalar; int paramIndexArray; } opencl_scalar_array_output_sync;$/;"	m	struct:AgoNode::__anon6
enableUserBufferOpenCL	ago/ago_internal.h	/^	vx_bool enableUserBufferOpenCL;$/;"	m	struct:AgoConfigImage
enable_logging	ago/ago_internal.h	/^	bool         enable_logging;  \/\/ enable logging$/;"	m	struct:AgoReference
enable_node_level_opencl_flush	ago/ago_internal.h	/^	bool enable_node_level_opencl_flush;$/;"	m	struct:AgoGraph
enable_performance_profiling	ago/ago_internal.h	/^	bool enable_performance_profiling;$/;"	m	struct:AgoGraph
end	ago/ago_internal.h	/^	vx_size end[AGO_MAX_TENSOR_DIMENSIONS];$/;"	m	struct:AgoConfigTensor
end	include/VX/vx_types.h	/^    vx_uint64 end;          \/*!< \\brief Holds the last measurement in a set. *\/$/;"	m	struct:_vx_perf_t
end_x	include/VX/vx_types.h	/^    vx_float32 end_x;$/;"	m	struct:_vx_line2d_t
end_x	include/VX/vx_types.h	/^    vx_uint32 end_x;            \/*!< \\brief The End X coordinate. *\/$/;"	m	struct:_vx_rectangle_t
end_y	include/VX/vx_types.h	/^    vx_float32 end_y;$/;"	m	struct:_vx_line2d_t
end_y	include/VX/vx_types.h	/^    vx_uint32 end_y;            \/*!< \\brief The End Y coordinate. *\/$/;"	m	struct:_vx_rectangle_t
enumeration	include/VX/vx_types.h	/^    vx_enum enumeration;$/;"	m	struct:_vx_kernel_info_t
error	include/VX/vx_types.h	/^    vx_float32 error;           \/*!< \\brief A tracking method specific error. Initialized to 0 by corner detectors. *\/$/;"	m	struct:_vx_keypoint_t
execFrameCount	ago/ago_internal.h	/^	vx_uint32 execFrameCount;$/;"	m	struct:AgoGraph
extensions	ago/ago_internal.h	/^	vx_char extensions[256];$/;"	m	struct:AgoContext
external_count	ago/ago_internal.h	/^	vx_uint32    external_count;  \/\/ user usage count -- can't be free when > 0, can't be access when == 0$/;"	m	struct:AgoReference
external_kernel	ago/ago_internal.h	/^	bool external_kernel;$/;"	m	struct:AgoKernel
f	ago/ago_internal.h	/^		vx_float32 f;$/;"	m	union:AgoConfigScalar::__anon4
f64	ago/ago_internal.h	/^		vx_float64 f64;$/;"	m	union:AgoConfigScalar::__anon4
false_value	ago/ago_internal.h	/^	vx_int32 true_value, false_value;$/;"	m	struct:AgoConfigThreshold
fileName	include/vx_ext_amd.h	/^	vx_char fileName[256];$/;"	m	struct:__anon29
finalized	ago/ago_internal.h	/^	bool finalized;$/;"	m	struct:AgoKernel
find	include/vx_ext_amd.h	/^	} find[AGO_MERGE_RULE_MAX_FIND];$/;"	m	struct:AgoNodeMergeRule_t	typeref:struct:AgoNodeMergeRule_t::__anon31
find_kernel_id	ago/ago_drama_remove.cpp	/^	vx_enum    find_kernel_id;$/;"	m	struct:AgoImageU8toU1Rule_t	file:
fixed_point_pos	ago/ago_internal.h	/^	vx_uint32 fixed_point_pos;$/;"	m	struct:AgoConfigTensor
flFloor	ago/ago_haf_cpu_opticalflow.cpp	/^inline int flFloor(float value)$/;"	f
flRound	ago/ago_haf_cpu_opticalflow.cpp	/^inline int flRound(float value)$/;"	f
flags	ago/ago_internal.h	/^	vx_uint32 flags;$/;"	m	struct:AgoKernel
flags	ago/ago_internal.h	/^	vx_uint32 flags;$/;"	m	struct:AgoNode
flags	ago/ago_kernel_list.cpp	/^	vx_uint32 flags;$/;"	m	struct:__anon9	file:
format	ago/ago_internal.h	/^	vx_df_image               format;$/;"	m	struct:AgoImageFormatDescItem
format	ago/ago_internal.h	/^	vx_df_image format;$/;"	m	struct:AgoConfigImage
format	ago/ago_internal.h	/^	vx_df_image format;$/;"	m	struct:AgoConfigPyramid
format	include/VX/vx_khr_tiling.h	/^    vx_df_image format; \/*!< \\brief The <tt>\\ref vx_df_image_e<\/tt> of the image *\/$/;"	m	struct:_vx_image_description_t
func	ago/ago_internal.h	/^	int(*func)(AgoNode * node, AgoKernelCommand cmd);$/;"	m	struct:AgoKernel
func	ago/ago_kernel_list.cpp	/^	int(*func)(AgoNode * node, AgoKernelCommand cmd);$/;"	m	struct:__anon9	file:
funcExchange	ago/ago_internal.h	/^	vx_int32 funcExchange[AGO_MAX_PARAMS];$/;"	m	struct:AgoNode
g_callback_log	ago/ago_util.cpp	/^static vx_log_callback_f g_callback_log = nullptr;$/;"	v	file:
g_cs_context	ago/ago_util.cpp	/^static CRITICAL_SECTION g_cs_context;$/;"	v	file:
g_cs_context_initialized	ago/ago_util.cpp	/^static vx_bool g_cs_context_initialized = vx_false_e;$/;"	v	file:
generateMasks_C	ago/ago_haf_cpu_fast_corners.cpp	/^static inline void generateMasks_C(unsigned char * src, int srcStride, int* offsets, short t, int mask[2])$/;"	f	file:
generateOffset	ago/ago_haf_cpu_fast_corners.cpp	/^static inline void generateOffset(int srcStride, int * offsets)$/;"	f	file:
graphList	ago/ago_internal.h	/^	AgoGraphList graphList;$/;"	m	struct:AgoContext
graph_garbage_data	ago/ago_internal.h	/^	AgoData * graph_garbage_data;$/;"	m	struct:AgoContext
graph_garbage_list	ago/ago_internal.h	/^	AgoGraph * graph_garbage_list;$/;"	m	struct:AgoContext
graph_garbage_node	ago/ago_internal.h	/^	AgoNode * graph_garbage_node;$/;"	m	struct:AgoContext
gridBufSize	ago/ago_haf_cpu.h	/^	vx_uint32 gridBufSize;$/;"	m	struct:__anon22
group	ago/ago_internal.h	/^	vx_uint32 group;$/;"	m	struct:AgoSuperNode
group	ago/ago_internal.h	/^	vx_uint32 group;$/;"	m	struct:AgoTargetAffinityInfo_
hSemFromThread	ago/ago_internal.h	/^	HANDLE hThread, hSemToThread, hSemFromThread;$/;"	m	struct:AgoGraph
hSemToThread	ago/ago_internal.h	/^	HANDLE hThread, hSemToThread, hSemFromThread;$/;"	m	struct:AgoGraph
hThread	ago/ago_internal.h	/^	HANDLE hThread, hSemToThread, hSemFromThread;$/;"	m	struct:AgoGraph
hasMinMax	ago/ago_internal.h	/^	vx_bool hasMinMax;$/;"	m	struct:AgoConfigImage
head	ago/ago_internal.h	/^	AgoData * head;$/;"	m	struct:AgoDataList
head	ago/ago_internal.h	/^	AgoGraph * head;$/;"	m	struct:AgoGraphList
head	ago/ago_internal.h	/^	AgoKernel * head;$/;"	m	struct:AgoKernelList
head	ago/ago_internal.h	/^	AgoNode * head;$/;"	m	struct:AgoNodeList
height	ago/ago_haf_cpu.h	/^	vx_uint32      height;$/;"	m	struct:__anon18
height	ago/ago_haf_cpu.h	/^	vx_uint32 height;$/;"	m	struct:__anon22
height	ago/ago_internal.h	/^	vx_uint32 height;$/;"	m	struct:AgoConfigImage
height	ago/ago_internal.h	/^	vx_uint32 height;$/;"	m	struct:AgoConfigPyramid
height	ago/ago_internal.h	/^	vx_uint32 height;$/;"	m	struct:AgoSuperNode
height	include/VX/vx_khr_tiling.h	/^    vx_int32 height; \/*!< \\brief Tile block height in pixels. *\/$/;"	m	struct:_vx_tile_block_size_t
height	include/VX/vx_khr_tiling.h	/^    vx_uint32 height; \/*!< \\brief Height of the image *\/$/;"	m	struct:_vx_image_description_t
hierarchical_level	ago/ago_internal.h	/^	vx_uint32 hierarchical_level;$/;"	m	struct:AgoData
hierarchical_level	ago/ago_internal.h	/^	vx_uint32 hierarchical_level;$/;"	m	struct:AgoNode
hierarchical_level_end	ago/ago_internal.h	/^	vx_uint32 hierarchical_level_end;$/;"	m	struct:AgoSuperNode
hierarchical_level_start	ago/ago_internal.h	/^	vx_uint32 hierarchical_level_start;$/;"	m	struct:AgoSuperNode
hierarchical_life_end	ago/ago_internal.h	/^	vx_uint32 hierarchical_life_end;$/;"	m	struct:AgoData
hierarchical_life_start	ago/ago_internal.h	/^	vx_uint32 hierarchical_life_start;$/;"	m	struct:AgoData
hint_serialize	ago/ago_internal.h	/^	bool         hint_serialize;  \/\/ serialize hint$/;"	m	struct:AgoReference
hmodule	ago/ago_internal.h	/^	ago_module hmodule;$/;"	m	struct:ModuleData
i	ago/ago_internal.h	/^		vx_int32 i;$/;"	m	union:AgoConfigScalar::__anon4
i64	ago/ago_internal.h	/^		vx_int64 i64;$/;"	m	union:AgoConfigScalar::__anon4
id	ago/ago_internal.h	/^	vx_enum id;$/;"	m	struct:AgoKernel
id	ago/ago_internal.h	/^	vx_enum id;$/;"	m	struct:AgoUserStruct
id	ago/ago_internal.h	/^	vx_uint32           id;$/;"	m	struct:AgoProfileEntry
id	ago/ago_kernel_list.cpp	/^	vx_enum id;$/;"	m	struct:__anon9	file:
image	include/VX/vx_khr_tiling.h	/^    vx_image_description_t image;$/;"	m	struct:_vx_tile_t
imageAlreadyComputed	ago/ago_haf_cpu.h	/^	vx_bool        imageAlreadyComputed;$/;"	m	struct:__anon18
image_format_list	ago/ago_internal.h	/^	std::vector<AgoImageFormatDescItem> image_format_list;$/;"	m	struct:AgoContext
img	ago/ago_internal.h	/^		AgoConfigImage img;$/;"	m	union:AgoData::__anon5
immediate_border_mode	ago/ago_internal.h	/^	vx_border_mode_t immediate_border_mode;$/;"	m	struct:AgoContext
import_type	ago/ago_internal.h	/^	vx_enum import_type;$/;"	m	struct:AgoData
importing_module_index_plus1	ago/ago_internal.h	/^	vx_uint32 importing_module_index_plus1;$/;"	m	struct:AgoContext
importing_module_index_plus1	ago/ago_internal.h	/^	vx_uint32 importing_module_index_plus1;$/;"	m	struct:AgoKernel
importing_module_index_plus1	ago/ago_internal.h	/^	vx_uint32 importing_module_index_plus1;$/;"	m	struct:AgoUserStruct
index	ago/ago_internal.h	/^	vx_uint32 index;$/;"	m	struct:AgoParameter
initialization_flags	ago/ago_internal.h	/^	vx_uint32 initialization_flags;$/;"	m	struct:AgoData
initialize_f	ago/ago_internal.h	/^	vx_kernel_initialize_f initialize_f;$/;"	m	struct:AgoKernel
initialized	ago/ago_internal.h	/^	bool initialized;$/;"	m	struct:AgoNode
inoutUsageCount	ago/ago_internal.h	/^	vx_uint32 inputUsageCount, outputUsageCount, inoutUsageCount;$/;"	m	struct:AgoData
inputUsageCount	ago/ago_internal.h	/^	vx_uint32 inputUsageCount, outputUsageCount, inoutUsageCount;$/;"	m	struct:AgoData
input_validate_f	ago/ago_internal.h	/^	vx_kernel_input_validate_f input_validate_f;$/;"	m	struct:AgoKernel
insertAtLocation	ago/ago_haf_cpu_harris.cpp	/^void insertAtLocation(vx_uint32 listCapacity, vx_keypoint_t * pList, vx_uint32 * cornerCount, vx_keypoint_t itemToBeAdded, vx_uint32 loc)$/;"	f
internal_count	ago/ago_internal.h	/^	vx_uint32    internal_count;  \/\/ framework usage count -- can't be free when > 0$/;"	m	struct:AgoReference
isAmdMediaOpsSupported	ago/ago_internal.h	/^	bool isAmdMediaOpsSupported;$/;"	m	struct:AgoContext
isCorner	ago/ago_haf_cpu_fast_corners.cpp	/^static inline bool isCorner(int mask)$/;"	f	file:
isCorner	ago/ago_haf_cpu_fast_corners.cpp	/^static inline bool isCorner(int mask[2])$/;"	f	file:
isCornerMinus	ago/ago_haf_cpu_fast_corners.cpp	/^static inline bool isCornerMinus(short candidate, short * boundary, short t)$/;"	f	file:
isCornerMinus_SSE	ago/ago_haf_cpu_fast_corners.cpp	/^static inline bool isCornerMinus_SSE(__m128i candidate, __m128i boundary, short t)$/;"	f	file:
isCornerPlus	ago/ago_haf_cpu_fast_corners.cpp	/^static inline bool isCornerPlus(short candidate, short * boundary, short t)$/;"	f	file:
isCornerPlus_SSE	ago/ago_haf_cpu_fast_corners.cpp	/^static inline bool isCornerPlus_SSE(__m128i candidate, __m128i boundary, short t)$/;"	f	file:
isCorner_SSE	ago/ago_haf_cpu_fast_corners.cpp	/^bool isCorner_SSE(unsigned char pixel, __m128i boundary, __m128i t)$/;"	f
isDelayed	ago/ago_internal.h	/^	vx_bool isDelayed;$/;"	m	struct:AgoData
isGpuOclSuperNode	ago/ago_internal.h	/^	bool isGpuOclSuperNode;$/;"	m	struct:AgoSuperNode
isInitialized	ago/ago_internal.h	/^	vx_bool isInitialized;$/;"	m	struct:AgoData
isNotFullyConfigured	ago/ago_internal.h	/^	vx_bool isNotFullyConfigured;$/;"	m	struct:AgoData
isROI	ago/ago_internal.h	/^	vx_bool isROI;$/;"	m	struct:AgoConfigImage
isReadyToExecute	ago/ago_internal.h	/^	vx_bool isReadyToExecute;$/;"	m	struct:AgoGraph
isUniform	ago/ago_internal.h	/^	vx_bool isUniform;$/;"	m	struct:AgoConfigImage
isVirtual	ago/ago_internal.h	/^	vx_bool isVirtual;$/;"	m	struct:AgoConfigImage
isVirtual	ago/ago_internal.h	/^	vx_bool isVirtual;$/;"	m	struct:AgoConfigPyramid
isVirtual	ago/ago_internal.h	/^	vx_bool isVirtual;$/;"	m	struct:AgoData
is_separable	ago/ago_internal.h	/^	bool is_separable;$/;"	m	struct:AgoConfigConvolution
itemsize	ago/ago_internal.h	/^	vx_size itemsize;$/;"	m	struct:AgoConfigArray
itemsize	ago/ago_internal.h	/^	vx_size itemsize;$/;"	m	struct:AgoConfigMatrix
itemsize	ago/ago_internal.h	/^	vx_size itemsize;$/;"	m	struct:AgoConfigScalar
itemtype	ago/ago_internal.h	/^	vx_enum itemtype;$/;"	m	struct:AgoConfigArray
kernOpInfo	ago/ago_internal.h	/^	vx_uint8 kernOpInfo;$/;"	m	struct:AgoKernel
kernOpInfo	ago/ago_kernel_list.cpp	/^	vx_uint8 kernOpInfo;$/;"	m	struct:__anon9	file:
kernOpType	ago/ago_internal.h	/^	vx_uint8 kernOpType;$/;"	m	struct:AgoKernel
kernOpType	ago/ago_kernel_list.cpp	/^	vx_uint8 kernOpType;$/;"	m	struct:__anon9	file:
kernelList	ago/ago_internal.h	/^	AgoKernelList kernelList;$/;"	m	struct:AgoContext
kernel_enqueue	ago/ago_internal.h	/^		vx_uint64 kernel_enqueue;$/;"	m	struct:AgoGraph::AgoGraphPerfInternalInfo_
kernel_enqueue	include/vx_ext_amd.h	/^	vx_uint64 kernel_enqueue;$/;"	m	struct:__anon30
kernel_f	ago/ago_internal.h	/^	vx_kernel_f kernel_f;$/;"	m	struct:AgoKernel
kernel_id	include/vx_ext_amd.h	/^		vx_enum    kernel_id;$/;"	m	struct:AgoNodeMergeRule_t::__anon31
kernel_id	include/vx_ext_amd.h	/^		vx_enum    kernel_id;$/;"	m	struct:AgoNodeMergeRule_t::__anon32
kernel_wait	ago/ago_internal.h	/^		vx_uint64 kernel_wait;$/;"	m	struct:AgoGraph::AgoGraphPerfInternalInfo_
kernel_wait	include/vx_ext_amd.h	/^	vx_uint64 kernel_wait;$/;"	m	struct:__anon30
launched	ago/ago_internal.h	/^	bool launched;$/;"	m	struct:AgoSuperNode
left	include/VX/vx_khr_tiling.h	/^    vx_int32 left;   \/*!< \\brief Left of the tile block. *\/$/;"	m	struct:_vx_neighborhood_size_t
leftmostbit	ago/ago_internal.h	/^inline int leftmostbit(unsigned int n) {$/;"	f
levels	ago/ago_internal.h	/^	vx_size levels;$/;"	m	struct:AgoConfigPyramid
line_gap	include/VX/vx_types.h	/^    vx_int32 line_gap;$/;"	m	struct:_vx_hough_lines_p_t
line_length	include/VX/vx_types.h	/^    vx_int32 line_length;$/;"	m	struct:_vx_hough_lines_p_t
localDataPtr	ago/ago_internal.h	/^	vx_uint8 * localDataPtr;$/;"	m	struct:AgoKernel
localDataPtr	ago/ago_internal.h	/^	vx_uint8 * localDataPtr;$/;"	m	struct:AgoNode
localDataPtr_allocated	ago/ago_internal.h	/^	vx_uint8 * localDataPtr_allocated;$/;"	m	struct:AgoNode
localDataSize	ago/ago_internal.h	/^	vx_size localDataSize;$/;"	m	struct:AgoKernel
localDataSize	ago/ago_internal.h	/^	vx_size localDataSize;$/;"	m	struct:AgoNode
local_buffer_size_in_bytes	ago/ago_internal.h	/^	vx_uint32 local_buffer_size_in_bytes;$/;"	m	struct:AgoSuperNodeDataInfo
lut	ago/ago_internal.h	/^		AgoConfigLut lut;$/;"	m	union:AgoData::__anon5
m_cs	ago/ago_internal.h	/^	CRITICAL_SECTION * m_cs;$/;"	m	class:CAgoLock
macroName	include/vx_ext_amd.h	/^	vx_char macroName[256];$/;"	m	struct:__anon27
macros	ago/ago_internal.h	/^	std::vector<MacroData> macros;$/;"	m	struct:AgoContext
magic	ago/ago_internal.h	/^	vx_uint32    magic;           \/\/ shall be always be AGO_MAGIC$/;"	m	struct:AgoReference
map_id	ago/ago_internal.h	/^	vx_map_id map_id;$/;"	m	struct:MappedData
mapped	ago/ago_internal.h	/^	std::list<MappedData> mapped;$/;"	m	struct:AgoData
mat	ago/ago_internal.h	/^		AgoConfigMatrix mat;$/;"	m	union:AgoData::__anon5
matrix	ago/ago_haf_cpu.h	/^	vx_float32 matrix[3][2];$/;"	m	struct:__anon15
matrix	ago/ago_haf_cpu.h	/^	vx_float32 matrix[3][3];$/;"	m	struct:__anon16
max	ago/ago_haf_cpu.h	/^	vx_int32 max;$/;"	m	struct:__anon20
max	include/VX/vx_types.h	/^    vx_uint64 max;          \/*!< \\brief Holds the maximum of the durations. *\/$/;"	m	struct:_vx_perf_t
maxValue	ago/ago_internal.h	/^	vx_int32 maxValue;$/;"	m	struct:AgoConfigImage
merge_rules	ago/ago_internal.h	/^	std::vector<AgoNodeMergeRule> merge_rules;$/;"	m	struct:AgoContext
metaList	ago/ago_internal.h	/^	AgoMetaFormat metaList[AGO_MAX_PARAMS];$/;"	m	struct:AgoNode
min	ago/ago_haf_cpu.h	/^	vx_int32 min;$/;"	m	struct:__anon20
min	include/VX/vx_types.h	/^    vx_uint64 min;          \/*!< \\brief Holds the minimum of the durations. *\/$/;"	m	struct:_vx_perf_t
minValue	ago/ago_internal.h	/^	vx_int32 minValue;$/;"	m	struct:AgoConfigImage
mode	include/VX/vx_types.h	/^    vx_enum mode;$/;"	m	struct:_vx_border_t
moduleHandle	ago/ago_internal.h	/^	std::map<std::string,void *> moduleHandle;$/;"	m	struct:AgoGraph
module_internal_data_ptr	ago/ago_internal.h	/^	vx_uint8 * module_internal_data_ptr;$/;"	m	struct:ModuleData
module_internal_data_size	ago/ago_internal.h	/^	vx_size module_internal_data_size;$/;"	m	struct:ModuleData
module_name	ago/ago_internal.h	/^	char module_name[MAX_MODULE_NAME_SIZE];$/;"	m	struct:ModuleData
module_path	ago/ago_internal.h	/^	char module_path[MAX_MODULE_PATH_SIZE];$/;"	m	struct:ModuleData
modules	ago/ago_internal.h	/^	std::vector<ModuleData> modules;$/;"	m	struct:AgoContext
mtx	ago/ago_platform.cpp	/^	mutex mtx;$/;"	m	struct:__anon23	file:
n_offset	ago/ago_haf_cpu_canny.cpp	/^static const int n_offset[][2][2] = {$/;"	v	file:
name	ago/ago_internal.h	/^	char name[256];$/;"	m	struct:MacroData
name	ago/ago_internal.h	/^	std::string name;$/;"	m	struct:AgoData
name	ago/ago_internal.h	/^	std::string name;$/;"	m	struct:AgoUserStruct
name	ago/ago_internal.h	/^	vx_char name[VX_MAX_KERNEL_NAME];$/;"	m	struct:AgoKernel
name	ago/ago_kernel_list.cpp	/^	const char * name;$/;"	m	struct:__anon9	file:
name	ago/ago_util.cpp	/^static struct { const char * name; vx_enum value; vx_size size; } s_table_constants[] = {$/;"	m	struct:__anon1	file:
name	include/VX/vx_types.h	/^    vx_char name[VX_MAX_KERNEL_NAME];$/;"	m	struct:_vx_kernel_info_t
needed_as_a_kernel_argument	ago/ago_internal.h	/^	bool needed_as_a_kernel_argument;$/;"	m	struct:AgoSuperNodeDataInfo
neighborhood	include/VX/vx_khr_tiling.h	/^    vx_neighborhood_size_t neighborhood;$/;"	m	struct:_vx_tile_t
next	ago/ago_internal.h	/^	AgoData * next;$/;"	m	struct:AgoData
next	ago/ago_internal.h	/^	AgoGraph * next;$/;"	m	struct:AgoGraph
next	ago/ago_internal.h	/^	AgoKernel * next;$/;"	m	struct:AgoKernel
next	ago/ago_internal.h	/^	AgoNode * next;$/;"	m	struct:AgoNode
next	ago/ago_internal.h	/^	AgoSuperNode * next;$/;"	m	struct:AgoSuperNode
nextMapId	ago/ago_internal.h	/^	vx_map_id nextMapId;$/;"	m	struct:AgoData
nextUserKernelId	ago/ago_internal.h	/^	vx_uint32 nextUserKernelId;$/;"	m	struct:AgoContext
nextUserLibraryId	ago/ago_internal.h	/^	vx_uint32 nextUserLibraryId;$/;"	m	struct:AgoContext
nextUserStructId	ago/ago_internal.h	/^	vx_enum nextUserStructId;$/;"	m	struct:AgoContext
nodeList	ago/ago_internal.h	/^	AgoNodeList nodeList;$/;"	m	struct:AgoGraph
nodeList	ago/ago_internal.h	/^	std::vector<AgoNode *> nodeList;$/;"	m	struct:AgoSuperNode
num	include/VX/vx_types.h	/^    vx_uint64 num;          \/*!< \\brief Holds the number of measurements. *\/$/;"	m	struct:_vx_perf_t
numChildren	ago/ago_internal.h	/^	vx_uint32 numChildren;$/;"	m	struct:AgoData
num_active_modules	ago/ago_internal.h	/^	vx_uint32 num_active_modules;$/;"	m	struct:AgoContext
num_active_references	ago/ago_internal.h	/^	vx_uint32 num_active_references;$/;"	m	struct:AgoContext
num_bins	include/VX/vx_types.h	/^    vx_int32 num_bins;$/;"	m	struct:__anon24
num_dims	ago/ago_internal.h	/^	vx_size num_dims;$/;"	m	struct:AgoConfigTensor
num_ref	include/vx_ext_amd.h	/^	vx_uint32 num_ref;$/;"	m	struct:__anon28
num_ref	include/vx_ext_amd.h	/^	vx_uint32 num_ref;$/;"	m	struct:__anon29
numbins	ago/ago_internal.h	/^	vx_size numbins;$/;"	m	struct:AgoConfigDistribution
numitems	ago/ago_internal.h	/^	vx_size numitems;$/;"	m	struct:AgoConfigArray
offset	ago/ago_internal.h	/^	vx_int32 offset;$/;"	m	struct:AgoConfigDistribution
offset	ago/ago_internal.h	/^	vx_size offset;$/;"	m	struct:AgoConfigTensor
offset	ago/ago_internal.h	/^	vx_uint32 offset;$/;"	m	struct:AgoConfigLut
opencl_buffer	ago/ago_internal.h	/^	cl_mem     opencl_buffer;$/;"	m	struct:AgoData
opencl_buffer_access_enable	ago/ago_internal.h	/^	vx_bool opencl_buffer_access_enable;$/;"	m	struct:AgoKernel
opencl_buffer_allocated	ago/ago_internal.h	/^	cl_mem     opencl_buffer_allocated;$/;"	m	struct:AgoData
opencl_buffer_offset	ago/ago_internal.h	/^	vx_uint32  opencl_buffer_offset;$/;"	m	struct:AgoData
opencl_buffer_update_callback_f	ago/ago_internal.h	/^	amd_kernel_opencl_buffer_update_callback_f opencl_buffer_update_callback_f;$/;"	m	struct:AgoKernel
opencl_buffer_update_callback_f	include/vx_ext_amd.h	/^	amd_kernel_opencl_buffer_update_callback_f opencl_buffer_update_callback_f;$/;"	m	struct:__anon33
opencl_buffer_update_param_index	ago/ago_internal.h	/^	vx_uint32 opencl_buffer_update_param_index;$/;"	m	struct:AgoKernel
opencl_buffer_update_param_index	include/vx_ext_amd.h	/^	vx_uint32 opencl_buffer_update_param_index;$/;"	m	struct:__anon33
opencl_build_options	ago/ago_internal.h	/^	char opencl_build_options[256];$/;"	m	struct:AgoContext
opencl_build_options	ago/ago_internal.h	/^	std::string opencl_build_options;$/;"	m	struct:AgoNode
opencl_cmdq	ago/ago_internal.h	/^	cl_command_queue opencl_cmdq;$/;"	m	struct:AgoContext
opencl_cmdq	ago/ago_internal.h	/^	cl_command_queue opencl_cmdq;$/;"	m	struct:AgoGraph
opencl_cmdq	ago/ago_internal.h	/^	cl_command_queue opencl_cmdq;$/;"	m	struct:AgoSuperNode
opencl_cmdq_properties	ago/ago_internal.h	/^    cl_command_queue_properties opencl_cmdq_properties;$/;"	m	struct:AgoContext
opencl_code	ago/ago_internal.h	/^	std::string opencl_code;$/;"	m	struct:AgoNode
opencl_code	ago/ago_internal.h	/^	std::string opencl_code;$/;"	m	struct:AgoSuperNode
opencl_codegen_callback_f	ago/ago_internal.h	/^	amd_kernel_opencl_codegen_callback_f opencl_codegen_callback_f;$/;"	m	struct:AgoKernel
opencl_compute_work_multiplier	ago/ago_internal.h	/^	vx_uint32 opencl_compute_work_multiplier;$/;"	m	struct:AgoNode
opencl_compute_work_param_index	ago/ago_internal.h	/^	vx_uint32 opencl_compute_work_param_index;$/;"	m	struct:AgoNode
opencl_config_flags	ago/ago_internal.h	/^	vx_uint32 opencl_config_flags;$/;"	m	struct:AgoContext
opencl_context	ago/ago_internal.h	/^	cl_context   opencl_context;$/;"	m	struct:AgoContext
opencl_context_imported	ago/ago_internal.h	/^	bool opencl_context_imported;$/;"	m	struct:AgoContext
opencl_device	ago/ago_internal.h	/^	cl_device_id opencl_device;$/;"	m	struct:AgoGraph
opencl_device_list	ago/ago_internal.h	/^	cl_device_id opencl_device_list[16];$/;"	m	struct:AgoContext
opencl_event	ago/ago_internal.h	/^	cl_event opencl_event;$/;"	m	struct:AgoNode
opencl_event	ago/ago_internal.h	/^	cl_event opencl_event;$/;"	m	struct:AgoSuperNode
opencl_extensions	ago/ago_internal.h	/^	char opencl_extensions[1024];$/;"	m	struct:AgoContext
opencl_global_work	ago/ago_internal.h	/^	size_t opencl_global_work[3];$/;"	m	struct:AgoNode
opencl_global_work	ago/ago_internal.h	/^	size_t opencl_global_work[3];$/;"	m	struct:AgoSuperNode
opencl_global_work_update_callback_f	ago/ago_internal.h	/^	amd_kernel_opencl_global_work_update_callback_f opencl_global_work_update_callback_f;$/;"	m	struct:AgoKernel
opencl_kernel	ago/ago_internal.h	/^	cl_kernel opencl_kernel;$/;"	m	struct:AgoNode
opencl_kernel	ago/ago_internal.h	/^	cl_kernel opencl_kernel;$/;"	m	struct:AgoSuperNode
opencl_local_buffer_size_in_bytes	ago/ago_internal.h	/^	vx_uint32 opencl_local_buffer_size_in_bytes;$/;"	m	struct:AgoNode
opencl_local_buffer_usage_mask	ago/ago_internal.h	/^	vx_uint32 opencl_local_buffer_usage_mask;$/;"	m	struct:AgoNode
opencl_local_work	ago/ago_internal.h	/^	size_t opencl_local_work[3];$/;"	m	struct:AgoNode
opencl_local_work	ago/ago_internal.h	/^	size_t opencl_local_work[3];$/;"	m	struct:AgoSuperNode
opencl_mem_alloc_count	ago/ago_internal.h	/^	vx_size opencl_mem_alloc_count;$/;"	m	struct:AgoContext
opencl_mem_alloc_size	ago/ago_internal.h	/^	vx_size opencl_mem_alloc_size;$/;"	m	struct:AgoContext
opencl_mem_release_count	ago/ago_internal.h	/^	vx_size opencl_mem_release_count;$/;"	m	struct:AgoContext
opencl_name	ago/ago_internal.h	/^	char opencl_name[VX_MAX_KERNEL_NAME];$/;"	m	struct:AgoNode
opencl_nodeListQueued	ago/ago_internal.h	/^	std::vector<AgoNode *> opencl_nodeListQueued;$/;"	m	struct:AgoGraph
opencl_num_devices	ago/ago_internal.h	/^	cl_uint      opencl_num_devices;$/;"	m	struct:AgoContext
opencl_output_array_param_index_plus1	ago/ago_internal.h	/^	vx_uint32 opencl_output_array_param_index_plus1;$/;"	m	struct:AgoNode
opencl_param_as_value_mask	ago/ago_internal.h	/^	vx_uint32 opencl_param_as_value_mask;$/;"	m	struct:AgoNode
opencl_param_atomic_mask	ago/ago_internal.h	/^	vx_uint32 opencl_param_atomic_mask;$/;"	m	struct:AgoNode
opencl_param_discard_mask	ago/ago_internal.h	/^	vx_uint32 opencl_param_discard_mask;$/;"	m	struct:AgoNode
opencl_param_mem2reg_mask	ago/ago_internal.h	/^	vx_uint32 opencl_param_mem2reg_mask;$/;"	m	struct:AgoNode
opencl_perf	ago/ago_internal.h	/^	AgoGraphPerfInternalInfo_ opencl_perf, opencl_perf_total;$/;"	m	struct:AgoGraph
opencl_perf_total	ago/ago_internal.h	/^	AgoGraphPerfInternalInfo_ opencl_perf, opencl_perf_total;$/;"	m	struct:AgoGraph
opencl_program	ago/ago_internal.h	/^	cl_program opencl_program;$/;"	m	struct:AgoNode
opencl_program	ago/ago_internal.h	/^	cl_program opencl_program;$/;"	m	struct:AgoSuperNode
opencl_scalar_array_output_sync	ago/ago_internal.h	/^	struct { bool enable; int paramIndexScalar; int paramIndexArray; } opencl_scalar_array_output_sync;$/;"	m	struct:AgoNode	typeref:struct:AgoNode::__anon6
opencl_svm_buffer	ago/ago_internal.h	/^	vx_uint8 * opencl_svm_buffer;$/;"	m	struct:AgoData
opencl_svm_buffer_allocated	ago/ago_internal.h	/^	vx_uint8 * opencl_svm_buffer_allocated;$/;"	m	struct:AgoData
opencl_svmcaps	ago/ago_internal.h	/^	cl_device_svm_capabilities opencl_svmcaps;$/;"	m	struct:AgoContext
opencl_type	ago/ago_internal.h	/^	vx_uint32 opencl_type;$/;"	m	struct:AgoNode
opencl_work_dim	ago/ago_internal.h	/^	vx_uint32 opencl_work_dim;$/;"	m	struct:AgoNode
optimizer_flags	ago/ago_internal.h	/^	vx_uint32 optimizer_flags;$/;"	m	struct:AgoGraph
orientation	include/VX/vx_types.h	/^    vx_float32 orientation;     \/*!< \\brief Initialized to 0 by corner detectors. *\/$/;"	m	struct:_vx_keypoint_t
origin	ago/ago_internal.h	/^	vx_coordinates2d_t origin;$/;"	m	struct:AgoConfigMatrix
outputUsageCount	ago/ago_internal.h	/^	vx_uint32 inputUsageCount, outputUsageCount, inoutUsageCount;$/;"	m	struct:AgoData
output_validate_f	ago/ago_internal.h	/^	vx_kernel_output_validate_f output_validate_f;$/;"	m	struct:AgoKernel
overflow_policy	include/VX/vx_khr_nn.h	/^	vx_enum overflow_policy;         \/*!< \\brief A <tt> VX_TYPE_ENUM<\/tt> of the <tt> vx_convert_policy_e<\/tt> enumeration. *\/$/;"	m	struct:_vx_nn_convolution_params_t
overflow_policy	include/VX/vx_khr_nn.h	/^	vx_enum overflow_policy;         \/*!< \\brief A <tt> VX_TYPE_ENUM<\/tt> of the <tt> vx_convert_policy_e<\/tt> enumeration. *\/$/;"	m	struct:_vx_nn_deconvolution_params_t
ovxKernel_AbsDiff	ago/ago_kernel_api.cpp	/^int ovxKernel_AbsDiff(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Accumulate	ago/ago_kernel_api.cpp	/^int ovxKernel_Accumulate(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_AccumulateSquare	ago/ago_kernel_api.cpp	/^int ovxKernel_AccumulateSquare(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_AccumulateWeighted	ago/ago_kernel_api.cpp	/^int ovxKernel_AccumulateWeighted(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Add	ago/ago_kernel_api.cpp	/^int ovxKernel_Add(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_And	ago/ago_kernel_api.cpp	/^int ovxKernel_And(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Box3x3	ago/ago_kernel_api.cpp	/^int ovxKernel_Box3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_CannyEdgeDetector	ago/ago_kernel_api.cpp	/^int ovxKernel_CannyEdgeDetector(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_ChannelCombine	ago/ago_kernel_api.cpp	/^int ovxKernel_ChannelCombine(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_ChannelExtract	ago/ago_kernel_api.cpp	/^int ovxKernel_ChannelExtract(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_ColorConvert	ago/ago_kernel_api.cpp	/^int ovxKernel_ColorConvert(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_ConvertDepth	ago/ago_kernel_api.cpp	/^int ovxKernel_ConvertDepth(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Copy	ago/ago_kernel_api.cpp	/^int ovxKernel_Copy(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_CustomConvolution	ago/ago_kernel_api.cpp	/^int ovxKernel_CustomConvolution(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Dilate3x3	ago/ago_kernel_api.cpp	/^int ovxKernel_Dilate3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_EqualizeHistogram	ago/ago_kernel_api.cpp	/^int ovxKernel_EqualizeHistogram(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Erode3x3	ago/ago_kernel_api.cpp	/^int ovxKernel_Erode3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_FastCorners	ago/ago_kernel_api.cpp	/^int ovxKernel_FastCorners(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Gaussian3x3	ago/ago_kernel_api.cpp	/^int ovxKernel_Gaussian3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_GaussianPyramid	ago/ago_kernel_api.cpp	/^int ovxKernel_GaussianPyramid(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_HalfScaleGaussian	ago/ago_kernel_api.cpp	/^int ovxKernel_HalfScaleGaussian(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_HarrisCorners	ago/ago_kernel_api.cpp	/^int ovxKernel_HarrisCorners(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Histogram	ago/ago_kernel_api.cpp	/^int ovxKernel_Histogram(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_IntegralImage	ago/ago_kernel_api.cpp	/^int ovxKernel_IntegralImage(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Invalid	ago/ago_kernel_api.cpp	/^int ovxKernel_Invalid(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Magnitude	ago/ago_kernel_api.cpp	/^int ovxKernel_Magnitude(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_MeanStdDev	ago/ago_kernel_api.cpp	/^int ovxKernel_MeanStdDev(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Median3x3	ago/ago_kernel_api.cpp	/^int ovxKernel_Median3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_MinMaxLoc	ago/ago_kernel_api.cpp	/^int ovxKernel_MinMaxLoc(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Multiply	ago/ago_kernel_api.cpp	/^int ovxKernel_Multiply(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Not	ago/ago_kernel_api.cpp	/^int ovxKernel_Not(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_OpticalFlowPyrLK	ago/ago_kernel_api.cpp	/^int ovxKernel_OpticalFlowPyrLK(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Or	ago/ago_kernel_api.cpp	/^int ovxKernel_Or(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Phase	ago/ago_kernel_api.cpp	/^int ovxKernel_Phase(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Remap	ago/ago_kernel_api.cpp	/^int ovxKernel_Remap(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_ScaleImage	ago/ago_kernel_api.cpp	/^int ovxKernel_ScaleImage(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Select	ago/ago_kernel_api.cpp	/^int ovxKernel_Select(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Sobel3x3	ago/ago_kernel_api.cpp	/^int ovxKernel_Sobel3x3(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Subtract	ago/ago_kernel_api.cpp	/^int ovxKernel_Subtract(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_TableLookup	ago/ago_kernel_api.cpp	/^int ovxKernel_TableLookup(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Threshold	ago/ago_kernel_api.cpp	/^int ovxKernel_Threshold(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_WarpAffine	ago/ago_kernel_api.cpp	/^int ovxKernel_WarpAffine(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_WarpPerspective	ago/ago_kernel_api.cpp	/^int ovxKernel_WarpPerspective(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ovxKernel_Xor	ago/ago_kernel_api.cpp	/^int ovxKernel_Xor(AgoNode * node, AgoKernelCommand cmd)$/;"	f
ownerOfUserBufferOpenCL	ago/ago_internal.h	/^	struct AgoNode * ownerOfUserBufferOpenCL;$/;"	m	struct:AgoData	typeref:struct:AgoData::AgoNode
pImage	ago/ago_haf_cpu.h	/^	vx_uint8     * pImage;$/;"	m	struct:__anon18
padding_x	include/VX/vx_khr_nn.h	/^    vx_size padding_x;                 \/*!< \\brief Number of elements added at each side in the x dimension of the input. *\/$/;"	m	struct:_vx_nn_convolution_params_t
padding_x	include/VX/vx_khr_nn.h	/^    vx_size padding_x;                 \/*!< \\brief Number of elements subtracted at each side in the x dimension of the output. *\/$/;"	m	struct:_vx_nn_deconvolution_params_t
padding_y	include/VX/vx_khr_nn.h	/^    vx_size padding_y;                 \/*!< \\brief Number of elements added at each side in the y dimension of the input. *\/$/;"	m	struct:_vx_nn_convolution_params_t
padding_y	include/VX/vx_khr_nn.h	/^    vx_size padding_y;                 \/*!< \\brief Number of elements subtracted at each side in the y dimension of the output. *\/$/;"	m	struct:_vx_nn_deconvolution_params_t
paramCount	ago/ago_internal.h	/^	vx_uint32 paramCount;$/;"	m	struct:AgoNode
paramIndexArray	ago/ago_internal.h	/^	struct { bool enable; int paramIndexScalar; int paramIndexArray; } opencl_scalar_array_output_sync;$/;"	m	struct:AgoNode::__anon6
paramIndexScalar	ago/ago_internal.h	/^	struct { bool enable; int paramIndexScalar; int paramIndexArray; } opencl_scalar_array_output_sync;$/;"	m	struct:AgoNode::__anon6
paramList	ago/ago_internal.h	/^	AgoData * paramList[AGO_MAX_PARAMS];$/;"	m	struct:AgoNode
paramListForAgeDelay	ago/ago_internal.h	/^	AgoData * paramListForAgeDelay[AGO_MAX_PARAMS];$/;"	m	struct:AgoNode
parameters	ago/ago_internal.h	/^	AgoParameter parameters[AGO_MAX_PARAMS];$/;"	m	struct:AgoKernel
parameters	ago/ago_internal.h	/^	AgoParameter parameters[AGO_MAX_PARAMS];$/;"	m	struct:AgoNode
parameters	ago/ago_internal.h	/^	std::vector<vx_parameter> parameters;$/;"	m	struct:AgoGraph
parent	ago/ago_internal.h	/^	AgoData * parent;$/;"	m	struct:AgoData
pattern	ago/ago_internal.h	/^	vx_enum pattern;$/;"	m	struct:AgoConfigMatrix
perf	ago/ago_internal.h	/^	vx_perf_t perf;$/;"	m	struct:AgoGraph
perf	ago/ago_internal.h	/^	vx_perf_t perf;$/;"	m	struct:AgoNode
perf	ago/ago_internal.h	/^	vx_perf_t perf;$/;"	m	struct:AgoSuperNode
perfNormFactor	ago/ago_internal.h	/^	vx_uint64 perfNormFactor;$/;"	m	struct:AgoContext
performance_profile	ago/ago_internal.h	/^	std::vector<AgoProfileEntry> performance_profile;$/;"	m	struct:AgoGraph
pixelSizeInBitsDenom	include/vx_ext_amd.h	/^	vx_size            pixelSizeInBitsDenom;$/;"	m	struct:__anon25
pixelSizeInBitsNum	include/vx_ext_amd.h	/^	vx_size            pixelSizeInBitsNum;$/;"	m	struct:__anon25
pixel_size_in_bits_denom	ago/ago_internal.h	/^	vx_uint32 pixel_size_in_bits_denom;$/;"	m	struct:AgoConfigImage
pixel_size_in_bits_num	ago/ago_internal.h	/^	vx_uint32 pixel_size_in_bits_num;$/;"	m	struct:AgoConfigImage
plane	ago/ago_internal.h	/^	vx_uint32 plane;$/;"	m	struct:MappedData
planes	ago/ago_internal.h	/^	vx_size planes;$/;"	m	struct:AgoConfigImage
planes	include/VX/vx_khr_tiling.h	/^    vx_uint32 planes; \/*!< \\brief The number of planes in the image *\/$/;"	m	struct:_vx_image_description_t
planes	include/vx_ext_amd.h	/^	vx_size            planes;$/;"	m	struct:__anon25
platform	ago/ago_internal.h	/^	struct _vx_platform * platform; \/\/ platform handle to support Installable Client Driver (ICD) loader$/;"	m	struct:AgoReference	typeref:struct:AgoReference::_vx_platform
pool_type	include/VX/vx_khr_nn.h	/^	vx_enum pool_type;  \/*!< \\brief Of type <tt>\\ref vx_nn_pooling_type_e<\/tt>. Only <tt>\\ref VX_NN_POOLING_MAX<\/tt> pooling is supported. *\/$/;"	m	struct:_vx_nn_roi_pool_params_t
pt2f	ago/ago_haf_cpu_opticalflow.cpp	/^}pt2f;$/;"	t	typeref:struct:__anon7	file:
pt2i	ago/ago_haf_cpu_opticalflow.cpp	/^}pt2i;$/;"	t	typeref:struct:__anon8	file:
pt_copy	ago/ago_haf_cpu_opticalflow.cpp	/^static inline void pt_copy(pt2f &pt1, pt2f &pt2) { pt1.x = pt2.x; pt1.y = pt2.y; }$/;"	f	file:
pt_copy_scale	ago/ago_haf_cpu_opticalflow.cpp	/^static inline void pt_copy_scale(pt2f &pt1, pt2f &pt2, float &s) { pt1.x = pt2.x*s; pt1.y = pt2.y*s; }$/;"	f	file:
ptr	ago/ago_internal.h	/^	void * ptr;$/;"	m	struct:MappedData
pyr	ago/ago_internal.h	/^		AgoConfigPyramid pyr;$/;"	m	union:AgoData::__anon5
query_target_support_f	ago/ago_internal.h	/^	amd_kernel_query_target_support_f query_target_support_f;$/;"	m	struct:AgoKernel
range	ago/ago_internal.h	/^	vx_uint32 range;$/;"	m	struct:AgoConfigDistribution
range	include/VX/vx_khr_tiling.h	/^    vx_enum range;    \/*!< \\brief The <tt>\\ref vx_channel_range_e<\/tt> enumeration. *\/$/;"	m	struct:_vx_image_description_t
read_count	ago/ago_internal.h	/^	vx_uint32    read_count;      \/\/ number of times object has been read$/;"	m	struct:AgoReference
read_only	ago/ago_internal.h	/^	bool         read_only;       \/\/ read only$/;"	m	struct:AgoReference
rect_roi	ago/ago_internal.h	/^	vx_rectangle_t rect_roi;$/;"	m	struct:AgoConfigImage
rect_valid	ago/ago_internal.h	/^	vx_rectangle_t rect_valid;$/;"	m	struct:AgoConfigImage
rect_valid	ago/ago_internal.h	/^	vx_rectangle_t rect_valid;$/;"	m	struct:AgoConfigPyramid
ref	ago/ago_internal.h	/^	AgoReference ref;$/;"	m	struct:AgoContext
ref	ago/ago_internal.h	/^	AgoReference ref;$/;"	m	struct:AgoData
ref	ago/ago_internal.h	/^	AgoReference ref;$/;"	m	struct:AgoGraph
ref	ago/ago_internal.h	/^	AgoReference ref;$/;"	m	struct:AgoKernel
ref	ago/ago_internal.h	/^	AgoReference ref;$/;"	m	struct:AgoNode
ref	ago/ago_internal.h	/^	AgoReference ref;$/;"	m	struct:AgoParameter
ref	ago/ago_internal.h	/^	vx_reference        ref;$/;"	m	struct:AgoProfileEntry
ref	include/vx_ext_amd.h	/^	vx_reference * ref;$/;"	m	struct:__anon28
ref	include/vx_ext_amd.h	/^	vx_reference * ref;$/;"	m	struct:__anon29
regen_callback_f	ago/ago_internal.h	/^	amd_kernel_node_regen_callback_f regen_callback_f;$/;"	m	struct:AgoKernel
remap	ago/ago_internal.h	/^		AgoConfigRemap remap;$/;"	m	union:AgoData::__anon5
remap_fractional_bits	ago/ago_internal.h	/^	vx_uint32 remap_fractional_bits;$/;"	m	struct:AgoConfigRemap
replace	include/vx_ext_amd.h	/^	} replace[AGO_MERGE_RULE_MAX_REPLACE];$/;"	m	struct:AgoNodeMergeRule_t	typeref:struct:AgoNodeMergeRule_t::__anon32
replaceString	ago/ago_util_opencl.cpp	/^static void replaceString(std::string& str, const std::string& from, const std::string& to)$/;"	f	file:
replace_kernel_id	ago/ago_drama_remove.cpp	/^	vx_enum    replace_kernel_id;$/;"	m	struct:AgoImageU8toU1Rule_t	file:
requested_size	ago/ago_internal.h	/^	vx_size requested_size;$/;"	m	struct:AgoAllocInfo
reserved	ago/ago_internal.h	/^	vx_uint32 reserved;$/;"	m	struct:AgoTargetAffinityInfo_
reserved	ago/ago_internal.h	/^	vx_uint8 * reserved;$/;"	m	struct:AgoData
reserved	include/VX/vx_types.h	/^    vx_uint8 reserved[16];$/;"	m	union:_vx_pixel_value_t
reserved	include/vx_ext_amd.h	/^	vx_uint32 reserved[2]; \/\/ reserved -- shall be initialized to ZERO and shall not be modified$/;"	m	struct:__anon26
reserved_allocated	ago/ago_internal.h	/^	vx_uint8 * reserved_allocated;$/;"	m	struct:AgoData
retain_count	ago/ago_internal.h	/^	vx_int32 retain_count;$/;"	m	struct:AgoAllocInfo
rho	include/VX/vx_types.h	/^    vx_float32 rho;$/;"	m	struct:_vx_hough_lines_p_t
right	include/VX/vx_khr_tiling.h	/^    vx_int32 right;  \/*!< \\brief Right of the tile block. *\/$/;"	m	struct:_vx_neighborhood_size_t
roiDepList	ago/ago_internal.h	/^	std::list<AgoData *> roiDepList;$/;"	m	struct:AgoData
roiMaster	ago/ago_internal.h	/^	AgoData * roiMaster;$/;"	m	struct:AgoConfigTensor
roiMasterImage	ago/ago_internal.h	/^	AgoData * roiMasterImage;$/;"	m	struct:AgoConfigImage
rounding_policy	include/VX/vx_khr_nn.h	/^    vx_enum rounding_policy;         \/*!< \\brief A <tt> VX_TYPE_ENUM<\/tt> of the <tt> vx_round_policy_e<\/tt> enumeration. *\/$/;"	m	struct:_vx_nn_convolution_params_t
rounding_policy	include/VX/vx_khr_nn.h	/^    vx_enum rounding_policy;         \/*!< \\brief A <tt> VX_TYPE_ENUM<\/tt> of the <tt> vx_round_policy_e<\/tt> enumeration. *\/$/;"	m	struct:_vx_nn_deconvolution_params_t
rows	ago/ago_internal.h	/^	vx_size rows;$/;"	m	struct:AgoConfigConvolution
rows	ago/ago_internal.h	/^	vx_size rows;$/;"	m	struct:AgoConfigMatrix
s	ago/ago_haf_cpu.h	/^	vx_float32 s; \/\/ stregnth$/;"	m	struct:__anon17
s	ago/ago_internal.h	/^		vx_size s;$/;"	m	union:AgoConfigScalar::__anon4
s_U8toU1_rule	ago/ago_drama_remove.cpp	/^static AgoImageU8toU1Rule s_U8toU1_rule[] = {$/;"	v	file:
s_U8toU1_rule_count	ago/ago_drama_remove.cpp	/^static vx_uint32 s_U8toU1_rule_count = sizeof(s_U8toU1_rule) \/ sizeof(s_U8toU1_rule[0]);$/;"	v	file:
s_merge_rule	ago/ago_drama_remove.cpp	/^static AgoNodeMergeRule s_merge_rule[] = {$/;"	v	file:
s_merge_rule_count	ago/ago_drama_remove.cpp	/^static vx_uint32 s_merge_rule_count = sizeof(s_merge_rule) \/ sizeof(s_merge_rule[0]);$/;"	v	file:
s_table_constants	ago/ago_util.cpp	/^static struct { const char * name; vx_enum value; vx_size size; } s_table_constants[] = {$/;"	v	typeref:struct:__anon1	file:
sampleCount	ago/ago_haf_cpu.h	/^	vx_uint32  sampleCount;$/;"	m	struct:__anon19
scalar	ago/ago_internal.h	/^		AgoConfigScalar scalar;$/;"	m	union:AgoData::__anon5
scale	ago/ago_internal.h	/^	vx_float32 scale;$/;"	m	struct:AgoConfigPyramid
scale	include/VX/vx_types.h	/^    vx_float32 scale;           \/*!< \\brief Initialized to 0 by corner detectors. *\/$/;"	m	struct:_vx_keypoint_t
scale_x	include/VX/vx_types.h	/^    vx_uint32 scale_x;      \/*!< \\brief Scale of X dimension. For sub-sampled planes this is the scaling factor of the dimension of the plane in relation to the zero plane. Use <tt>\\ref VX_SCALE_UNITY<\/tt> in the numerator. *\/$/;"	m	struct:_vx_imagepatch_addressing_t
scale_y	include/VX/vx_types.h	/^    vx_uint32 scale_y;      \/*!< \\brief Scale of Y dimension. For sub-sampled planes this is the scaling factor of the dimension of the plane in relation to the zero plane. Use <tt>\\ref VX_SCALE_UNITY<\/tt> in the numerator.  *\/$/;"	m	struct:_vx_imagepatch_addressing_t
scalemat	ago/ago_internal.h	/^		AgoConfigScaleMatrix scalemat;$/;"	m	union:AgoData::__anon5
scharrFilter_3x3_x	ago/ago_haf_gpu_special_filters.cpp	/^static float scharrFilter_3x3_x[3][3] = {$/;"	v	file:
scharrFilter_3x3_y	ago/ago_haf_gpu_special_filters.cpp	/^static float scharrFilter_3x3_y[3][3] = {$/;"	v	file:
scope	ago/ago_internal.h	/^	AgoReference * scope;         \/\/ scope parent -- for virtual objects, this will be graph$/;"	m	struct:AgoReference
scope	ago/ago_internal.h	/^	AgoReference * scope;$/;"	m	struct:AgoParameter
set_valid_rectangle_callback	ago/ago_internal.h	/^	vx_kernel_image_valid_rectangle_f set_valid_rectangle_callback;$/;"	m	struct:AgoMetaFormat
shift	ago/ago_internal.h	/^	vx_uint32 shift;$/;"	m	struct:AgoConfigConvolution
siblingIndex	ago/ago_internal.h	/^	vx_int32 siblingIndex;$/;"	m	struct:AgoData
size	ago/ago_internal.h	/^	vx_size size;$/;"	m	struct:AgoData
size	ago/ago_internal.h	/^	vx_size size;$/;"	m	struct:AgoUserStruct
size	ago/ago_util.cpp	/^static struct { const char * name; vx_enum value; vx_size size; } s_table_constants[] = {$/;"	m	struct:__anon1	file:
sobelFilter_3x3_x	ago/ago_haf_gpu_special_filters.cpp	/^static float sobelFilter_3x3_x[3][3] = {$/;"	v	file:
sobelFilter_3x3_y	ago/ago_haf_gpu_special_filters.cpp	/^static float sobelFilter_3x3_y[3][3] = {$/;"	v	file:
sobelFilter_5x5_x	ago/ago_haf_gpu_special_filters.cpp	/^static float sobelFilter_5x5_x[5][5] = {$/;"	v	file:
sobelFilter_5x5_y	ago/ago_haf_gpu_special_filters.cpp	/^static float sobelFilter_5x5_y[5][5] = {$/;"	v	file:
sobelFilter_7x7_x	ago/ago_haf_gpu_special_filters.cpp	/^static float sobelFilter_7x7_x[7][7] = {$/;"	v	file:
sobelFilter_7x7_y	ago/ago_haf_gpu_special_filters.cpp	/^static float sobelFilter_7x7_y[7][7] = {$/;"	v	file:
space	include/VX/vx_khr_tiling.h	/^    vx_enum space;    \/*!< \\brief The <tt>\\ref vx_color_space_e<\/tt> enumeration. *\/$/;"	m	struct:_vx_image_description_t
split	ago/ago_util.cpp	/^std::vector<std::string> split(const char * s_, char delim) {$/;"	f
split	ago/ago_util.cpp	/^std::vector<std::string> split(const std::string &s, char delim) {$/;"	f
src_height	ago/ago_internal.h	/^	vx_uint32 src_height;$/;"	m	struct:AgoConfigRemap
src_width	ago/ago_internal.h	/^	vx_uint32 src_width;$/;"	m	struct:AgoConfigRemap
stackTop	ago/ago_internal.h	/^	vx_uint32 stackTop;$/;"	m	struct:AgoConfigCannyStack
start	ago/ago_internal.h	/^	vx_size start[AGO_MAX_TENSOR_DIMENSIONS];$/;"	m	struct:AgoConfigTensor
start_x	include/VX/vx_types.h	/^    vx_float32 start_x;$/;"	m	struct:_vx_line2d_t
start_x	include/VX/vx_types.h	/^    vx_uint32 start_x;          \/*!< \\brief The Start X coordinate. *\/$/;"	m	struct:_vx_rectangle_t
start_y	include/VX/vx_types.h	/^    vx_float32 start_y;$/;"	m	struct:_vx_line2d_t
start_y	include/VX/vx_types.h	/^    vx_uint32 start_y;          \/*!< \\brief The Start Y coordinate. *\/$/;"	m	struct:_vx_rectangle_t
state	ago/ago_internal.h	/^	vx_parameter_state_e state;$/;"	m	struct:AgoParameter
status	ago/ago_internal.h	/^	vx_int32 status;$/;"	m	struct:AgoGraph
status	ago/ago_internal.h	/^	vx_status    status;          \/\/ error status$/;"	m	struct:AgoReference
status	ago/ago_internal.h	/^	vx_status status;$/;"	m	struct:AgoNode
status	ago/ago_internal.h	/^	vx_status status;$/;"	m	struct:AgoSuperNode
step_x	include/VX/vx_types.h	/^    vx_uint32 step_x;       \/*!< \\brief Step of X dimension in pixels. *\/$/;"	m	struct:_vx_imagepatch_addressing_t
step_y	include/VX/vx_types.h	/^    vx_uint32 step_y;       \/*!< \\brief Step of Y dimension in pixels. *\/$/;"	m	struct:_vx_imagepatch_addressing_t
strength	include/VX/vx_types.h	/^    vx_float32 strength;        \/*!< \\brief The strength of the keypoint. Its definition is specific to the corner detector. *\/$/;"	m	struct:_vx_keypoint_t
stride	ago/ago_internal.h	/^	vx_size stride;$/;"	m	struct:MappedData
stride	ago/ago_internal.h	/^	vx_size stride[AGO_MAX_TENSOR_DIMENSIONS];$/;"	m	struct:AgoConfigTensor
strideInBytes	ago/ago_haf_cpu.h	/^	vx_uint32      strideInBytes;$/;"	m	struct:__anon18
stride_in_bytes	ago/ago_internal.h	/^	vx_uint32 stride_in_bytes;$/;"	m	struct:AgoConfigImage
stride_x	include/VX/vx_types.h	/^    vx_int32  stride_x;     \/*!< \\brief Stride in X dimension in bytes. *\/$/;"	m	struct:_vx_imagepatch_addressing_t
stride_y	include/VX/vx_types.h	/^    vx_int32  stride_y;     \/*!< \\brief Stride in Y dimension in bytes. *\/$/;"	m	struct:_vx_imagepatch_addressing_t
sum	ago/ago_haf_cpu.h	/^	vx_float32 sum;$/;"	m	struct:__anon19
sum	include/VX/vx_types.h	/^    vx_uint64 sum;          \/*!< \\brief Holds the summation of durations. *\/$/;"	m	struct:_vx_perf_t
sumSquared	ago/ago_haf_cpu.h	/^	vx_float32 sumSquared;$/;"	m	struct:__anon19
supernode	ago/ago_internal.h	/^	AgoSuperNode * supernode;$/;"	m	struct:AgoNode
supernodeList	ago/ago_internal.h	/^	AgoSuperNode * supernodeList;$/;"	m	struct:AgoGraph
tail	ago/ago_internal.h	/^	AgoData * tail;$/;"	m	struct:AgoDataList
tail	ago/ago_internal.h	/^	AgoGraph * tail;$/;"	m	struct:AgoGraphList
tail	ago/ago_internal.h	/^	AgoKernel * tail;$/;"	m	struct:AgoKernelList
tail	ago/ago_internal.h	/^	AgoNode * tail;$/;"	m	struct:AgoNodeList
target_support_flags	ago/ago_internal.h	/^	vx_uint32 target_support_flags;$/;"	m	struct:AgoNode
tensor	ago/ago_internal.h	/^		AgoConfigTensor tensor;$/;"	m	union:AgoData::__anon5
text	ago/ago_internal.h	/^	char * text;$/;"	m	struct:MacroData
text	include/vx_ext_amd.h	/^	vx_char * text;$/;"	m	struct:__anon27
text	include/vx_ext_amd.h	/^	vx_char * text;$/;"	m	struct:__anon28
text_allocated	ago/ago_internal.h	/^	char * text_allocated;$/;"	m	struct:MacroData
theta	include/VX/vx_types.h	/^    vx_float32 theta;$/;"	m	struct:_vx_hough_lines_p_t
theta_max	include/VX/vx_types.h	/^    vx_float32 theta_max;$/;"	m	struct:_vx_hough_lines_p_t
theta_min	include/VX/vx_types.h	/^    vx_float32 theta_min;$/;"	m	struct:_vx_hough_lines_p_t
thr	ago/ago_internal.h	/^		AgoConfigThreshold thr;$/;"	m	union:AgoData::__anon5
threadExecuteCount	ago/ago_internal.h	/^	vx_int32 threadScheduleCount, threadExecuteCount, threadWaitCount, threadThreadTerminationState;$/;"	m	struct:AgoGraph
threadScheduleCount	ago/ago_internal.h	/^	vx_int32 threadScheduleCount, threadExecuteCount, threadWaitCount, threadThreadTerminationState;$/;"	m	struct:AgoGraph
threadThreadTerminationState	ago/ago_internal.h	/^	vx_int32 threadScheduleCount, threadExecuteCount, threadWaitCount, threadThreadTerminationState;$/;"	m	struct:AgoGraph
threadWaitCount	ago/ago_internal.h	/^	vx_int32 threadScheduleCount, threadExecuteCount, threadWaitCount, threadThreadTerminationState;$/;"	m	struct:AgoGraph
thread_config	ago/ago_internal.h	/^	vx_uint32 thread_config;$/;"	m	struct:AgoContext
thresh_type	ago/ago_internal.h	/^	vx_enum thresh_type;$/;"	m	struct:AgoConfigThreshold
threshold	include/VX/vx_types.h	/^    vx_float32 threshold;$/;"	m	struct:__anon24
threshold	include/VX/vx_types.h	/^    vx_int32 threshold;$/;"	m	struct:_vx_hough_lines_p_t
threshold_lower	ago/ago_internal.h	/^	vx_int32 threshold_lower, threshold_upper;$/;"	m	struct:AgoConfigThreshold
threshold_upper	ago/ago_internal.h	/^	vx_int32 threshold_lower, threshold_upper;$/;"	m	struct:AgoConfigThreshold
tile_block	include/VX/vx_khr_tiling.h	/^    vx_tile_block_size_t tile_block;$/;"	m	struct:_vx_tile_t
tile_x	include/VX/vx_khr_tiling.h	/^    vx_uint32 tile_x;$/;"	m	struct:_vx_tile_t
tile_y	include/VX/vx_khr_tiling.h	/^    vx_uint32 tile_y;$/;"	m	struct:_vx_tile_t
time	ago/ago_internal.h	/^	int64_t             time;$/;"	m	struct:AgoProfileEntry
tmp	include/VX/vx_types.h	/^    vx_uint64 tmp;          \/*!< \\brief Holds the last measurement. *\/$/;"	m	struct:_vx_perf_t
top	include/VX/vx_khr_tiling.h	/^    vx_int32 top;    \/*!< \\brief Top of the tile block. *\/$/;"	m	struct:_vx_neighborhood_size_t
tracking_status	include/VX/vx_types.h	/^    vx_int32 tracking_status;   \/*!< \\brief A zero indicates a lost point. Initialized to 1 by corner detectors. *\/$/;"	m	struct:_vx_keypoint_t
transpose_input1	include/VX/vx_types.h	/^	vx_bool  transpose_input1;$/;"	m	struct:_vx_tensor_matrix_multiply_params_t
transpose_input2	include/VX/vx_types.h	/^	vx_bool  transpose_input2;$/;"	m	struct:_vx_tensor_matrix_multiply_params_t
transpose_input3	include/VX/vx_types.h	/^	vx_bool  transpose_input3;$/;"	m	struct:_vx_tensor_matrix_multiply_params_t
trash	ago/ago_internal.h	/^	AgoData * trash;$/;"	m	struct:AgoDataList
trash	ago/ago_internal.h	/^	AgoNode * trash;$/;"	m	struct:AgoNodeList
true_value	ago/ago_internal.h	/^	vx_int32 true_value, false_value;$/;"	m	struct:AgoConfigThreshold
type	ago/ago_internal.h	/^	AgoProfileEntryType type;$/;"	m	struct:AgoProfileEntry
type	ago/ago_internal.h	/^	vx_enum      type;            \/\/ object type$/;"	m	struct:AgoReference
type	ago/ago_internal.h	/^	vx_enum type;$/;"	m	struct:AgoConfigDelay
type	ago/ago_internal.h	/^	vx_enum type;$/;"	m	struct:AgoConfigLut
type	ago/ago_internal.h	/^	vx_enum type;$/;"	m	struct:AgoConfigMatrix
type	ago/ago_internal.h	/^	vx_enum type;$/;"	m	struct:AgoConfigScalar
type	ago/ago_internal.h	/^	vx_enum type;$/;"	m	struct:AgoParameter
type	ago/ago_platform.cpp	/^	int type; \/\/ should be VX_SEMAPHORE$/;"	m	struct:__anon23	file:
u	ago/ago_internal.h	/^		vx_uint32 u;$/;"	m	union:AgoConfigScalar::__anon4
u	ago/ago_internal.h	/^	} u;$/;"	m	struct:AgoConfigScalar	typeref:union:AgoConfigScalar::__anon4
u	ago/ago_internal.h	/^	} u;$/;"	m	struct:AgoData	typeref:union:AgoData::__anon5
u64	ago/ago_internal.h	/^		vx_uint64 u64;$/;"	m	union:AgoConfigScalar::__anon4
uniform	ago/ago_internal.h	/^	vx_size uniform[4];$/;"	m	struct:AgoConfigImage
usage	ago/ago_internal.h	/^	vx_enum usage;$/;"	m	struct:MappedData
used_external_ptr	ago/ago_internal.h	/^	bool used_external_ptr;$/;"	m	struct:MappedData
userStructList	ago/ago_internal.h	/^	std::vector<AgoUserStruct> userStructList;$/;"	m	struct:AgoContext
valid_rect_inputs	ago/ago_internal.h	/^	vx_rectangle_t ** valid_rect_inputs;$/;"	m	struct:AgoNode
valid_rect_num_inputs	ago/ago_internal.h	/^	vx_uint32 valid_rect_num_inputs;$/;"	m	struct:AgoNode
valid_rect_num_outputs	ago/ago_internal.h	/^	vx_uint32 valid_rect_num_outputs;$/;"	m	struct:AgoNode
valid_rect_outputs	ago/ago_internal.h	/^	vx_rectangle_t ** valid_rect_outputs;$/;"	m	struct:AgoNode
valid_rect_reset	ago/ago_internal.h	/^	vx_bool valid_rect_reset;$/;"	m	struct:AgoNode
validate_f	ago/ago_internal.h	/^	vx_kernel_validate_f validate_f;$/;"	m	struct:AgoKernel
value	ago/ago_util.cpp	/^static struct { const char * name; vx_enum value; vx_size size; } s_table_constants[] = {$/;"	m	struct:__anon1	file:
verified	ago/ago_internal.h	/^	bool verified;$/;"	m	struct:AgoGraph
virtualDataGenerationCount	ago/ago_internal.h	/^	vx_uint32 virtualDataGenerationCount;$/;"	m	struct:AgoGraph
vxAbsDiffNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxAbsDiffNode(vx_graph graph, vx_image in1, vx_image in2, vx_image out)$/;"	f
vxAccessArrayRange	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxAccessArrayRange(vx_array arr, vx_size start, vx_size end, vx_size *stride, void **ptr, vx_enum usage)$/;"	f
vxAccessDistribution	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxAccessDistribution(vx_distribution distribution, void **ptr, vx_enum usage)$/;"	f
vxAccessImagePatch	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxAccessImagePatch(vx_image image_,$/;"	f
vxAccessLUT	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxAccessLUT(vx_lut lut, void **ptr, vx_enum usage)$/;"	f
vxAccumulateImageNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxAccumulateImageNode(vx_graph graph, vx_image input, vx_image accum)$/;"	f
vxAccumulateSquareImageNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxAccumulateSquareImageNode(vx_graph graph, vx_image input, vx_scalar scalar, vx_image accum)$/;"	f
vxAccumulateWeightedImageNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxAccumulateWeightedImageNode(vx_graph graph, vx_image input, vx_scalar alpha, vx_image accum)$/;"	f
vxAddArrayItems	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxAddArrayItems(vx_array arr, vx_size count, const void *ptr, vx_size stride)$/;"	f
vxAddKernel	api/vx_api.cpp	/^VX_API_ENTRY vx_kernel VX_API_CALL vxAddKernel(vx_context context,$/;"	f
vxAddLogEntry	api/vx_api.cpp	/^VX_API_ENTRY void VX_API_CALL vxAddLogEntry(vx_reference ref, vx_status status, const char *message, ...)$/;"	f
vxAddNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxAddNode(vx_graph graph, vx_image in1, vx_image in2, vx_enum policy, vx_image out)$/;"	f
vxAddParameterToGraph	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxAddParameterToGraph(vx_graph graph, vx_parameter parameter)$/;"	f
vxAddParameterToKernel	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxAddParameterToKernel(vx_kernel kernel, vx_uint32 index, vx_enum dir, vx_enum data_type, vx_enum state)$/;"	f
vxAddUserKernel	api/vx_api.cpp	/^VX_API_ENTRY vx_kernel VX_API_CALL vxAddUserKernel(vx_context context,$/;"	f
vxAgeDelay	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxAgeDelay(vx_delay delay)$/;"	f
vxAliasTensor	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxAliasTensor(vx_tensor tensorMaster, vx_size offset, vx_tensor tensor)$/;"	f
vxAllocateUserKernelId	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxAllocateUserKernelId(vx_context context, vx_enum * pKernelEnumId)$/;"	f
vxAllocateUserKernelLibraryId	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxAllocateUserKernelLibraryId(vx_context context, vx_enum * pLibraryId)$/;"	f
vxAndNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxAndNode(vx_graph graph, vx_image in1, vx_image in2, vx_image out)$/;"	f
vxArrayItem	include/VX/vx_api.h	2887;"	d
vxAssignNodeCallback	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxAssignNodeCallback(vx_node node, vx_nodecomplete_f callback)$/;"	f
vxBox3x3Node	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxBox3x3Node(vx_graph graph, vx_image input, vx_image output)$/;"	f
vxCannyEdgeDetectorNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxCannyEdgeDetectorNode(vx_graph graph, vx_image input, vx_threshold hyst,$/;"	f
vxChannelCombineNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxChannelCombineNode(vx_graph graph,$/;"	f
vxChannelExtractNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxChannelExtractNode(vx_graph graph,$/;"	f
vxColorConvertNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxColorConvertNode(vx_graph graph, vx_image input, vx_image output)$/;"	f
vxCommitArrayRange	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxCommitArrayRange(vx_array arr, vx_size start, vx_size end, const void *ptr)$/;"	f
vxCommitDistribution	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxCommitDistribution(vx_distribution distribution, const void * ptr)$/;"	f
vxCommitImagePatch	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxCommitImagePatch(vx_image image_,$/;"	f
vxCommitLUT	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxCommitLUT(vx_lut lut, const void *ptr)$/;"	f
vxComputeImagePatchSize	api/vx_api.cpp	/^VX_API_ENTRY vx_size VX_API_CALL vxComputeImagePatchSize(vx_image image_,$/;"	f
vxComputePatchOffset	api/vx_api.cpp	/^static inline vx_uint32 vxComputePatchOffset(vx_uint32 x, vx_uint32 y, const vx_imagepatch_addressing_t *addr)$/;"	f	file:
vxConvertDepthNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxConvertDepthNode(vx_graph graph, vx_image input, vx_image output, vx_enum policy, vx_scalar shift)$/;"	f
vxConvolveNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxConvolveNode(vx_graph graph, vx_image input, vx_convolution conv, vx_image output)$/;"	f
vxCopyArrayRange	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxCopyArrayRange(vx_array array, vx_size range_start, vx_size range_end, vx_size user_stride, void *user_ptr, vx_enum usage, vx_enum user_mem_type)$/;"	f
vxCopyConvolutionCoefficients	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxCopyConvolutionCoefficients(vx_convolution conv, void *user_ptr, vx_enum usage, vx_enum user_mem_type)$/;"	f
vxCopyDistribution	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxCopyDistribution(vx_distribution distribution, void *user_ptr, vx_enum usage, vx_enum user_mem_type)$/;"	f
vxCopyImagePatch	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxCopyImagePatch(vx_image image_, const vx_rectangle_t *image_rect, vx_uint32 image_plane_index, const vx_imagepatch_addressing_t *user_addr, void * user_ptr, vx_enum usage, vx_enum user_mem_type)$/;"	f
vxCopyLUT	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxCopyLUT(vx_lut lut, void *user_ptr, vx_enum usage, vx_enum user_mem_type)$/;"	f
vxCopyMatrix	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxCopyMatrix(vx_matrix matrix, void *user_ptr, vx_enum usage, vx_enum user_mem_type)$/;"	f
vxCopyNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxCopyNode(vx_graph graph, vx_reference input, vx_reference output)$/;"	f
vxCopyScalar	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxCopyScalar(vx_scalar scalar_, void *user_ptr, vx_enum usage, vx_enum user_mem_type)$/;"	f
vxCopyScalarWithSize	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxCopyScalarWithSize(vx_scalar scalar_, vx_size size, void *user_ptr, vx_enum usage, vx_enum user_mem_type)$/;"	f
vxCopyTensorPatch	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxCopyTensorPatch(vx_tensor tensor, vx_size num_of_dims, const vx_size * roi_start, const vx_size * roi_end, const vx_size * user_stride, void * user_ptr, vx_enum usage, vx_enum user_mem_type)$/;"	f
vxCreateArray	api/vx_api.cpp	/^VX_API_ENTRY vx_array VX_API_CALL vxCreateArray(vx_context context, vx_enum item_type, vx_size capacity)$/;"	f
vxCreateContext	api/vx_api.cpp	/^VX_API_ENTRY vx_context VX_API_CALL vxCreateContext()$/;"	f
vxCreateContextFromPlatform	api/vx_api.cpp	/^VX_API_ENTRY vx_context VX_API_CALL vxCreateContextFromPlatform(struct _vx_platform * platform)$/;"	f
vxCreateConvolution	api/vx_api.cpp	/^VX_API_ENTRY vx_convolution VX_API_CALL vxCreateConvolution(vx_context context, vx_size columns, vx_size rows)$/;"	f
vxCreateDelay	api/vx_api.cpp	/^VX_API_ENTRY vx_delay VX_API_CALL vxCreateDelay(vx_context context,$/;"	f
vxCreateDistribution	api/vx_api.cpp	/^VX_API_ENTRY vx_distribution VX_API_CALL vxCreateDistribution(vx_context context, vx_size numBins, vx_int32 offset, vx_uint32 range)$/;"	f
vxCreateGenericNode	api/vx_api.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxCreateGenericNode(vx_graph graph, vx_kernel kernel)$/;"	f
vxCreateGraph	api/vx_api.cpp	/^VX_API_ENTRY vx_graph VX_API_CALL vxCreateGraph(vx_context context)$/;"	f
vxCreateImage	api/vx_api.cpp	/^VX_API_ENTRY vx_image VX_API_CALL vxCreateImage(vx_context context, vx_uint32 width, vx_uint32 height, vx_df_image color)$/;"	f
vxCreateImageFromChannel	api/vx_api.cpp	/^VX_API_ENTRY vx_image VX_API_CALL vxCreateImageFromChannel(vx_image img, vx_enum channel)$/;"	f
vxCreateImageFromHandle	api/vx_api.cpp	/^VX_API_ENTRY vx_image VX_API_CALL vxCreateImageFromHandle(vx_context context, vx_df_image color, const vx_imagepatch_addressing_t addrs[], void *const ptrs[], vx_enum memory_type)$/;"	f
vxCreateImageFromROI	api/vx_api.cpp	/^VX_API_ENTRY vx_image VX_API_CALL vxCreateImageFromROI(vx_image img, const vx_rectangle_t *rect)$/;"	f
vxCreateLUT	api/vx_api.cpp	/^VX_API_ENTRY vx_lut VX_API_CALL vxCreateLUT(vx_context context, vx_enum data_type, vx_size count)$/;"	f
vxCreateMatrix	api/vx_api.cpp	/^VX_API_ENTRY vx_matrix VX_API_CALL vxCreateMatrix(vx_context context, vx_enum data_type, vx_size columns, vx_size rows)$/;"	f
vxCreateMatrixFromPattern	api/vx_api.cpp	/^VX_API_ENTRY vx_matrix VX_API_CALL vxCreateMatrixFromPattern(vx_context context, vx_enum pattern, vx_size columns, vx_size rows)$/;"	f
vxCreateNodeByStructure	api/vx_nodes.cpp	/^static vx_node vxCreateNodeByStructure(vx_graph graph,$/;"	f	file:
vxCreatePyramid	api/vx_api.cpp	/^VX_API_ENTRY vx_pyramid VX_API_CALL vxCreatePyramid(vx_context context, vx_size levels, vx_float32 scale, vx_uint32 width, vx_uint32 height, vx_df_image format)$/;"	f
vxCreateRemap	api/vx_api.cpp	/^VX_API_ENTRY vx_remap VX_API_CALL vxCreateRemap(vx_context context,$/;"	f
vxCreateScalar	api/vx_api.cpp	/^VX_API_ENTRY vx_scalar VX_API_CALL vxCreateScalar(vx_context context, vx_enum data_type, const void *ptr)$/;"	f
vxCreateScalarWithSize	api/vx_api.cpp	/^VX_API_ENTRY vx_scalar VX_API_CALL vxCreateScalarWithSize(vx_context context, vx_enum data_type, const void *ptr, vx_size size)$/;"	f
vxCreateTensor	api/vx_api.cpp	/^VX_API_ENTRY vx_tensor VX_API_CALL vxCreateTensor(vx_context context, vx_size num_of_dims, const vx_size * dims, vx_enum data_format, vx_int8 fixed_point_pos)$/;"	f
vxCreateTensorFromHandle	api/vx_api.cpp	/^VX_API_ENTRY vx_tensor VX_API_CALL vxCreateTensorFromHandle(vx_context context, vx_size number_of_dims, const vx_size * dims, vx_enum data_type, vx_int8 fixed_point_position, const vx_size * stride, void * ptr, vx_enum memory_type)$/;"	f
vxCreateTensorFromView	api/vx_api.cpp	/^VX_API_ENTRY vx_tensor VX_API_CALL vxCreateTensorFromView(vx_tensor tensor, vx_size num_of_dims, const vx_size * roi_start, const vx_size * roi_end)$/;"	f
vxCreateThreshold	api/vx_api.cpp	/^VX_API_ENTRY vx_threshold VX_API_CALL vxCreateThreshold(vx_context context, vx_enum thresh_type, vx_enum data_type)$/;"	f
vxCreateUniformImage	api/vx_api.cpp	/^VX_API_ENTRY vx_image VX_API_CALL vxCreateUniformImage(vx_context context, vx_uint32 width, vx_uint32 height, vx_df_image color, const vx_pixel_value_t *value)$/;"	f
vxCreateVirtualArray	api/vx_api.cpp	/^VX_API_ENTRY vx_array VX_API_CALL vxCreateVirtualArray(vx_graph graph, vx_enum item_type, vx_size capacity)$/;"	f
vxCreateVirtualImage	api/vx_api.cpp	/^VX_API_ENTRY vx_image VX_API_CALL vxCreateVirtualImage(vx_graph graph, vx_uint32 width, vx_uint32 height, vx_df_image color)$/;"	f
vxCreateVirtualPyramid	api/vx_api.cpp	/^VX_API_ENTRY vx_pyramid VX_API_CALL vxCreateVirtualPyramid(vx_graph graph, vx_size levels, vx_float32 scale, vx_uint32 width, vx_uint32 height, vx_df_image format)$/;"	f
vxCreateVirtualTensor	api/vx_api.cpp	/^VX_API_ENTRY vx_tensor VX_API_CALL vxCreateVirtualTensor(vx_graph graph, vx_size num_of_dims, const vx_size * dims, vx_enum data_format, vx_int8 fixed_point_pos)$/;"	f
vxDilate3x3Node	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxDilate3x3Node(vx_graph graph, vx_image input, vx_image output)$/;"	f
vxDirective	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxDirective(vx_reference reference, vx_enum directive)$/;"	f
vxEqualizeHistNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxEqualizeHistNode(vx_graph graph, vx_image input, vx_image output)$/;"	f
vxErode3x3Node	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxErode3x3Node(vx_graph graph, vx_image input, vx_image output)$/;"	f
vxFastCornersNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxFastCornersNode(vx_graph graph, vx_image input, vx_scalar strength_thresh, vx_bool nonmax_supression, vx_array corners, vx_scalar num_corners)$/;"	f
vxFinalizeKernel	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxFinalizeKernel(vx_kernel kernel)$/;"	f
vxFormatArrayPointer	include/VX/vx_api.h	2876;"	d
vxFormatImagePatchAddress1d	api/vx_api.cpp	/^VX_API_ENTRY void * VX_API_CALL vxFormatImagePatchAddress1d(void *ptr, vx_uint32 index, const vx_imagepatch_addressing_t *addr)$/;"	f
vxFormatImagePatchAddress2d	api/vx_api.cpp	/^VX_API_ENTRY void * VX_API_CALL vxFormatImagePatchAddress2d(void *ptr, vx_uint32 x, vx_uint32 y, const vx_imagepatch_addressing_t *addr)$/;"	f
vxGaussian3x3Node	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxGaussian3x3Node(vx_graph graph, vx_image input, vx_image output)$/;"	f
vxGaussianPyramidNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxGaussianPyramidNode(vx_graph graph, vx_image input, vx_pyramid gaussian)$/;"	f
vxGetContext	api/vx_api.cpp	/^VX_API_ENTRY vx_context VX_API_CALL vxGetContext(vx_reference reference)$/;"	f
vxGetContextImageFormatDescription	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxGetContextImageFormatDescription(vx_context context, vx_df_image format, AgoImageFormatDescription * desc)$/;"	f
vxGetGraphParameterByIndex	api/vx_api.cpp	/^VX_API_ENTRY vx_parameter VX_API_CALL vxGetGraphParameterByIndex(vx_graph graph, vx_uint32 index)$/;"	f
vxGetKernelByEnum	api/vx_api.cpp	/^VX_API_ENTRY vx_kernel VX_API_CALL vxGetKernelByEnum(vx_context context, vx_enum kernel)$/;"	f
vxGetKernelByName	api/vx_api.cpp	/^VX_API_ENTRY vx_kernel VX_API_CALL vxGetKernelByName(vx_context context, const vx_char *name)$/;"	f
vxGetKernelParameterByIndex	api/vx_api.cpp	/^VX_API_ENTRY vx_parameter VX_API_CALL vxGetKernelParameterByIndex(vx_kernel kernel, vx_uint32 index)$/;"	f
vxGetModuleHandle	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxGetModuleHandle(vx_node node, const vx_char * module, void ** ptr)$/;"	f
vxGetModuleInternalData	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxGetModuleInternalData(vx_context context, const vx_char * module, void ** ptr, vx_size * size)$/;"	f
vxGetParameterByIndex	api/vx_api.cpp	/^VX_API_ENTRY vx_parameter VX_API_CALL vxGetParameterByIndex(vx_node node, vx_uint32 index)$/;"	f
vxGetPyramidLevel	api/vx_api.cpp	/^VX_API_ENTRY vx_image VX_API_CALL vxGetPyramidLevel(vx_pyramid pyr, vx_uint32 index)$/;"	f
vxGetReferenceFromDelay	api/vx_api.cpp	/^VX_API_ENTRY vx_reference VX_API_CALL vxGetReferenceFromDelay(vx_delay delay, vx_int32 index)$/;"	f
vxGetReferenceName	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxGetReferenceName(vx_reference ref, vx_char name[], vx_size size)$/;"	f
vxGetRemapPoint	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxGetRemapPoint(vx_remap table,$/;"	f
vxGetStatus	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxGetStatus(vx_reference reference)$/;"	f
vxGetValidRegionImage	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxGetValidRegionImage(vx_image image_, vx_rectangle_t *rect)$/;"	f
vxHalfScaleGaussianNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxHalfScaleGaussianNode(vx_graph graph, vx_image input, vx_image output, vx_int32 kernel_size)$/;"	f
vxHarrisCornersNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxHarrisCornersNode(vx_graph graph,$/;"	f
vxHint	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxHint(vx_reference reference, vx_enum hint, const void* data, vx_size data_size)$/;"	f
vxHistogramNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxHistogramNode(vx_graph graph, vx_image input, vx_distribution distribution)$/;"	f
vxImageHeight	include/VX/vx_khr_tiling.h	120;"	d
vxImageOffset	include/VX/vx_khr_tiling.h	315;"	d
vxImagePixel	include/VX/vx_khr_tiling.h	331;"	d
vxImageWidth	include/VX/vx_khr_tiling.h	127;"	d
vxIntegralImageNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxIntegralImageNode(vx_graph graph, vx_image input, vx_image output)$/;"	f
vxIsGraphVerified	api/vx_api.cpp	/^VX_API_ENTRY vx_bool VX_API_CALL vxIsGraphVerified(vx_graph graph)$/;"	f
vxIsTensorAliased	api/vx_api.cpp	/^VX_API_ENTRY vx_bool VX_API_CALL vxIsTensorAliased(vx_tensor tensorMaster, vx_size offset, vx_tensor tensor)$/;"	f
vxLoadKernels	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxLoadKernels(vx_context context, const vx_char *module)$/;"	f
vxMagnitudeNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxMagnitudeNode(vx_graph graph, vx_image grad_x, vx_image grad_y, vx_image mag)$/;"	f
vxMapArrayRange	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxMapArrayRange(vx_array array, vx_size range_start, vx_size range_end, vx_map_id *map_id, vx_size *stride, void **ptr, vx_enum usage, vx_enum mem_type, vx_uint32 flags)$/;"	f
vxMapDistribution	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxMapDistribution(vx_distribution distribution, vx_map_id *map_id, void **ptr, vx_enum usage, vx_enum mem_type, vx_bitfield flags)$/;"	f
vxMapImagePatch	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxMapImagePatch(vx_image image_, const vx_rectangle_t *rect, vx_uint32 plane_index, vx_map_id *map_id, vx_imagepatch_addressing_t *addr, void **ptr, vx_enum usage, vx_enum mem_type, vx_uint32 flags)$/;"	f
vxMapLUT	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxMapLUT(vx_lut lut, vx_map_id *map_id, void **ptr, vx_enum usage, vx_enum mem_type, vx_bitfield flags)$/;"	f
vxMapTensorPatch	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxMapTensorPatch(vx_tensor tensor, vx_size num_of_dims, const vx_size * roi_start, const vx_size * roi_end, vx_map_id * map_id, vx_size * stride, void ** ptr, vx_enum usage, vx_enum mem_type, vx_uint32 flags)$/;"	f
vxMeanStdDevNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxMeanStdDevNode(vx_graph graph, vx_image input, vx_scalar mean, vx_scalar stddev)$/;"	f
vxMedian3x3Node	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxMedian3x3Node(vx_graph graph, vx_image input, vx_image output)$/;"	f
vxMinMaxLocNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxMinMaxLocNode(vx_graph graph,$/;"	f
vxMultiplyNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxMultiplyNode(vx_graph graph, vx_image in1, vx_image in2, vx_scalar scale, vx_enum overflow_policy, vx_enum rounding_policy, vx_image out)$/;"	f
vxNeighborhoodBottom	include/VX/vx_khr_tiling.h	199;"	d
vxNeighborhoodLeft	include/VX/vx_khr_tiling.h	178;"	d
vxNeighborhoodRight	include/VX/vx_khr_tiling.h	185;"	d
vxNeighborhoodTop	include/VX/vx_khr_tiling.h	192;"	d
vxNotNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxNotNode(vx_graph graph, vx_image input, vx_image output)$/;"	f
vxOpticalFlowPyrLKNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxOpticalFlowPyrLKNode(vx_graph graph,$/;"	f
vxOrNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxOrNode(vx_graph graph, vx_image in1, vx_image in2, vx_image out)$/;"	f
vxPhaseNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxPhaseNode(vx_graph graph, vx_image grad_x, vx_image grad_y, vx_image orientation)$/;"	f
vxProcessGraph	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxProcessGraph(vx_graph graph)$/;"	f
vxQueryArray	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryArray(vx_array arr, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryContext	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryContext(vx_context context, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryConvolution	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryConvolution(vx_convolution conv, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryDelay	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryDelay(vx_delay delay, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryDistribution	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryDistribution(vx_distribution distribution, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryGraph	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryGraph(vx_graph graph, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryImage	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryImage(vx_image image_, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryKernel	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryKernel(vx_kernel kernel, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryLUT	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryLUT(vx_lut lut, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryMatrix	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryMatrix(vx_matrix mat, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryNode	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryNode(vx_node node, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryParameter	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryParameter(vx_parameter param, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryPyramid	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryPyramid(vx_pyramid pyr, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryReference	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryReference(vx_reference ref, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryRemap	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryRemap(vx_remap r, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryScalar	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryScalar(vx_scalar scalar, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryTensor	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryTensor(vx_tensor tensor, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxQueryThreshold	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxQueryThreshold(vx_threshold thresh, vx_enum attribute, void *ptr, vx_size size)$/;"	f
vxReadConvolutionCoefficients	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReadConvolutionCoefficients(vx_convolution conv, vx_int16 *array)$/;"	f
vxReadMatrix	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReadMatrix(vx_matrix mat, void *array)$/;"	f
vxReadScalarValue	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReadScalarValue(vx_scalar ref, void *ptr)$/;"	f
vxRegisterAutoAging	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxRegisterAutoAging(vx_graph graph, vx_delay delay_)$/;"	f
vxRegisterLogCallback	api/vx_api.cpp	/^VX_API_ENTRY void VX_API_CALL vxRegisterLogCallback(vx_context context, vx_log_callback_f callback, vx_bool reentrant)$/;"	f
vxRegisterUserStruct	api/vx_api.cpp	/^VX_API_ENTRY vx_enum VX_API_CALL vxRegisterUserStruct(vx_context context, vx_size size)$/;"	f
vxReleaseArray	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseArray(vx_array *arr)$/;"	f
vxReleaseContext	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseContext(vx_context *context)$/;"	f
vxReleaseConvolution	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseConvolution(vx_convolution *conv)$/;"	f
vxReleaseDelay	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseDelay(vx_delay *delay)$/;"	f
vxReleaseDistribution	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseDistribution(vx_distribution *distribution)$/;"	f
vxReleaseGraph	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseGraph(vx_graph *graph)$/;"	f
vxReleaseImage	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseImage(vx_image *image)$/;"	f
vxReleaseKernel	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseKernel(vx_kernel *kernel)$/;"	f
vxReleaseLUT	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseLUT(vx_lut *lut)$/;"	f
vxReleaseMatrix	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseMatrix(vx_matrix *mat)$/;"	f
vxReleaseNode	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseNode(vx_node *node)$/;"	f
vxReleaseParameter	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseParameter(vx_parameter *param)$/;"	f
vxReleasePyramid	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleasePyramid(vx_pyramid *pyr)$/;"	f
vxReleaseReference	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseReference(vx_reference* ref_ptr)$/;"	f
vxReleaseRemap	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseRemap(vx_remap *table)$/;"	f
vxReleaseScalar	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseScalar(vx_scalar *scalar)$/;"	f
vxReleaseTensor	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseTensor(vx_tensor *tensor)$/;"	f
vxReleaseThreshold	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReleaseThreshold(vx_threshold *thresh)$/;"	f
vxRemapNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxRemapNode(vx_graph graph,$/;"	f
vxRemoveKernel	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxRemoveKernel(vx_kernel kernel)$/;"	f
vxRemoveNode	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxRemoveNode(vx_node *node)$/;"	f
vxReplicateNode	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxReplicateNode(vx_graph graph, vx_node first_node, vx_bool replicate[], vx_uint32 number_of_parameters)$/;"	f
vxRetainReference	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxRetainReference(vx_reference ref)$/;"	f
vxRetrieveNodeCallback	api/vx_api.cpp	/^VX_API_ENTRY vx_nodecomplete_f VX_API_CALL vxRetrieveNodeCallback(vx_node node)$/;"	f
vxScaleImageNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxScaleImageNode(vx_graph graph, vx_image src, vx_image dst, vx_enum type)$/;"	f
vxScheduleGraph	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxScheduleGraph(vx_graph graph)$/;"	f
vxSetContextAttribute	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetContextAttribute(vx_context context, vx_enum attribute, const void *ptr, vx_size size)$/;"	f
vxSetContextImageFormatDescription	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetContextImageFormatDescription(vx_context context, vx_df_image format, const AgoImageFormatDescription * desc)$/;"	f
vxSetConvolutionAttribute	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetConvolutionAttribute(vx_convolution conv, vx_enum attribute, const void *ptr, vx_size size)$/;"	f
vxSetGraphAttribute	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetGraphAttribute(vx_graph graph, vx_enum attribute, const void *ptr, vx_size size)$/;"	f
vxSetGraphParameterByIndex	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetGraphParameterByIndex(vx_graph graph, vx_uint32 index, vx_reference value)$/;"	f
vxSetImageAttribute	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetImageAttribute(vx_image image_, vx_enum attribute, const void *ptr, vx_size size)$/;"	f
vxSetImageValidRectangle	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetImageValidRectangle(vx_image image_, const vx_rectangle_t *rect)$/;"	f
vxSetImmediateModeTarget	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetImmediateModeTarget(vx_context context, vx_enum target_enum, const char* target_string)$/;"	f
vxSetKernelAttribute	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetKernelAttribute(vx_kernel kernel, vx_enum attribute, const void *ptr, vx_size size)$/;"	f
vxSetMetaFormatAttribute	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetMetaFormatAttribute(vx_meta_format meta, vx_enum attribute, const void *ptr, vx_size size)$/;"	f
vxSetMetaFormatFromReference	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetMetaFormatFromReference(vx_meta_format meta, vx_reference exemplar)$/;"	f
vxSetModuleHandle	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetModuleHandle(vx_node node, const vx_char * module, void * ptr)$/;"	f
vxSetModuleInternalData	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetModuleInternalData(vx_context context, const vx_char * module, void * ptr, vx_size size)$/;"	f
vxSetNodeAttribute	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetNodeAttribute(vx_node node, vx_enum attribute, const void *ptr, vx_size size)$/;"	f
vxSetNodeTarget	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetNodeTarget(vx_node node, vx_enum target_enum, const char* target_string)$/;"	f
vxSetParameterByIndex	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetParameterByIndex(vx_node node, vx_uint32 index, vx_reference value)$/;"	f
vxSetParameterByReference	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetParameterByReference(vx_parameter parameter, vx_reference value)$/;"	f
vxSetReferenceName	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetReferenceName(vx_reference ref, const vx_char *name)$/;"	f
vxSetRemapPoint	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetRemapPoint(vx_remap table,$/;"	f
vxSetThresholdAttribute	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSetThresholdAttribute(vx_threshold thresh, vx_enum attribute, const void *ptr, vx_size size)$/;"	f
vxSobel3x3Node	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxSobel3x3Node(vx_graph graph, vx_image input, vx_image output_x, vx_image output_y)$/;"	f
vxSubtractNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxSubtractNode(vx_graph graph, vx_image in1, vx_image in2, vx_enum policy, vx_image out)$/;"	f
vxSwapImageHandle	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSwapImageHandle(vx_image image_, void* const new_ptrs[], void* prev_ptrs[], vx_size num_planes)$/;"	f
vxSwapTensorHandle	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxSwapTensorHandle(vx_tensor tensor, void * new_ptr, void** prev_ptr)$/;"	f
vxTableLookupNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxTableLookupNode(vx_graph graph, vx_image input, vx_lut lut, vx_image output)$/;"	f
vxThresholdNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxThresholdNode(vx_graph graph, vx_image input, vx_threshold thesh, vx_image output)$/;"	f
vxTileBlockHeight	include/VX/vx_khr_tiling.h	164;"	d
vxTileBlockWidth	include/VX/vx_khr_tiling.h	171;"	d
vxTileHeight	include/VX/vx_khr_tiling.h	157;"	d
vxTileWidth	include/VX/vx_khr_tiling.h	149;"	d
vxTileX	include/VX/vx_khr_tiling.h	134;"	d
vxTileY	include/VX/vx_khr_tiling.h	141;"	d
vxTruncateArray	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxTruncateArray(vx_array arr, vx_size new_num_items)$/;"	f
vxUnloadKernels	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxUnloadKernels(vx_context context, const vx_char *module)$/;"	f
vxUnmapArrayRange	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxUnmapArrayRange(vx_array array, vx_map_id map_id)$/;"	f
vxUnmapDistribution	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxUnmapDistribution(vx_distribution distribution, vx_map_id map_id)$/;"	f
vxUnmapImagePatch	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxUnmapImagePatch(vx_image image_, vx_map_id map_id)$/;"	f
vxUnmapLUT	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxUnmapLUT(vx_lut lut, vx_map_id map_id)$/;"	f
vxUnmapTensorPatch	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxUnmapTensorPatch(vx_tensor tensor, vx_map_id map_id)$/;"	f
vxVerifyGraph	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxVerifyGraph(vx_graph graph)$/;"	f
vxWaitGraph	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxWaitGraph(vx_graph graph)$/;"	f
vxWarpAffineNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxWarpAffineNode(vx_graph graph, vx_image input, vx_matrix matrix, vx_enum type, vx_image output)$/;"	f
vxWarpPerspectiveNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxWarpPerspectiveNode(vx_graph graph, vx_image input, vx_matrix matrix, vx_enum type, vx_image output)$/;"	f
vxWriteConvolutionCoefficients	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxWriteConvolutionCoefficients(vx_convolution conv, const vx_int16 *array)$/;"	f
vxWriteMatrix	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxWriteMatrix(vx_matrix mat, const void *array)$/;"	f
vxWriteScalarValue	api/vx_api.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxWriteScalarValue(vx_scalar ref, const void *ptr)$/;"	f
vxXorNode	api/vx_nodes.cpp	/^VX_API_ENTRY vx_node VX_API_CALL vxXorNode(vx_graph graph, vx_image in1, vx_image in2, vx_image out)$/;"	f
vx_accessor_e	include/VX/vx_types.h	/^enum vx_accessor_e {$/;"	g
vx_action	include/VX/vx_types.h	/^typedef vx_enum vx_action;$/;"	t
vx_action_e	include/VX/vx_types.h	/^enum vx_action_e {$/;"	g
vx_array	include/VX/vx_types.h	/^typedef struct _vx_array *vx_array;$/;"	t	typeref:struct:_vx_array
vx_array_attribute_e	include/VX/vx_types.h	/^enum vx_array_attribute_e {$/;"	g
vx_bitfield	include/VX/vx_types.h	/^typedef uint32_t vx_bitfield;$/;"	t
vx_bool	include/VX/vx_types.h	/^typedef vx_enum vx_bool;$/;"	t
vx_bool_e	include/VX/vx_types.h	/^} vx_bool_e;$/;"	t	typeref:enum:_vx_bool_e
vx_border_e	include/VX/vx_types.h	/^enum vx_border_e {$/;"	g
vx_border_mode_e	include/VX/vx_compatibility.h	23;"	d
vx_border_mode_policy_e	include/VX/vx_compatibility.h	24;"	d
vx_border_mode_t	include/VX/vx_compatibility.h	26;"	d
vx_border_policy_e	include/VX/vx_types.h	/^enum vx_border_policy_e {$/;"	g
vx_border_t	include/VX/vx_types.h	/^} vx_border_t;$/;"	t	typeref:struct:_vx_border_t
vx_border_tiling_e	include/VX/vx_khr_tiling.h	/^enum vx_border_tiling_e {$/;"	g
vx_channel_e	include/VX/vx_types.h	/^enum vx_channel_e {$/;"	g
vx_channel_range_e	include/VX/vx_types.h	/^enum vx_channel_range_e {$/;"	g
vx_char	include/VX/vx_types.h	/^typedef char     vx_char;$/;"	t
vx_class_enum_e	include/VX/vx_khr_class.h	/^enum vx_class_enum_e$/;"	g
vx_classifier_model	include/VX/vx_khr_class.h	/^typedef struct _vx_classifier_model* vx_classifier_model;$/;"	t	typeref:struct:_vx_classifier_model
vx_classifier_model_format_e	include/VX/vx_khr_class.h	/^enum vx_classifier_model_format_e $/;"	g
vx_classifier_type_e	include/VX/vx_khr_class.h	/^enum vx_classifier_type_e {$/;"	g
vx_color_space_amd_e	include/vx_ext_amd.h	/^enum vx_color_space_amd_e {$/;"	g
vx_color_space_e	include/VX/vx_types.h	/^enum vx_color_space_e {$/;"	g
vx_comp_metric_e	include/VX/vx_types.h	/^enum vx_comp_metric_e$/;"	g
vx_context	include/VX/vx_types.h	/^typedef struct _vx_context *vx_context;$/;"	t	typeref:struct:_vx_context
vx_context_attribute_amd_e	include/vx_ext_amd.h	/^enum vx_context_attribute_amd_e {$/;"	g
vx_context_attribute_e	include/VX/vx_types.h	/^enum vx_context_attribute_e {$/;"	g
vx_convert_policy_e	include/VX/vx_types.h	/^enum vx_convert_policy_e {$/;"	g
vx_convolution	include/VX/vx_types.h	/^typedef struct _vx_convolution *vx_convolution;$/;"	t	typeref:struct:_vx_convolution
vx_convolution_attribute_e	include/VX/vx_types.h	/^enum vx_convolution_attribute_e {$/;"	g
vx_coordinates2d_t	include/VX/vx_types.h	/^} vx_coordinates2d_t;$/;"	t	typeref:struct:_vx_coordinates2d_t
vx_coordinates2df_t	include/VX/vx_types.h	/^} vx_coordinates2df_t;$/;"	t	typeref:struct:_vx_coordinates2df_t
vx_coordinates3d_t	include/VX/vx_types.h	/^} vx_coordinates3d_t;$/;"	t	typeref:struct:_vx_coordinates3d_t
vx_delay	include/VX/vx_types.h	/^typedef struct _vx_delay *vx_delay;$/;"	t	typeref:struct:_vx_delay
vx_delay_attribute_e	include/VX/vx_types.h	/^enum vx_delay_attribute_e {$/;"	g
vx_delta_rectangle_t	include/VX/vx_compatibility.h	/^} vx_delta_rectangle_t;$/;"	t	typeref:struct:_vx_delta_rectangle_t
vx_df_image	include/VX/vx_types.h	/^typedef uint32_t vx_df_image;$/;"	t
vx_df_image_amd_e	include/vx_ext_amd.h	/^enum vx_df_image_amd_e {$/;"	g
vx_df_image_e	include/VX/vx_types.h	/^enum vx_df_image_e {$/;"	g
vx_direction_e	include/VX/vx_types.h	/^enum vx_direction_e {$/;"	g
vx_directive_amd_e	include/vx_ext_amd.h	/^enum vx_directive_amd_e {$/;"	g
vx_directive_e	include/VX/vx_types.h	/^enum vx_directive_e {$/;"	g
vx_distribution	include/VX/vx_types.h	/^typedef struct _vx_distribution *vx_distribution;$/;"	t	typeref:struct:_vx_distribution
vx_distribution_attribute_e	include/VX/vx_types.h	/^enum vx_distribution_attribute_e {$/;"	g
vx_enum	include/VX/vx_types.h	/^typedef int32_t vx_enum;$/;"	t
vx_enum_e	include/VX/vx_types.h	/^enum vx_enum_e {$/;"	g
vx_ext_import_type_e	include/VX/vx_khr_xml.h	/^enum vx_ext_import_type_e {$/;"	g
vx_ext_import_types_e	include/VX/vx_khr_xml.h	/^enum vx_ext_import_types_e {$/;"	g
vx_false_e	include/VX/vx_types.h	/^    vx_false_e = 0,$/;"	e	enum:_vx_bool_e
vx_float16	include/VX/vx_types.h	/^typedef hfloat   vx_float16;$/;"	t
vx_float32	include/VX/vx_types.h	/^typedef float    vx_float32;$/;"	t
vx_float64	include/VX/vx_types.h	/^typedef double   vx_float64;$/;"	t
vx_graph	include/VX/vx_types.h	/^typedef struct _vx_graph *vx_graph;$/;"	t	typeref:struct:_vx_graph
vx_graph_attribute_amd_e	include/vx_ext_amd.h	/^enum vx_graph_attribute_amd_e {$/;"	g
vx_graph_attribute_e	include/VX/vx_types.h	/^enum vx_graph_attribute_e {$/;"	g
vx_graph_state_e	include/VX/vx_types.h	/^enum vx_graph_state_e {$/;"	g
vx_hint_e	include/VX/vx_types.h	/^enum vx_hint_e {$/;"	g
vx_hog_t	include/VX/vx_types.h	/^} vx_hog_t;$/;"	t	typeref:struct:__anon24
vx_hough_lines_p_t	include/VX/vx_types.h	/^} vx_hough_lines_p_t;$/;"	t	typeref:struct:_vx_hough_lines_p_t
vx_image	include/VX/vx_types.h	/^typedef struct _vx_image *vx_image;$/;"	t	typeref:struct:_vx_image
vx_image_attribute_amd_e	include/vx_ext_amd.h	/^enum vx_image_attribute_amd_e {$/;"	g
vx_image_attribute_e	include/VX/vx_types.h	/^enum vx_image_attribute_e {$/;"	g
vx_image_description_t	include/VX/vx_khr_tiling.h	/^} vx_image_description_t;$/;"	t	typeref:struct:_vx_image_description_t
vx_imagepatch_addressing_t	include/VX/vx_types.h	/^} vx_imagepatch_addressing_t;$/;"	t	typeref:struct:_vx_imagepatch_addressing_t
vx_import	include/VX/vx_import.h	/^typedef struct _vx_import *vx_import;$/;"	t	typeref:struct:_vx_import
vx_import	include/VX/vx_khr_xml.h	/^typedef struct _vx_import *vx_import;$/;"	t	typeref:struct:_vx_import
vx_import_attribute_e	include/VX/vx_khr_xml.h	/^enum vx_import_attribute_e {$/;"	g
vx_import_type_e	include/VX/vx_compatibility.h	143;"	d
vx_int16	include/VX/vx_types.h	/^typedef int16_t  vx_int16;$/;"	t
vx_int32	include/VX/vx_types.h	/^typedef int32_t  vx_int32;$/;"	t
vx_int64	include/VX/vx_types.h	/^typedef int64_t  vx_int64;$/;"	t
vx_int8	include/VX/vx_types.h	/^typedef int8_t   vx_int8;$/;"	t
vx_interpolation_type_e	include/VX/vx_types.h	/^enum vx_interpolation_type_e {$/;"	g
vx_kernel	include/VX/vx_types.h	/^typedef struct _vx_kernel *vx_kernel;$/;"	t	typeref:struct:_vx_kernel
vx_kernel_amd_e	ago/ago_kernels.h	/^enum vx_kernel_amd_e {$/;"	g
vx_kernel_attribute_amd_e	include/vx_ext_amd.h	/^enum vx_kernel_attribute_amd_e {$/;"	g
vx_kernel_attribute_e	include/VX/vx_types.h	/^enum vx_kernel_attribute_e {$/;"	g
vx_kernel_attribute_tiling_e	include/VX/vx_khr_tiling.h	/^enum vx_kernel_attribute_tiling_e {$/;"	g
vx_kernel_deinitialize_f	include/VX/vx_types.h	/^typedef vx_status(VX_CALLBACK *vx_kernel_deinitialize_f)(vx_node node, const vx_reference *parameters, vx_uint32 num);$/;"	t
vx_kernel_e	include/VX/vx_kernels.h	/^enum vx_kernel_e {$/;"	g
vx_kernel_f	include/VX/vx_types.h	/^typedef vx_status(VX_CALLBACK *vx_kernel_f)(vx_node node, const vx_reference *parameters, vx_uint32 num);$/;"	t
vx_kernel_image_valid_rectangle_f	include/VX/vx_types.h	/^typedef vx_status(VX_CALLBACK *vx_kernel_image_valid_rectangle_f)(vx_node node, vx_uint32 index, const vx_rectangle_t* const input_valid[], vx_rectangle_t* const output_valid[]);$/;"	t
vx_kernel_info_t	include/VX/vx_types.h	/^} vx_kernel_info_t;$/;"	t	typeref:struct:_vx_kernel_info_t
vx_kernel_initialize_f	include/VX/vx_types.h	/^typedef vx_status(VX_CALLBACK *vx_kernel_initialize_f)(vx_node node, const vx_reference *parameters, vx_uint32 num);$/;"	t
vx_kernel_input_validate_f	include/VX/vx_compatibility.h	/^typedef vx_status(VX_CALLBACK *vx_kernel_input_validate_f)(vx_node node, vx_uint32 index);$/;"	t
vx_kernel_nn_ext_e	include/VX/vx_khr_class.h	/^enum vx_kernel_nn_ext_e {$/;"	g
vx_kernel_nn_ext_e	include/VX/vx_khr_nn.h	/^enum vx_kernel_nn_ext_e {$/;"	g
vx_kernel_output_validate_f	include/VX/vx_compatibility.h	/^typedef vx_status(VX_CALLBACK *vx_kernel_output_validate_f)(vx_node node, vx_uint32 index, vx_meta_format meta);$/;"	t
vx_kernel_validate_f	include/VX/vx_types.h	/^typedef vx_status(VX_CALLBACK *vx_kernel_validate_f)(vx_node node, const vx_reference parameters[], vx_uint32 num, vx_meta_format metas[]);$/;"	t
vx_keypoint_t	include/VX/vx_types.h	/^} vx_keypoint_t;$/;"	t	typeref:struct:_vx_keypoint_t
vx_lbp_format_e	include/VX/vx_types.h	/^enum vx_lbp_format_e$/;"	g
vx_library_e	include/VX/vx_kernels.h	/^enum vx_library_e {$/;"	g
vx_line2d_t	include/VX/vx_types.h	/^} vx_line2d_t;$/;"	t	typeref:struct:_vx_line2d_t
vx_log_callback_f	include/VX/vx_types.h	/^typedef void (VX_CALLBACK *vx_log_callback_f)(vx_context context,$/;"	t
vx_lut	include/VX/vx_types.h	/^typedef struct _vx_lut *vx_lut;$/;"	t	typeref:struct:_vx_lut
vx_lut_attribute_e	include/VX/vx_types.h	/^enum vx_lut_attribute_e {$/;"	g
vx_map_flag_e	include/VX/vx_types.h	/^enum vx_map_flag_e {$/;"	g
vx_map_id	include/VX/vx_types.h	/^typedef uintptr_t vx_map_id;$/;"	t
vx_matrix	include/VX/vx_types.h	/^typedef struct _vx_matrix *vx_matrix;$/;"	t	typeref:struct:_vx_matrix
vx_matrix_attribute_e	include/VX/vx_types.h	/^enum vx_matrix_attribute_e {$/;"	g
vx_memory_type_amd_e	include/vx_ext_amd.h	/^enum vx_memory_type_amd_e {$/;"	g
vx_memory_type_e	include/VX/vx_types.h	/^enum vx_memory_type_e {$/;"	g
vx_meta_format	include/VX/vx_types.h	/^typedef struct _vx_meta_format* vx_meta_format;$/;"	t	typeref:struct:_vx_meta_format
vx_meta_valid_rect_attribute_e	include/VX/vx_types.h	/^enum vx_meta_valid_rect_attribute_e {$/;"	g
vx_neighborhood_size_t	include/VX/vx_khr_tiling.h	/^} vx_neighborhood_size_t;$/;"	t	typeref:struct:_vx_neighborhood_size_t
vx_nn_activation_function_e	include/VX/vx_khr_nn.h	/^enum vx_nn_activation_function_e$/;"	g
vx_nn_convolution_params_t	include/VX/vx_khr_nn.h	/^} vx_nn_convolution_params_t;$/;"	t	typeref:struct:_vx_nn_convolution_params_t
vx_nn_deconvolution_params_t	include/VX/vx_khr_nn.h	/^} vx_nn_deconvolution_params_t;$/;"	t	typeref:struct:_vx_nn_deconvolution_params_t
vx_nn_enum_e	include/VX/vx_khr_nn.h	/^enum vx_nn_enum_e$/;"	g
vx_nn_norm_type_e	include/VX/vx_khr_nn.h	/^enum vx_nn_norm_type_e$/;"	g
vx_nn_pooling_type_e	include/VX/vx_khr_nn.h	/^enum vx_nn_pooling_type_e$/;"	g
vx_nn_roi_pool_params_t	include/VX/vx_khr_nn.h	/^} vx_nn_roi_pool_params_t;$/;"	t	typeref:struct:_vx_nn_roi_pool_params_t
vx_nn_rounding_type_e	include/VX/vx_khr_nn.h	/^enum vx_nn_rounding_type_e$/;"	g
vx_nn_type_e	include/VX/vx_khr_nn.h	/^enum vx_nn_type_e {$/;"	g
vx_node	include/VX/vx_types.h	/^typedef struct _vx_node *vx_node;$/;"	t	typeref:struct:_vx_node
vx_node_attribute_amd_e	include/vx_ext_amd.h	/^enum vx_node_attribute_amd_e {$/;"	g
vx_node_attribute_e	include/VX/vx_types.h	/^enum vx_node_attribute_e {$/;"	g
vx_node_attribute_tiling_e	include/VX/vx_khr_tiling.h	/^enum vx_node_attribute_tiling_e {$/;"	g
vx_nodecomplete_f	include/VX/vx_types.h	/^typedef vx_action (VX_CALLBACK *vx_nodecomplete_f)(vx_node node);$/;"	t
vx_non_linear_filter_e	include/VX/vx_types.h	/^enum vx_non_linear_filter_e {$/;"	g
vx_norm_type_e	include/VX/vx_types.h	/^enum vx_norm_type_e {$/;"	g
vx_object_array	include/VX/vx_types.h	/^typedef struct _vx_object_array *vx_object_array;$/;"	t	typeref:struct:_vx_object_array
vx_object_array_attribute_e	include/VX/vx_types.h	/^enum vx_object_array_attribute_e {$/;"	g
vx_parameter	include/VX/vx_types.h	/^typedef struct _vx_parameter *vx_parameter;$/;"	t	typeref:struct:_vx_parameter
vx_parameter_attribute_e	include/VX/vx_types.h	/^enum vx_parameter_attribute_e {$/;"	g
vx_parameter_state_e	include/VX/vx_types.h	/^enum vx_parameter_state_e {$/;"	g
vx_pattern_e	include/VX/vx_types.h	/^enum vx_pattern_e {$/;"	g
vx_perf_t	include/VX/vx_types.h	/^} vx_perf_t;$/;"	t	typeref:struct:_vx_perf_t
vx_pixel_value_t	include/VX/vx_types.h	/^} vx_pixel_value_t;$/;"	t	typeref:union:_vx_pixel_value_t
vx_platform	include/VX/vx_khr_icd.h	/^typedef struct _vx_platform * vx_platform;$/;"	t	typeref:struct:_vx_platform
vx_publish_kernels_f	include/VX/vx_types.h	/^typedef vx_status(VX_API_CALL *vx_publish_kernels_f)(vx_context context);$/;"	t
vx_pyramid	include/VX/vx_types.h	/^typedef struct _vx_pyramid *vx_pyramid;$/;"	t	typeref:struct:_vx_pyramid
vx_pyramid_attribute_e	include/VX/vx_types.h	/^enum vx_pyramid_attribute_e {$/;"	g
vx_rectangle_t	include/VX/vx_types.h	/^} vx_rectangle_t;$/;"	t	typeref:struct:_vx_rectangle_t
vx_reference	include/VX/vx_types.h	/^typedef struct _vx_reference *vx_reference;$/;"	t	typeref:struct:_vx_reference
vx_reference_attribute_e	include/VX/vx_types.h	/^enum vx_reference_attribute_e {$/;"	g
vx_remap	include/VX/vx_types.h	/^typedef struct _vx_remap *vx_remap;$/;"	t	typeref:struct:_vx_remap
vx_remap_attribute_e	include/VX/vx_types.h	/^enum vx_remap_attribute_e {$/;"	g
vx_round_policy_e	include/VX/vx_types.h	/^enum vx_round_policy_e {$/;"	g
vx_scalar	include/VX/vx_types.h	/^typedef struct _vx_scalar *vx_scalar;$/;"	t	typeref:struct:_vx_scalar
vx_scalar_attribute_e	include/VX/vx_types.h	/^enum vx_scalar_attribute_e {$/;"	g
vx_scalar_operation_e	include/VX/vx_types.h	/^enum vx_scalar_operation_e {$/;"	g
vx_semaphore	ago/ago_platform.cpp	/^} vx_semaphore;$/;"	t	typeref:struct:__anon23	file:
vx_size	include/VX/vx_types.h	/^typedef size_t vx_size;$/;"	t
vx_status	include/VX/vx_types.h	/^typedef vx_enum vx_status;$/;"	t
vx_status_e	include/VX/vx_types.h	/^enum vx_status_e {$/;"	g
vx_target_e	include/VX/vx_types.h	/^enum vx_target_e {$/;"	g
vx_tensor	include/VX/vx_types.h	/^typedef struct _vx_tensor_t * vx_tensor;$/;"	t	typeref:struct:_vx_tensor_t
vx_tensor	include/vx_ext_amd.h	/^typedef struct _vx_tensor_t * vx_tensor;$/;"	t	typeref:struct:_vx_tensor_t
vx_tensor_attribute_amd_e	include/vx_ext_amd.h	/^enum vx_tensor_attribute_amd_e {$/;"	g
vx_tensor_attribute_e	include/VX/vx_types.h	/^enum vx_tensor_attribute_e$/;"	g
vx_tensor_matrix_multiply_params_t	include/VX/vx_types.h	/^} vx_tensor_matrix_multiply_params_t;$/;"	t	typeref:struct:_vx_tensor_matrix_multiply_params_t
vx_termination_criteria_e	include/VX/vx_types.h	/^enum vx_termination_criteria_e {$/;"	g
vx_threshold	include/VX/vx_types.h	/^typedef struct _vx_threshold *vx_threshold;$/;"	t	typeref:struct:_vx_threshold
vx_threshold_attribute_e	include/VX/vx_types.h	/^enum vx_threshold_attribute_e {$/;"	g
vx_threshold_type_e	include/VX/vx_types.h	/^enum vx_threshold_type_e {$/;"	g
vx_tile_block_size_t	include/VX/vx_khr_tiling.h	/^} vx_tile_block_size_t;$/;"	t	typeref:struct:_vx_tile_block_size_t
vx_tile_t	include/VX/vx_khr_tiling.h	/^} vx_tile_t;$/;"	t	typeref:struct:_vx_tile_t
vx_tiling_kernel_f	include/VX/vx_khr_tiling.h	/^typedef void (*vx_tiling_kernel_f)(void * VX_RESTRICT parameters[VX_RESTRICT],$/;"	t
vx_tiling_kernel_f	include/VX/vx_khr_tiling.h	/^typedef void (*vx_tiling_kernel_f)(void * VX_RESTRICT parameters[],$/;"	t
vx_true_e	include/VX/vx_types.h	/^    vx_true_e,$/;"	e	enum:_vx_bool_e
vx_type_e	include/VX/vx_types.h	/^enum vx_type_e {$/;"	g
vx_uint16	include/VX/vx_types.h	/^typedef uint16_t vx_uint16;$/;"	t
vx_uint32	include/VX/vx_types.h	/^typedef uint32_t vx_uint32;$/;"	t
vx_uint64	include/VX/vx_types.h	/^typedef uint64_t vx_uint64;$/;"	t
vx_uint8	include/VX/vx_types.h	/^typedef uint8_t  vx_uint8;$/;"	t
vx_unpublish_kernels_f	include/VX/vx_types.h	/^typedef vx_status(VX_API_CALL *vx_unpublish_kernels_f)(vx_context context);$/;"	t
vx_useImmediateBorderMode	api/vxu.cpp	/^static vx_status vx_useImmediateBorderMode(vx_context context, vx_node node)$/;"	f	file:
vx_vendor_id_e	include/VX/vx_vendors.h	/^enum vx_vendor_id_e {$/;"	g
vxuAbsDiff	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuAbsDiff(vx_context context, vx_image in1, vx_image in2, vx_image out)$/;"	f
vxuAccumulateImage	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuAccumulateImage(vx_context context, vx_image input, vx_image accum)$/;"	f
vxuAccumulateSquareImage	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuAccumulateSquareImage(vx_context context, vx_image input, vx_scalar scale, vx_image accum)$/;"	f
vxuAccumulateWeightedImage	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuAccumulateWeightedImage(vx_context context, vx_image input, vx_scalar scale, vx_image accum)$/;"	f
vxuAdd	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuAdd(vx_context context, vx_image in1, vx_image in2, vx_enum policy, vx_image out)$/;"	f
vxuAnd	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuAnd(vx_context context, vx_image in1, vx_image in2, vx_image out)$/;"	f
vxuBox3x3	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuBox3x3(vx_context context, vx_image input, vx_image output)$/;"	f
vxuCannyEdgeDetector	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuCannyEdgeDetector(vx_context context, vx_image input, vx_threshold hyst,$/;"	f
vxuChannelCombine	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuChannelCombine(vx_context context,$/;"	f
vxuChannelExtract	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuChannelExtract(vx_context context, vx_image src, vx_enum channel, vx_image dst)$/;"	f
vxuColorConvert	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuColorConvert(vx_context context, vx_image src, vx_image dst)$/;"	f
vxuConvertDepth	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuConvertDepth(vx_context context, vx_image input, vx_image output, vx_enum policy, vx_int32 shift)$/;"	f
vxuConvolve	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuConvolve(vx_context context, vx_image input, vx_convolution conv, vx_image output)$/;"	f
vxuDilate3x3	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuDilate3x3(vx_context context, vx_image input, vx_image output)$/;"	f
vxuEqualizeHist	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuEqualizeHist(vx_context context, vx_image input, vx_image output)$/;"	f
vxuErode3x3	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuErode3x3(vx_context context, vx_image input, vx_image output)$/;"	f
vxuFastCorners	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuFastCorners(vx_context context, vx_image input, vx_scalar sens, vx_bool nonmax, vx_array corners, vx_scalar num_corners)$/;"	f
vxuGaussian3x3	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuGaussian3x3(vx_context context, vx_image input, vx_image output)$/;"	f
vxuGaussianPyramid	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuGaussianPyramid(vx_context context, vx_image input, vx_pyramid gaussian)$/;"	f
vxuHalfScaleGaussian	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuHalfScaleGaussian(vx_context context, vx_image input, vx_image output, vx_int32 kernel_size)$/;"	f
vxuHarrisCorners	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuHarrisCorners(vx_context context, vx_image input,$/;"	f
vxuHistogram	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuHistogram(vx_context context, vx_image input, vx_distribution distribution)$/;"	f
vxuIntegralImage	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuIntegralImage(vx_context context, vx_image input, vx_image output)$/;"	f
vxuMagnitude	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuMagnitude(vx_context context, vx_image grad_x, vx_image grad_y, vx_image dst)$/;"	f
vxuMeanStdDev	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuMeanStdDev(vx_context context, vx_image input, vx_float32 *mean, vx_float32 *stddev)$/;"	f
vxuMedian3x3	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuMedian3x3(vx_context context, vx_image input, vx_image output)$/;"	f
vxuMinMaxLoc	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuMinMaxLoc(vx_context context, vx_image input,$/;"	f
vxuMultiply	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuMultiply(vx_context context, vx_image in1, vx_image in2, vx_float32 scale, vx_enum overflow_policy, vx_enum rounding_policy, vx_image out)$/;"	f
vxuNot	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuNot(vx_context context, vx_image input, vx_image out)$/;"	f
vxuOpticalFlowPyrLK	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuOpticalFlowPyrLK(vx_context context, vx_pyramid old_images,$/;"	f
vxuOr	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuOr(vx_context context, vx_image in1, vx_image in2, vx_image out)$/;"	f
vxuPhase	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuPhase(vx_context context, vx_image grad_x, vx_image grad_y, vx_image dst)$/;"	f
vxuRemap	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuRemap(vx_context context, vx_image input, vx_remap table, vx_enum policy, vx_image output)$/;"	f
vxuScaleImage	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuScaleImage(vx_context context, vx_image src, vx_image dst, vx_enum type)$/;"	f
vxuSetGraphAffinityDefault	api/vxu.cpp	/^static void vxuSetGraphAffinityDefault(vx_graph graph)$/;"	f	file:
vxuSobel3x3	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuSobel3x3(vx_context context, vx_image src, vx_image output_x, vx_image output_y)$/;"	f
vxuSubtract	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuSubtract(vx_context context, vx_image in1, vx_image in2, vx_enum policy, vx_image out)$/;"	f
vxuTableLookup	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuTableLookup(vx_context context, vx_image input, vx_lut lut, vx_image output)$/;"	f
vxuThreshold	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuThreshold(vx_context context, vx_image input, vx_threshold thresh, vx_image output)$/;"	f
vxuWarpAffine	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuWarpAffine(vx_context context, vx_image input, vx_matrix matrix, vx_enum type, vx_image output)$/;"	f
vxuWarpPerspective	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuWarpPerspective(vx_context context, vx_image input, vx_matrix matrix, vx_enum type, vx_image output)$/;"	f
vxuXor	api/vxu.cpp	/^VX_API_ENTRY vx_status VX_API_CALL vxuXor(vx_context context, vx_image in1, vx_image in2, vx_image out)$/;"	f
width	ago/ago_haf_cpu.h	/^	vx_uint32      width;$/;"	m	struct:__anon18
width	ago/ago_haf_cpu.h	/^	vx_uint32 width;$/;"	m	struct:__anon22
width	ago/ago_internal.h	/^	vx_uint32 width;$/;"	m	struct:AgoConfigImage
width	ago/ago_internal.h	/^	vx_uint32 width;$/;"	m	struct:AgoConfigPyramid
width	ago/ago_internal.h	/^	vx_uint32 width;$/;"	m	struct:AgoSuperNode
width	include/VX/vx_khr_tiling.h	/^    vx_int32 width; \/*!< \\brief Tile block width in pixels. *\/$/;"	m	struct:_vx_tile_block_size_t
width	include/VX/vx_khr_tiling.h	/^    vx_uint32 width;  \/*!< \\brief Width of the image *\/$/;"	m	struct:_vx_image_description_t
window	ago/ago_internal.h	/^	vx_uint32 window;$/;"	m	struct:AgoConfigDistribution
window_height	include/VX/vx_types.h	/^    vx_int32 window_height;$/;"	m	struct:__anon24
window_stride	include/VX/vx_types.h	/^    vx_int32 window_stride;$/;"	m	struct:__anon24
window_width	include/VX/vx_types.h	/^    vx_int32 window_width;$/;"	m	struct:__anon24
write_count	ago/ago_internal.h	/^	vx_uint32    write_count;     \/\/ number of times object has been written$/;"	m	struct:AgoReference
x	ago/ago_haf_cpu.h	/^	vx_float32 x;$/;"	m	struct:__anon14
x	ago/ago_haf_cpu.h	/^	vx_float32 x;$/;"	m	struct:__anon21
x	ago/ago_haf_cpu.h	/^	vx_int16   x; \/\/ x-coordinate$/;"	m	struct:__anon17
x	ago/ago_haf_cpu.h	/^	vx_int16 x;$/;"	m	struct:__anon12
x	ago/ago_haf_cpu.h	/^	vx_int32 x;$/;"	m	struct:__anon13
x	ago/ago_haf_cpu.h	/^	vx_uint16 x;$/;"	m	struct:__anon11
x	ago/ago_haf_cpu_opticalflow.cpp	/^	vx_float32 x;                 \/*!< \\brief The x coordinate. *\/$/;"	m	struct:__anon7	file:
x	ago/ago_haf_cpu_opticalflow.cpp	/^	vx_int32 x;                 \/*!< \\brief The x coordinate. *\/$/;"	m	struct:__anon8	file:
x	include/VX/vx_types.h	/^    vx_float32 x;    \/*!< \\brief The X coordinate. *\/$/;"	m	struct:_vx_coordinates2df_t
x	include/VX/vx_types.h	/^    vx_int32 x;                 \/*!< \\brief The x coordinate. *\/$/;"	m	struct:_vx_keypoint_t
x	include/VX/vx_types.h	/^    vx_uint32 x;    \/*!< \\brief The X coordinate. *\/$/;"	m	struct:_vx_coordinates2d_t
x	include/VX/vx_types.h	/^    vx_uint32 x;    \/*!< \\brief The X coordinate. *\/$/;"	m	struct:_vx_coordinates3d_t
x_scale_factor_is_2	ago/ago_internal.h	/^	vx_uint32 x_scale_factor_is_2; \/\/ will be 0 or 1$/;"	m	struct:AgoConfigImage
xoffset	ago/ago_internal.h	/^	vx_float32 xoffset;$/;"	m	struct:AgoConfigScaleMatrix
xscale	ago/ago_internal.h	/^	vx_float32 xscale;$/;"	m	struct:AgoConfigScaleMatrix
y	ago/ago_haf_cpu.h	/^	vx_float32 y;$/;"	m	struct:__anon14
y	ago/ago_haf_cpu.h	/^	vx_float32 y;$/;"	m	struct:__anon21
y	ago/ago_haf_cpu.h	/^	vx_int16   y; \/\/ y-coordinate$/;"	m	struct:__anon17
y	ago/ago_haf_cpu.h	/^	vx_int16 y;$/;"	m	struct:__anon12
y	ago/ago_haf_cpu.h	/^	vx_int32 y;$/;"	m	struct:__anon13
y	ago/ago_haf_cpu.h	/^	vx_uint16 y;$/;"	m	struct:__anon11
y	ago/ago_haf_cpu_opticalflow.cpp	/^	vx_float32 y;                 \/*!< \\brief The y coordinate. *\/$/;"	m	struct:__anon7	file:
y	ago/ago_haf_cpu_opticalflow.cpp	/^	vx_int32 y;                 \/*!< \\brief The y coordinate. *\/$/;"	m	struct:__anon8	file:
y	include/VX/vx_types.h	/^    vx_float32 y;    \/*!< \\brief The Y coordinate. *\/$/;"	m	struct:_vx_coordinates2df_t
y	include/VX/vx_types.h	/^    vx_int32 y;                 \/*!< \\brief The y coordinate. *\/$/;"	m	struct:_vx_keypoint_t
y	include/VX/vx_types.h	/^    vx_uint32 y;    \/*!< \\brief The Y coordinate. *\/$/;"	m	struct:_vx_coordinates2d_t
y	include/VX/vx_types.h	/^    vx_uint32 y;    \/*!< \\brief The Y coordinate. *\/$/;"	m	struct:_vx_coordinates3d_t
y_scale_factor_is_2	ago/ago_internal.h	/^	vx_uint32 y_scale_factor_is_2; \/\/ will be 0 or 1$/;"	m	struct:AgoConfigImage
yoffset	ago/ago_internal.h	/^	vx_float32 yoffset;$/;"	m	struct:AgoConfigScaleMatrix
yscale	ago/ago_internal.h	/^	vx_float32 yscale;$/;"	m	struct:AgoConfigScaleMatrix
z	include/VX/vx_types.h	/^    vx_uint32 z;    \/*!< \\brief The Z coordinate. *\/$/;"	m	struct:_vx_coordinates3d_t
~AgoContext	ago/ago_util.cpp	/^AgoContext::~AgoContext()$/;"	f	class:AgoContext
~AgoData	ago/ago_util.cpp	/^AgoData::~AgoData()$/;"	f	class:AgoData
~AgoGraph	ago/ago_util.cpp	/^AgoGraph::~AgoGraph()$/;"	f	class:AgoGraph
~AgoKernel	ago/ago_util.cpp	/^AgoKernel::~AgoKernel()$/;"	f	class:AgoKernel
~AgoNode	ago/ago_util.cpp	/^AgoNode::~AgoNode()$/;"	f	class:AgoNode
~AgoParameter	ago/ago_util.cpp	/^AgoParameter::~AgoParameter()$/;"	f	class:AgoParameter
~AgoReference	ago/ago_util.cpp	/^AgoReference::~AgoReference()$/;"	f	class:AgoReference
~AgoSuperNode	ago/ago_util.cpp	/^AgoSuperNode::~AgoSuperNode()$/;"	f	class:AgoSuperNode
~CAgoLock	ago/ago_internal.h	/^	~CAgoLock() { LeaveCriticalSection(m_cs); }$/;"	f	class:CAgoLock
~CAgoLockGlobalContext	ago/ago_internal.h	/^	~CAgoLockGlobalContext() { agoUnlockGlobalContext(); }$/;"	f	class:CAgoLockGlobalContext
